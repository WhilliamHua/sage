C51 COMPILER V9.50a   SHARK                                                                07/26/2013 11:07:39 PAGE 1   


C51 COMPILER V9.50a, COMPILATION OF MODULE SHARK
OBJECT MODULE PLACED IN .\shark.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE ..\src\shark.c BROWSE DEBUG OBJECTEXTEND CODE SYMBOLS PRINT(.\shark.lst) TA
                    -BS(2) OBJECT(.\shark.obj)

line level    source

   1          #include "stdarg.h"
   2          #include "stdio.h"
   3          #include "stdlib.h"
   4          #include "type_def.h"
   5          #include "REG52x2.h"
   6          #include "common.h"
   7          #include "reg_def.h"
   8          #include "ncq.h"
   9          #include "buf_cmd.h"
  10          #include "sata_proc.h"
  11          #include "ata_cmd.h"
  12          #include "shark.h"
  13          #include "uart.h"
  14          #include "chp.h"
  15          #include "smart.h"
  16          #include "trim.h"
  17          #include "security.h"
  18          
  19          #include "uart.c"
  20          #include "sata_proc.c"
  21          #include "ata_cmd.c"
  22          #include "ncq.c"
  23          #include "buf_cmd.c"
  24          #include "debug.c"
  25          #include "chp.c"
  26          #include "smart.c"
  27          #include "trim.c"
  28          #include "security.c"
  29          
  30          void main()
  31          {
  32   1          init();
  33   1         
  34   1          while(1)
  35   1          {
  36   2              #ifdef BUF_CMD_EN
                          //todo: if NCQ error, need additional control here???
                              cmd_buffer_check();
                      #endif
  40   2              //check new fis received from host(exclude data fis)
  41   2              //sata.led0_cntl = 0x80;      //rom is using 0xd4
  42   2              if(g_current_fis_num != SFR_fis_num)
  43   2              { 
  44   3                  //sata.led0_cntl = 0x00;      //rom is using 0xd4
  45   3                  sata.led0_blink = 0x44;
  46   3                  //myprintf("\nSR0:%x",SFR_FIS0_1);
  47   3                  //todo: add an led1 here.
  48   3                  //myprintf("\nfine a new cmd:%x",SFR_FIS0_2);
  49   3                  
  50   3                  g_current_fis_num = SFR_fis_num;
  51   3                  
  52   3                  //clear the fis27 flag.
  53   3                  sata.ncq_cntl = (sata.ncq_cntl & (~ncq_cntl_new_fis27));
  54   3                  
C51 COMPILER V9.50a   SHARK                                                                07/26/2013 11:07:39 PAGE 2   

  55   3                  //if in SLEEP mode, only respond to SRST. Please refer to ATA8 Charpter 7.55.2
  56   3                  
  57   3            //TODO: need to open this after this is tested.
  58   3                  //if(g_power_mode == power_mode_sleep)goto check_control; 
  59   3      
  60   3            
  61   3                  #ifdef SUPPORT_NCQ
                          if(g_ncq_halt)
                          {
                             if(check_ncq_read_log);
                             //else goto Over;
                             else continue;
                          }
                    #endif
  69   3                  
  70   3                  //open the CHP clock
  71   3                  chp_clock_on();
  72   3            
  73   3                  #ifdef SUPPORT_SMART1
  74   3                  if(g_smart_power_down_flag == 1)
  75   3                  {
  76   4                      updata_smart(smart_power_down_addr,0x01);
  77   4                      g_smart_power_down_flag = 0;
  78   4                      reset_engine();
  79   4                  }
  80   3                  #endif
  81   3      
  82   3                  //this will load the sector count
  83   3                  check_sec_cnt();
  84   3                  //myprintf("\nsec_cnt:%x",g_sec_cnt.byte.l);
  85   3                  check_lba();
  86   3          //myprintf("\nLBAchk0:%x");
  87   3          
  88   3                  if(SFR_quick_cmd!=0)
  89   3                  {
  90   4                      #ifdef SUPPORT_SECURITY
  91   4                      //analyze_states();
  92   4                      g_security_prepared = 0;
  93   4                      if(g_security_lock == 1) 
  94   4                      {
  95   5                      tx_fis_34(status_bad, error_abort,int_set);
  96   5                      }
  97   4                      else
  98   4                      #endif
  99   4                      {
 100   5                          #ifdef BUF_CMD_EN
                                  if(SFR_quick_cmd & quick_cmd_write_dma)
                                  {
              
                                      //break buffer command flow:
                                      //(1)continue command
                                      //(2)chs mode command
                                      //(3)counter > threshold
                            if(check_chs_cmd)
                            {
                              if(buf_not_empty) g_current_fis_num--;
                              else
                              { 
                                chs_write_handle();
                                buf_check_cnt = 0x00;
                              }
                            }
C51 COMPILER V9.50a   SHARK                                                                07/26/2013 11:07:39 PAGE 3   

                                      else if(normal_cmd_cont || (g_sec_cnt.word == 0x0000) || (g_sec_cnt.byte.h!=0x00) 
             -|| (g_sec_cnt.byte.l >BUF_SEC_CNT_THRESHOLD) ||(g_enable_write_cache == 0))
                                      {
                                           
                                           if(buf_not_empty) g_current_fis_num--;
                                           else
                                           {
                                              write_handler();
                                              buf_check_cnt = 0x00;
                                           }
                                           
                                      } 
                                      else if(buf_check_cnt<BUF_START_CNT)
                                      {
                                          if(buf_not_empty) g_current_fis_num--;
                                          else
                                          {
                                             write_handler();
                                             buf_check_cnt++;
                                          }
                                      }
                                      else
                                      {      
                                           check_lba();
                                           //the if will not happen
                                           if(g_flag_lba_err)
                                           {
                                               tx_fis_34(status_bad,error_abort,int_set);
                                               reset_engine();
                                           }
                                           else
                                           {
                                               buf_sector_num.word = 0;
                                               buf_cmd_flag = DEF_CHP_EN;
                                               cmd_buffer_set_param();
                                               //TODO: add reset_engine here???
                                               g_cont_en = 0;
                                           }
                                       }
                                  }
                                  //need to flush all data in FIFO before other commands
                                  else if(buf_not_empty)g_current_fis_num--;                     
                                  #else
 159   5                          if(SFR_quick_cmd & quick_cmd_write_dma)
 160   5                          {
 161   6                    if(check_chs_cmd)chs_write_handle();
 162   6                    else write_handler();
 163   6                          }
 164   5                          #endif
 165   5                          
 166   5                                                            
 167   5                       
 168   5                          //(2)this is read_dma or read_dma_ext
 169   5                          else if(SFR_quick_cmd & quick_cmd_read_dma)
 170   5                          {  
 171   6                             // myprintf("\nr");
 172   6                     if(check_chs_cmd)chs_read_handle();
 173   6                             else read_handler();
 174   6           
 175   6                          }
 176   5                          else if(SFR_quick_cmd & (quick_cmd_write_mul | quick_cmd_write_sec))  
 177   5                          {              
C51 COMPILER V9.50a   SHARK                                                                07/26/2013 11:07:39 PAGE 4   

 178   6                              g_flag_dir = DIR_WRITE;
 179   6                              pio_write_handler();              
 180   6                           }   
 181   5                          
 182   5                          //(4)read pio: read_sector([ext]) or read_multiple([ext])
 183   5                          //else if((SFR_quick_cmd&quick_cmd_read_mul) || (SFR_quick_cmd&quick_cmd_read_sec));
 184   5                          else if(SFR_quick_cmd & (quick_cmd_read_mul | quick_cmd_read_sec))
 185   5                          {
 186   6                             g_flag_dir = DIR_READ;
 187   6                             pio_read_handler();
 188   6                          }
 189   5                          g_power_mode = power_mode_act;
 190   5                      }
 191   4                  }
 192   3                  else if(SFR_FIS0_0 == 0x27)//this is H2D fis
 193   3                  { 
 194   4                      #ifdef BUF_CMD_EN
                              if(buf_not_empty)g_current_fis_num--; 
                              else if((SFR_FIS0_1 & 0x80) !=0) //this is a command, not control
                              #else
 198   4                      if((SFR_FIS0_1 & 0x80) !=0) //this is a command, not control
 199   4                      #endif
 200   4                      {
 201   5                          #ifdef SUPPORT_SECURITY
 202   5                          if(SFR_FIS0_2 != ata_security_erase_unit) g_security_prepared = 0;
 203   5                          #endif
 204   5                          if(SFR_FIS0_2 == ata_write_dma_fua_ext)
 205   5                          {
 206   6                              write_handler();
 207   6                    g_power_mode = power_mode_act; 
 208   6                          }
 209   5                          else if(SFR_FIS0_2 == ata_write_multi_fua_ext)
 210   5                          {
 211   6                              g_flag_dir = DIR_WRITE;
 212   6                              pio_write_handler(); 
 213   6                  g_power_mode = power_mode_act;                        
 214   6                          }
 215   5                          
 216   5                          #ifdef SUPPORT_NCQ
                                  else if(SFR_FIS0_2 == ata_read_fpdma)
                                  {
                                      g_flag_dir = DIR_READ;
                                      ncq_resp_cmd();
                                      g_power_mode = power_mode_act;
                                  }
                                  else if(SFR_FIS0_2 == ata_write_fpdma)
                                  {
                                      g_flag_dir = DIR_WRITE;
                                      ncq_resp_cmd();
                                      g_power_mode = power_mode_act;
                                  }
                                  #endif
 230   5                          else
 231   5                          {
 232   6                              reset_engine();
 233   6                              switch(SFR_FIS0_2)//this is the ata command index
 234   6                              {  
 235   7                              
 236   7                                  //NCQ
 237   7                                  #ifdef SUPPORT_NCQ
                                      
                                          case ata_ncq_management:
C51 COMPILER V9.50a   SHARK                                                                07/26/2013 11:07:39 PAGE 5   

                                          {
                                              ncq_management_hander();
                                              g_power_mode = power_mode_act;
                                              break;
                                          }
                                      
                                          case ata_read_log_ext:
                                          {
                                              ncq_read_log();
                                              g_power_mode = power_mode_act;
                                              break;
                                          }        
                                          case ata_read_log_dma_ext:
                                          {
                                              ncq_read_log();
                                              g_power_mode = power_mode_act;
                                              break;
                                          }
                                      
                                          #endif
 260   7                              ///////////////////////////////////////////////////
 261   7                              ///////////BASIC
 262   7                              ///////////////////////////////////////////////////
 263   7                                  case ata_nop:                   
 264   7                                  {
 265   8                                      //note: sub-code is used for overlapped feature support.
 266   8                                      tx_fis_34(status_bad, error_abort,int_set); 
 267   8                                      break;
 268   8                                  }
 269   7                                  case  ata_seek: 
 270   7                                  {
 271   8                                      //this is sent by host to signify the device that it may access the specif
             -ied address in the following commands
 272   8                                  
 273   8                                      if(g_flag_lba_err) tx_fis_34(status_bad,error_abort, int_set);
 274   8                                      else tx_fis_34(status_good,error_no,int_set);
 275   8                                      g_power_mode = power_mode_act;
 276   8                                      break;              
 277   8                                  }
 278   7                                  case ata_recalibrate:
 279   7                                  {
 280   8                                      //this is vendor specific - ATA4
 281   8                                      tx_fis_34(status_good,error_no,int_set);
 282   8                                      break;
 283   8                                  }
 284   7                                  case ata_exec_diag:
 285   7                                  {
 286   8                                      init_tx_fis();
 287   8                                      tx_fis_34(status_bad&0xf2,0x01,int_set);       //0x01h indicated device0 p
             -assed and device1 not present
 288   8                                      break;
 289   8                                  }
 290   7                                  case  ata_init_dev_para:  
 291   7                                  {
 292   8                                      //this is to set CHS translation.
 293   8                                      //todo: change the setting of hardware operation: CHS translation.
 294   8                                      init_dev_para();
 295   8                                      break;              
 296   8                                  }
 297   7                                  case ata_flush_cache:
 298   7                                  {
 299   8                                  //TODO: flush the CHPs.
C51 COMPILER V9.50a   SHARK                                                                07/26/2013 11:07:39 PAGE 6   

 300   8                                  //This command is used by the host to request the device to flush the write ca
             -che. If there is data in the write
 301   8                                  //cache, that data shall be written to the media. This command shall not indic
             -ation completion until the data is
 302   8                                  //flushed to the media or an error occurs.
 303   8                                  //NOTE . This command may take longer than 30 s to complete.
 304   8                                      flush_delay();
 305   8                                      tx_fis_34(status_good,error_no,int_set);
 306   8                                      g_power_mode = power_mode_act;
 307   8                                      break;
 308   8                                  }
 309   7                                  case ata_flush_cache_ext:
 310   7                                  {
 311   8                                    flush_delay();
 312   8                                      tx_fis_34(status_good,error_no,int_set);
 313   8                                      g_power_mode = power_mode_act;
 314   8                                      break;
 315   8                                  }
 316   7                                  case ata_read_verify: //this command wasn't completed, the write protect error
             - should be took into accout
 317   7                                  {
 318   8                                      if(g_flag_lba_err) tx_fis_34(status_bad,error_abort, int_set);
 319   8                                      else tx_fis_34(status_good,error_no,int_set);
 320   8                                      g_power_mode = power_mode_act;
 321   8                                      break;  
 322   8                                  }
 323   7                                  case ata_read_verify_ext:  //this command wasn't completed, the write protect 
             -error should be took into accout
 324   7                                  {
 325   8                                      if(g_flag_lba_err) tx_fis_34(status_bad,error_abort, int_set);
 326   8                                      else tx_fis_34(status_good,error_no,int_set);
 327   8                                      g_power_mode = power_mode_act;
 328   8                                      break;  
 329   8                                  }
 330   7      
 331   7                                  #ifdef SUPPORT_SMART
 332   7      
 333   7                                  case ata_smart:
 334   7                                  {
 335   8                                      //myprintf("\nsmart_handler");
 336   8                                      smart_handler();
 337   8                                      break;
 338   8                                  }
 339   7                              
 340   7                                  #endif
 341   7      
 342   7                             
 343   7                              case ata_data_set_management:
 344   7                              {
 345   8                                  #ifdef SUPPORT_TRIM
 346   8                                      //if(check_sd_mode) tx_fis_34(status_good,error_no,int_set);
 347   8                                      //else 
 348   8                                      if((sata.FIS_seccnt_ext !=0)||(sata.FIS_seccnt >0x20)||((sata.FIS_seccnt_e
             -xt==0)&&(sata.FIS_seccnt==0)))
 349   8                                      {
 350   9                                           tx_fis_34(status_good,error_no,int_set);
 351   9                                      }
 352   8                                      else  trim_handler();
 353   8                                  #else
                                              tx_fis_34(status_good,error_no,int_set);
                                          #endif
 356   8                                  
C51 COMPILER V9.50a   SHARK                                                                07/26/2013 11:07:39 PAGE 7   

 357   8                                  break;
 358   8                                  
 359   8                              }
 360   7                              
 361   7      
 362   7                                  ////////////////////////////////////////////////////
 363   7                                  /////POWER MANAGEMENT FEATURE SET
 364   7                                  ////////////////////////////////////////////////////
 365   7                                  case ata_chk_power_mode:
 366   7                                  {
 367   8                                      sata.FIS_seccnt=g_power_mode;
 368   8                                      tx_fis_34(status_good,error_no,int_set);
 369   8                                  
 370   8                                      break;
 371   8                                  }
 372   7                                  case ata_idle:
 373   7                                  {
 374   8                                      flush_delay();
 375   8                                      g_power_mode=power_mode_idle;
 376   8                                      tx_fis_34(status_good,error_no,int_set);
 377   8                                      break;
 378   8                                  } 
 379   7                                  case ata_idle_imd:
 380   7                                  { 
 381   8                                      flush_delay();
 382   8                                      g_power_mode=power_mode_idle;
 383   8                                      tx_fis_34(status_good,error_no,int_set);
 384   8                                      break;                                                                    
             -                            
 385   8                                  }
 386   7                                  case ata_sleep:
 387   7                                  {  
 388   8                                      flush_delay();
 389   8                                      g_power_mode=power_mode_sleep;
 390   8                                      tx_fis_34(status_good,error_no,int_set);
 391   8                                      break;                                                                    
             -         
 392   8                                  }
 393   7                                  case ata_standby:
 394   7                                  {
 395   8                                      flush_delay();
 396   8                                      g_power_mode=power_mode_standby;
 397   8                                      tx_fis_34(status_good,error_no,int_set);                           
 398   8                                      break; 
 399   8                                  }
 400   7                                  case ata_standby_imd:
 401   7                                  {  
 402   8                                      flush_delay();
 403   8                                      g_power_mode=power_mode_standby;
 404   8                                      tx_fis_34(status_good,error_no,int_set);
 405   8                                      break;                                                                    
             -                                   
 406   8                                  }
 407   7                              
 408   7                              ///////////////////////////////////////////////////////
 409   7                              ///////////////////////////////////////////////////////
 410   7                                  case ata_identify_device:
 411   7                                  {
 412   8                                      identify_device();
 413   8                                      break;
 414   8                                  }
 415   7                                  case ata_set_multiple:
C51 COMPILER V9.50a   SHARK                                                                07/26/2013 11:07:39 PAGE 8   

 416   7                                  { 
 417   8                                      if(sata.fis_rcv_content[4*3+0] == 0x01)
 418   8                                      {
 419   9                                      // we support transmitting 1 sector per multiple operation only, so the id
             -entify_data[59] low will not change                      
 420   9                                      /*
 421   9                                                              identify_data[59] &= 0xff00;
 422   9                                                              identify_data[59] |=0x0001; 
 423   9                                                              */
 424   9                                          tx_fis_34(status_good,error_no,int_set);
 425   9                                          break;
 426   9                                      }  
 427   8                                      else
 428   8                                      {
 429   9                                          tx_fis_34(status_bad,error_abort,int_set);
 430   9                                          break;
 431   9                                      }
 432   8                                  }
 433   7                                  case ata_set_feature:
 434   7                                  {
 435   8                        set_feature();
 436   8                                      //tx_fis_34(status_good,error_no,int_set);
 437   8                                      break;
 438   8                                  }
 439   7                        case ata_security_freeze_lock:  //ok
 440   7                                  {
 441   8                                      #ifdef SUPPORT_SECURITY
 442   8                                      //analyze_states();
 443   8                                      //security_freeze_lock();
 444   8                                      //if(g_security_enable == 0) security_state_flag = SEC2;
 445   8                                      //else security_state_flag = SEC6;
 446   8                                      //analyze_states();
 447   8                                      #endif
 448   8                                      tx_fis_34(status_good,error_no,int_set);
 449   8                                      break;  
 450   8                                  }
 451   7      
 452   7                                  //////////////////////////////////////////////////
 453   7                                  #ifdef SUPPORT_SECURITY
 454   7                                  
 455   7                                  case ata_security_set_pwd:  //ok
 456   7                                  {
 457   8                                      //analyze_states();
 458   8                                      security_set_pwd();
 459   8                                      if(g_security_abort == 1) 
 460   8                                      {
 461   9                                          g_security_abort = 0;
 462   9                                          tx_fis_34(status_bad, error_abort,int_set);
 463   9                                      }
 464   8                                      else tx_fis_34(status_good,error_no,int_set);
 465   8                                      //analyze_states();
 466   8                                      break;
 467   8                                  }
 468   7                                  
 469   7                                  case ata_security_unlock:   //ok
 470   7                                  {
 471   8                                      //analyze_states();
 472   8                                      security_unlock();
 473   8                                      if(g_security_abort == 1) 
 474   8                                      {
 475   9                                          g_security_abort = 0;
 476   9                                          tx_fis_34(status_bad, error_abort,int_set);
C51 COMPILER V9.50a   SHARK                                                                07/26/2013 11:07:39 PAGE 9   

 477   9                                      }
 478   8                                      else 
 479   8                                      {
 480   9                                          
 481   9                                          //security_state_flag = SEC5;
 482   9                                          tx_fis_34(status_good,error_no,int_set);
 483   9                                      }
 484   8                                      //analyze_states();
 485   8                                      break;
 486   8                                  }
 487   7                                  #endif
 488   7                                  ///////////////////////////////////////////////
 489   7                                  
 490   7                    #ifdef SUPER_ERASE
 491   7                    case ata_down_microcode:
 492   7                    {
 493   8                                      if(sata.FIS_feature == 0xCC)//super erase
 494   8                      {
 495   9                          intial_data_partition();
 496   9                          tx_fis_34(status_good,error_no,int_set);
 497   9                                          break;
 498   9                                      }
 499   8                      else 
 500   8                      {
 501   9                        tx_fis_34(status_bad, error_abort,int_set); 
 502   9                        break;
 503   9                      }
 504   8                    }
 505   7                    #endif
 506   7      
 507   7                    #ifdef READ_ONLY
                                          case ata_read_only:
                                          {
                                              choose_mode();
                                              break;
                                          }
                                          #endif
 514   7                    
 515   7                                  default :
 516   7                    {
 517   8                                      tx_fis_34(status_bad, error_abort,int_set); 
 518   8                                      break;
 519   8                                  }
 520   7                              }
 521   6                          }
 522   5                      }
 523   4                      
 524   4                      else //control command process 
 525   4                      {
 526   5                          #ifdef BUF_CMD_EN
                                  buf_data_pending = 0;
                                  #endif
 529   5                          reset_engine();
 530   5                          //check_control:
 531   5                          //IF SRST
 532   5                          if((SFR_cmd_aux & 0x01)!=0) 
 533   5                          {
 534   6                              //wait until SRST is deasserted.
 535   6                              while((sata.fis_rcv_content[15] & 0x04)==0x04);
 536   6                              //clear the fis27 flag.
 537   6                              //sata.ncq_cntl = (sata.ncq_cntl & (~ncq_cntl_new_fis27));
 538   6                              //hardware latch the SRST state, firmware clear it.
C51 COMPILER V9.50a   SHARK                                                                07/26/2013 11:07:39 PAGE 10  

 539   6                              SFR_cmd_aux = 0x00;
 540   6                              g_current_fis_num = SFR_fis_num;
 541   6                              //only resonse when SRST is not set                        
 542   6                          }
 543   5      
 544   5                          //also response the other controls without SRST bit set.
 545   5                          if(g_power_mode != power_mode_sleep)
 546   5                          {
 547   6                              init_tx_fis();
 548   6                  //reset link(bit2) and transport(bit3).
 549   6                  //if SRST, we may recover from abnormal state
 550   6                              sata.rst_cntl = sata.rst_cntl | 0x0C;
 551   6                              delay(5);
 552   6                  sata.ncq_cntl = (sata.ncq_cntl & (~ncq_cntl_new_fis27));
 553   6                              tx_fis_34(status_good,0x01,int_no);
 554   6                              #ifdef SUPPORT_SMART1
 555   6                              updata_smart(smart_softrst_num_addr,0x01);
 556   6                              reset_engine();
 557   6                              #endif
 558   6                          }
 559   5                      }
 560   4                  }
 561   3                  else if(SFR_FIS0_0 == 0x58)
 562   3                  {
 563   4                      bist_handler();
 564   4                  }
 565   3                  SFR_watch_dog_high = 0x00;
 566   3              }
 567   2              else
 568   2              {
 569   3                  //(1)if current loop has command, not handle DMA setup
 570   3                  //(2)if current loop handle DMA setup, not send SET DEV BITS FIS
 571   3                  //(3)otherwise send SET_DEV_BITS FIS
 572   3                  #ifdef SUPPORT_NCQ
                          ncq_handler();
                          #endif
 575   3              }
 576   2          #ifdef SUPPORT_SMART1
 577   2              if(check_sd_mode) smart_card_crc();
 578   2          else smart_block_handle();
 579   2          #endif
 580   2              
 581   2              /*
 582   2          if(g_power_mode == power_mode_idle)
 583   2          {
 584   2            if(SFR_watch_dog_high >= 0x20)  g_power_mode = power_mode_standby;      
 585   2          }
 586   2          */
 587   2          if((SFR_watch_dog_high > 0x30) && g_chp_active)chp_clock_off();
 588   2          }
 589   1          
 590   1      }
C51 COMPILER V9.50a   SHARK                                                                07/26/2013 11:07:39 PAGE 11  

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION L?0912 (BEGIN)
0000         L?0913:
0000 7FC8              MOV     R7,#0C8H
0002 7E00              MOV     R6,#00H
             ; FUNCTION _delay (BEGIN)
                                           ; SOURCE LINE # 158
;---- Variable 'cnt' assigned to Register 'R6/R7' ----
                                           ; SOURCE LINE # 159
                                           ; SOURCE LINE # 161
;---- Variable 'i' assigned to Register 'R4/R5' ----
0004 E4                CLR     A
0005 FD                MOV     R5,A
0006 FC                MOV     R4,A
0007         ?C0001:
0007 C3                CLR     C
0008 ED                MOV     A,R5
0009 9F                SUBB    A,R7
000A EC                MOV     A,R4
000B 9E                SUBB    A,R6
000C 5007              JNC     ?C0004
000E 0D                INC     R5
000F BD0001            CJNE    R5,#00H,?C0769
0012 0C                INC     R4
0013         ?C0769:
0013 80F2              SJMP    ?C0001
                                           ; SOURCE LINE # 162
0015         ?C0004:
0015 22                RET     
             ; FUNCTION _delay (END)

             ; FUNCTION _delay_ms (BEGIN)
                                           ; SOURCE LINE # 165
;---- Variable 'cnt' assigned to Register 'R2/R3' ----
0000 AB07              MOV     R3,AR7
0002 AA06              MOV     R2,AR6
                                           ; SOURCE LINE # 166
                                           ; SOURCE LINE # 168
;---- Variable 'i' assigned to Register 'DPTR' ----
0004 900000            MOV     DPTR,#00H
0007         ?C0005:
0007 C3                CLR     C
0008 E582              MOV     A,DPL
000A 9B                SUBB    A,R3
000B E583              MOV     A,DPH
000D 9A                SUBB    A,R2
000E 500A              JNC     ?C0008
                                           ; SOURCE LINE # 169
                                           ; SOURCE LINE # 170
0010 7FDC              MOV     R7,#0DCH
0012 7E07              MOV     R6,#07H
0014 120000      R     LCALL   _delay
                                           ; SOURCE LINE # 171
0017 A3                INC     DPTR
0018 80ED              SJMP    ?C0005
                                           ; SOURCE LINE # 172
001A         ?C0008:
001A 22                RET     
             ; FUNCTION _delay_ms (END)

C51 COMPILER V9.50a   SHARK                                                                07/26/2013 11:07:39 PAGE 12  

             ; FUNCTION L?0892 (BEGIN)
0000 90FF57            MOV     DPTR,#sata+057H
0003 F0                MOVX    @DPTR,A
0004 7A00        R     MOV     R2,#HIGH ?SC_98
0006 7900        R     MOV     R1,#LOW ?SC_98
0008         L?0893:
0008 7BFF              MOV     R3,#0FFH
000A         L?0894:
000A 90FF7D            MOV     DPTR,#sata+07DH
000D E0                MOVX    A,@DPTR
000E F500        R     MOV     ?_printu?BYTE+03H,A
0010 90FF7C            MOV     DPTR,#sata+07CH
0013 E0                MOVX    A,@DPTR
0014 F500        R     MOV     ?_printu?BYTE+04H,A
0016 90FF7B            MOV     DPTR,#sata+07BH
0019 E0                MOVX    A,@DPTR
001A F500        R     MOV     ?_printu?BYTE+05H,A
001C 90FF7A            MOV     DPTR,#sata+07AH
001F E0                MOVX    A,@DPTR
0020 F500        R     MOV     ?_printu?BYTE+06H,A
0022 90FF79            MOV     DPTR,#sata+079H
0025 E0                MOVX    A,@DPTR
0026 F500        R     MOV     ?_printu?BYTE+07H,A
0028 90FF78            MOV     DPTR,#sata+078H
002B E0                MOVX    A,@DPTR
002C F500        R     MOV     ?_printu?BYTE+08H,A
             ; FUNCTION _printu (BEGIN)
002E D3                SETB    C
002F 10AF01            JBC     EA,?C0770
0032 C3                CLR     C
0033         ?C0770:
0033 C0D0              PUSH    PSW
                                           ; SOURCE LINE # 5
0035 8B00        R     MOV     fmt,R3
0037 8A00        R     MOV     fmt+01H,R2
0039 8900        R     MOV     fmt+02H,R1
                                           ; SOURCE LINE # 6
                                           ; SOURCE LINE # 8
003B E4                CLR     A
003C 7800        R     MOV     R0,#LOW ch
003E F6                MOV     @R0,A
                                           ; SOURCE LINE # 12
003F 75A805            MOV     TS8052_IE,#05H
                                           ; SOURCE LINE # 14
0042 F500        R     MOV     ap,A
0044 750000      R     MOV     ap+01H,#HIGH fmt+03H
0047 750000      R     MOV     ap+02H,#LOW fmt+03H
004A         ?C0009:
                                           ; SOURCE LINE # 15
004A AB00        R     MOV     R3,fmt
004C AA00        R     MOV     R2,fmt+01H
004E A900        R     MOV     R1,fmt+02H
0050 120000      E     LCALL   ?C?CLDPTR
0053 FF                MOV     R7,A
0054 7003              JNZ     $ + 5H
0056 020000      R     LJMP    ?C0010
                                           ; SOURCE LINE # 16
                                           ; SOURCE LINE # 17
0059 6425              XRL     A,#025H
005B 6013              JZ      ?C0011
                                           ; SOURCE LINE # 18
                                           ; SOURCE LINE # 19
C51 COMPILER V9.50a   SHARK                                                                07/26/2013 11:07:39 PAGE 13  

005D 0500        R     INC     fmt+02H
005F E500        R     MOV     A,fmt+02H
0061 7002              JNZ     ?C0771
0063 0500        R     INC     fmt+01H
0065         ?C0771:
0065 14                DEC     A
0066 F9                MOV     R1,A
0067 120000      E     LCALL   ?C?CLDPTR
006A FF                MOV     R7,A
006B 120000      R     LCALL   _uart_tx_byte
                                           ; SOURCE LINE # 20
006E 80DA              SJMP    ?C0009
                                           ; SOURCE LINE # 21
0070         ?C0011:
                                           ; SOURCE LINE # 22
0070 AB00        R     MOV     R3,fmt
0072 0500        R     INC     fmt+02H
0074 E500        R     MOV     A,fmt+02H
0076 7002              JNZ     ?C0772
0078 0500        R     INC     fmt+01H
007A         ?C0772:
007A F9                MOV     R1,A
007B AA00        R     MOV     R2,fmt+01H
007D 120000      E     LCALL   ?C?CLDPTR
0080 249D              ADD     A,#09DH
0082 6045              JZ      ?C0018
0084 24EB              ADD     A,#0EBH
0086 6026              JZ      ?C0017
0088 2405              ADD     A,#05H
008A 7054              JNZ     ?C0019
                                           ; SOURCE LINE # 23
                                           ; SOURCE LINE # 24
008C         ?C0013:
                                           ; SOURCE LINE # 25
008C AB00        R     MOV     R3,ap
008E E500        R     MOV     A,ap+02H
0090 F9                MOV     R1,A
0091 2403              ADD     A,#03H
0093 F500        R     MOV     ap+02H,A
0095 E500        R     MOV     A,ap+01H
0097 FA                MOV     R2,A
0098 3400              ADDC    A,#00H
009A F500        R     MOV     ap+01H,A
009C 120000      E     LCALL   ?C?PLDPTR
009F 8900        R     MOV     s,R1
                                           ; SOURCE LINE # 26
00A1         ?C0014:
00A1 A800        R     MOV     R0,s
00A3 E6                MOV     A,@R0
00A4 FF                MOV     R7,A
00A5 6046              JZ      ?C0012
                                           ; SOURCE LINE # 27
00A7 120000      R     LCALL   _uart_tx_byte
00AA 0500        R     INC     s
00AC 80F3              SJMP    ?C0014
                                           ; SOURCE LINE # 28
                                           ; SOURCE LINE # 29
00AE         ?C0017:
                                           ; SOURCE LINE # 30
00AE AB00        R     MOV     R3,ap
00B0 0500        R     INC     ap+02H
00B2 E500        R     MOV     A,ap+02H
C51 COMPILER V9.50a   SHARK                                                                07/26/2013 11:07:39 PAGE 14  

00B4 AA00        R     MOV     R2,ap+01H
00B6 7002              JNZ     ?C0773
00B8 0500        R     INC     ap+01H
00BA         ?C0773:
00BA 14                DEC     A
00BB F9                MOV     R1,A
00BC 120000      E     LCALL   ?C?CLDPTR
00BF 7800        R     MOV     R0,#LOW d
00C1 F6                MOV     @R0,A
                                           ; SOURCE LINE # 31
00C2 E6                MOV     A,@R0
00C3 FF                MOV     R7,A
00C4 120000      R     LCALL   _uart_print_byte
                                           ; SOURCE LINE # 32
00C7 8024              SJMP    ?C0012
                                           ; SOURCE LINE # 34
00C9         ?C0018:
                                           ; SOURCE LINE # 35
00C9 AB00        R     MOV     R3,ap
00CB 0500        R     INC     ap+02H
00CD E500        R     MOV     A,ap+02H
00CF AA00        R     MOV     R2,ap+01H
00D1 7002              JNZ     ?C0774
00D3 0500        R     INC     ap+01H
00D5         ?C0774:
00D5 14                DEC     A
00D6 F9                MOV     R1,A
00D7 120000      E     LCALL   ?C?CLDPTR
00DA 7800        R     MOV     R0,#LOW ch
00DC F6                MOV     @R0,A
                                           ; SOURCE LINE # 36
00DD E6                MOV     A,@R0
                                           ; SOURCE LINE # 37
00DE 8009              SJMP    ?C0815
                                           ; SOURCE LINE # 39
00E0         ?C0019:
                                           ; SOURCE LINE # 40
00E0 AB00        R     MOV     R3,fmt
00E2 AA00        R     MOV     R2,fmt+01H
00E4 A900        R     MOV     R1,fmt+02H
00E6 120000      E     LCALL   ?C?CLDPTR
00E9         ?C0815:
00E9 FF                MOV     R7,A
00EA 120000      R     LCALL   _uart_tx_byte
                                           ; SOURCE LINE # 41
                                           ; SOURCE LINE # 42
00ED         ?C0012:
                                           ; SOURCE LINE # 43
00ED 7401              MOV     A,#01H
00EF 2500        R     ADD     A,fmt+02H
00F1 F500        R     MOV     fmt+02H,A
00F3 E4                CLR     A
00F4 3500        R     ADDC    A,fmt+01H
00F6 F500        R     MOV     fmt+01H,A
                                           ; SOURCE LINE # 44
00F8 020000      R     LJMP    ?C0009
00FB         ?C0010:
                                           ; SOURCE LINE # 46
00FB 120000      R     LCALL   L?0912
                                           ; SOURCE LINE # 48
00FE 75A885            MOV     TS8052_IE,#085H
                                           ; SOURCE LINE # 49
C51 COMPILER V9.50a   SHARK                                                                07/26/2013 11:07:39 PAGE 15  

0101 D0D0              POP     PSW
0103 92AF              MOV     EA,C
0105 22                RET     
             ; FUNCTION _printu (END)

             ; FUNCTION _uart_tx_byte (BEGIN)
0000 D3                SETB    C
0001 10AF01            JBC     EA,?C0775
0004 C3                CLR     C
0005         ?C0775:
0005 C0D0              PUSH    PSW
                                           ; SOURCE LINE # 53
;---- Variable 'tx_data' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 54
                                           ; SOURCE LINE # 57
0007 75A805            MOV     TS8052_IE,#05H
                                           ; SOURCE LINE # 58
000A 90FFE0            MOV     DPTR,#sata+0E0H
000D EF                MOV     A,R7
000E F0                MOVX    @DPTR,A
000F         ?C0021:
                                           ; SOURCE LINE # 59
000F 90FFD2            MOV     DPTR,#sata+0D2H
0012 E0                MOVX    A,@DPTR
0013 30E3F9            JNB     ACC.3,?C0021
0016         ?C0022:
                                           ; SOURCE LINE # 60
0016 120000      R     LCALL   L?0912
                                           ; SOURCE LINE # 62
0019 75A885            MOV     TS8052_IE,#085H
                                           ; SOURCE LINE # 64
001C D0D0              POP     PSW
001E 92AF              MOV     EA,C
0020 22                RET     
             ; FUNCTION _uart_tx_byte (END)

             ; FUNCTION _uart_print_byte (BEGIN)
0000 D3                SETB    C
0001 10AF01            JBC     EA,?C0776
0004 C3                CLR     C
0005         ?C0776:
0005 C0D0              PUSH    PSW
                                           ; SOURCE LINE # 67
;---- Variable 'tx_data' assigned to Register 'R3' ----
0007 AB07              MOV     R3,AR7
                                           ; SOURCE LINE # 68
                                           ; SOURCE LINE # 72
0009 75A805            MOV     TS8052_IE,#05H
                                           ; SOURCE LINE # 73
000C EB                MOV     A,R3
000D C4                SWAP    A
000E 540F              ANL     A,#0FH
0010 FF                MOV     R7,A
;---- Variable 'tmp_data' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 74
0011 D3                SETB    C
0012 9409              SUBB    A,#09H
0014 4006              JC      ?C0024
0016 7437              MOV     A,#037H
0018 2F                ADD     A,R7
0019 FF                MOV     R7,A
001A 8004              SJMP    ?C0025
C51 COMPILER V9.50a   SHARK                                                                07/26/2013 11:07:39 PAGE 16  

001C         ?C0024:
                                           ; SOURCE LINE # 75
001C 7430              MOV     A,#030H
001E 2F                ADD     A,R7
001F FF                MOV     R7,A
0020         ?C0025:
                                           ; SOURCE LINE # 76
0020 90FFE0            MOV     DPTR,#sata+0E0H
0023 EF                MOV     A,R7
0024 F0                MOVX    @DPTR,A
0025         ?C0026:
                                           ; SOURCE LINE # 77
0025 90FFD2            MOV     DPTR,#sata+0D2H
0028 E0                MOVX    A,@DPTR
0029 30E3F9            JNB     ACC.3,?C0026
002C         ?C0027:
                                           ; SOURCE LINE # 78
002C 120000      R     LCALL   L?0913
                                           ; SOURCE LINE # 80
002F EB                MOV     A,R3
0030 540F              ANL     A,#0FH
0032 FF                MOV     R7,A
                                           ; SOURCE LINE # 81
0033 D3                SETB    C
0034 9409              SUBB    A,#09H
0036 4006              JC      ?C0028
0038 7437              MOV     A,#037H
003A 2F                ADD     A,R7
003B FF                MOV     R7,A
003C 8004              SJMP    ?C0029
003E         ?C0028:
                                           ; SOURCE LINE # 82
003E 7430              MOV     A,#030H
0040 2F                ADD     A,R7
0041 FF                MOV     R7,A
0042         ?C0029:
                                           ; SOURCE LINE # 83
0042 90FFE0            MOV     DPTR,#sata+0E0H
0045 EF                MOV     A,R7
0046 F0                MOVX    @DPTR,A
0047         ?C0030:
                                           ; SOURCE LINE # 84
0047 90FFD2            MOV     DPTR,#sata+0D2H
004A E0                MOVX    A,@DPTR
004B 30E3F9            JNB     ACC.3,?C0030
004E         ?C0031:
                                           ; SOURCE LINE # 85
004E 120000      R     LCALL   L?0913
                                           ; SOURCE LINE # 87
0051 75A885            MOV     TS8052_IE,#085H
                                           ; SOURCE LINE # 89
0054 D0D0              POP     PSW
0056 92AF              MOV     EA,C
0058 22                RET     
             ; FUNCTION _uart_print_byte (END)

             ; FUNCTION _uart_send_R1 (BEGIN)
0000 D3                SETB    C
0001 10AF01            JBC     EA,?C0777
0004 C3                CLR     C
0005         ?C0777:
0005 C0D0              PUSH    PSW
C51 COMPILER V9.50a   SHARK                                                                07/26/2013 11:07:39 PAGE 17  

                                           ; SOURCE LINE # 101
;---- Variable 'tx_data' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 102
                                           ; SOURCE LINE # 103
0007 90FFE0            MOV     DPTR,#sata+0E0H
000A 7455              MOV     A,#055H
000C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 104
000D EF                MOV     A,R7
000E F0                MOVX    @DPTR,A
000F         ?C0033:
                                           ; SOURCE LINE # 105
000F 90FFD2            MOV     DPTR,#sata+0D2H
0012 E0                MOVX    A,@DPTR
0013 30E3F9            JNB     ACC.3,?C0033
0016         ?C0034:
                                           ; SOURCE LINE # 106
0016         ?C0035:
0016 D0D0              POP     PSW
0018 92AF              MOV     EA,C
001A 22                RET     
             ; FUNCTION _uart_send_R1 (END)

             ; FUNCTION uart_int_handler (BEGIN)
                                           ; SOURCE LINE # 111
                                           ; SOURCE LINE # 112
                                           ; SOURCE LINE # 116
0000 90FFE1            MOV     DPTR,#sata+0E1H
0003 E0                MOVX    A,@DPTR
;---- Variable 'uart_cmd_byte' assigned to Register 'R4' ----
0004 FC                MOV     R4,A
                                           ; SOURCE LINE # 117
0005 E4                CLR     A
0006 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 118
0007 E0                MOVX    A,@DPTR
;---- Variable 'uart_b3' assigned to Register 'R3' ----
0008 FB                MOV     R3,A
                                           ; SOURCE LINE # 119
0009 E4                CLR     A
000A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 120
000B E0                MOVX    A,@DPTR
;---- Variable 'uart_b2' assigned to Register 'R6' ----
000C FE                MOV     R6,A
                                           ; SOURCE LINE # 121
000D E4                CLR     A
000E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 122
000F E0                MOVX    A,@DPTR
0010 F500        R     MOV     uart_b1,A
                                           ; SOURCE LINE # 123
0012 E4                CLR     A
0013 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 124
0014 E0                MOVX    A,@DPTR
;---- Variable 'uart_b0' assigned to Register 'R5' ----
0015 FD                MOV     R5,A
                                           ; SOURCE LINE # 125
0016 90FFD9            MOV     DPTR,#sata+0D9H
0019 E0                MOVX    A,@DPTR
001A 4480              ORL     A,#080H
C51 COMPILER V9.50a   SHARK                                                                07/26/2013 11:07:39 PAGE 18  

001C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 127
001D 8E00        R     MOV     reg_addr+01H,R6
                                           ; SOURCE LINE # 128
001F 8B00        R     MOV     reg_addr,R3
                                           ; SOURCE LINE # 130
0021 BC510E            CJNE    R4,#051H,?C0036
                                           ; SOURCE LINE # 131
                                           ; SOURCE LINE # 133
0024 AE00        R     MOV     R6,reg_addr
0026 AF00        R     MOV     R7,reg_addr+01H
0028 8F82              MOV     DPL,R7
002A 8E83              MOV     DPH,R6
002C ED                MOV     A,R5
002D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 134
002E AF05              MOV     R7,AR5
                                           ; SOURCE LINE # 135
0030 800D              SJMP    ?C0816
0032         ?C0036:
                                           ; SOURCE LINE # 137
0032 BC500D            CJNE    R4,#050H,?C0037
                                           ; SOURCE LINE # 138
                                           ; SOURCE LINE # 140
0035 AE00        R     MOV     R6,reg_addr
0037 AF00        R     MOV     R7,reg_addr+01H
0039 8F82              MOV     DPL,R7
003B 8E83              MOV     DPH,R6
003D E0                MOVX    A,@DPTR
                                           ; SOURCE LINE # 141
003E FF                MOV     R7,A
003F         ?C0816:
003F 120000      R     LCALL   _uart_send_R1
                                           ; SOURCE LINE # 142
0042         ?C0037:
                                           ; SOURCE LINE # 144
0042 90FFD1            MOV     DPTR,#sata+0D1H
0045 E0                MOVX    A,@DPTR
0046 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 146
0047 22                RET     
             ; FUNCTION uart_int_handler (END)

             ; FUNCTION init (BEGIN)
                                           ; SOURCE LINE # 8
                                           ; SOURCE LINE # 9
                                           ; SOURCE LINE # 12
0000 758E11            MOV     TS8052_CKCON,#011H
                                           ; SOURCE LINE # 13
0003 75A885            MOV     TS8052_IE,#085H
                                           ; SOURCE LINE # 14
0006 75B804            MOV     TS8052_IPL,#04H
                                           ; SOURCE LINE # 15
0009 5387EF            ANL     TS8052_PCON,#0EFH
                                           ; SOURCE LINE # 21
000C 90FFF0            MOV     DPTR,#sata+0F0H
000F 741F              MOV     A,#01FH
0011 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 22
0012 A3                INC     DPTR
0013 7480              MOV     A,#080H
0015 F0                MOVX    @DPTR,A
C51 COMPILER V9.50a   SHARK                                                                07/26/2013 11:07:39 PAGE 19  

                                           ; SOURCE LINE # 24
0016 90FF3C            MOV     DPTR,#sata+03CH
0019 7470              MOV     A,#070H
001B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 35
001C 90FFD0            MOV     DPTR,#sata+0D0H
001F 7414              MOV     A,#014H
0021 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 36
0022 90FFD2            MOV     DPTR,#sata+0D2H
0025 E0                MOVX    A,@DPTR
0026 4440              ORL     A,#040H
0028 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 38
0029 90FFD9            MOV     DPTR,#sata+0D9H
002C E0                MOVX    A,@DPTR
002D 4480              ORL     A,#080H
002F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 39
0030 90FFD1            MOV     DPTR,#sata+0D1H
0033 7480              MOV     A,#080H
0035 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 40
0036 90FFD4            MOV     DPTR,#sata+0D4H
0039 741E              MOV     A,#01EH
003B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 41
003C E4                CLR     A
003D A3                INC     DPTR
003E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 42
003F 90FFE2            MOV     DPTR,#sata+0E2H
0042 7404              MOV     A,#04H
0044 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 45
0045 E4                CLR     A
0046 F500        R     MOV     g_flag,A
                                           ; SOURCE LINE # 46
0048 D200        R     SETB    g_enable_write_cache
                                           ; SOURCE LINE # 48
004A 907FBA            MOV     DPTR,#07FBAH
004D 93                MOVC    A,@A+DPTR
004E F5D7              MOV     SFR_CHP_en,A
                                           ; SOURCE LINE # 49
0050 A3                INC     DPTR
0051 E4                CLR     A
0052 93                MOVC    A,@A+DPTR
0053 90FF7F            MOV     DPTR,#sata+07FH
0056 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 50
0057 907FBC            MOV     DPTR,#07FBCH
005A E4                CLR     A
005B 93                MOVC    A,@A+DPTR
005C 90FF57            MOV     DPTR,#sata+057H
005F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 53
0060 E4                CLR     A
0061 F5D9              MOV     SFR_watch_dog_high,A
                                           ; SOURCE LINE # 54
0063 90FF00            MOV     DPTR,#sata
0066 E0                MOVX    A,@DPTR
0067 702D              JNZ     ?C0040
C51 COMPILER V9.50a   SHARK                                                                07/26/2013 11:07:39 PAGE 20  

                                           ; SOURCE LINE # 55
0069         ?C0041:
                                           ; SOURCE LINE # 56
0069 90FF70            MOV     DPTR,#sata+070H
006C E0                MOVX    A,@DPTR
006D 540F              ANL     A,#0FH
006F 640A              XRL     A,#0AH
0071 600C              JZ      ?C0042
                                           ; SOURCE LINE # 57
                                           ; SOURCE LINE # 59
0073 E5D9              MOV     A,SFR_watch_dog_high
0075 D3                SETB    C
0076 9450              SUBB    A,#050H
0078 40EF              JC      ?C0041
007A 75F6B0            MOV     SFR_cpu_reboot,#0B0H
                                           ; SOURCE LINE # 60
007D 80EA              SJMP    ?C0041
007F         ?C0042:
                                           ; SOURCE LINE # 62
007F 7F01              MOV     R7,#01H
0081 7E00              MOV     R6,#00H
0083 120000      R     LCALL   _delay_ms
                                           ; SOURCE LINE # 63
0086 907FBD            MOV     DPTR,#07FBDH
0089 E4                CLR     A
008A 93                MOVC    A,@A+DPTR
008B 90FFCC            MOV     DPTR,#sata+0CCH
008E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 64
008F 7F01              MOV     R7,#01H
0091 7E00              MOV     R6,#00H
0093 120000      R     LCALL   _delay_ms
                                           ; SOURCE LINE # 65
0096         ?C0040:
                                           ; SOURCE LINE # 66
0096 90FF7E            MOV     DPTR,#sata+07EH
0099 7412              MOV     A,#012H
009B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 67
009C 7F2C              MOV     R7,#02CH
009E 7E01              MOV     R6,#01H
00A0 120000      R     LCALL   _delay
                                           ; SOURCE LINE # 68
00A3 7412              MOV     A,#012H
00A5 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 69
00A6 120000      R     LCALL   _delay
                                           ; SOURCE LINE # 70
00A9 7412              MOV     A,#012H
00AB F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 71
00AC 120000      R     LCALL   chp_clock_on
                                           ; SOURCE LINE # 75
                                           ; SOURCE LINE # 76
00AF 120000      R     LCALL   L?0903
                                           ; SOURCE LINE # 78
00B2 7421              MOV     A,#021H
                                           ; SOURCE LINE # 79
00B4 120000      R     LCALL   L?0905
                                           ; SOURCE LINE # 80
00B7 90FF00            MOV     DPTR,#sata
00BA E0                MOVX    A,@DPTR
C51 COMPILER V9.50a   SHARK                                                                07/26/2013 11:07:39 PAGE 21  

00BB 7003              JNZ     ?C0044
                                           ; SOURCE LINE # 81
                                           ; SOURCE LINE # 82
00BD 7500FF      R     MOV     g_power_mode,#0FFH
                                           ; SOURCE LINE # 83
00C0         ?C0044:
                                           ; SOURCE LINE # 84
00C0 90FF00            MOV     DPTR,#sata
00C3 E0                MOVX    A,@DPTR
00C4 701F              JNZ     ?C0045
                                           ; SOURCE LINE # 85
                                           ; SOURCE LINE # 87
00C6 7D01              MOV     R5,#01H
00C8 7F07              MOV     R7,#07H
00CA 120000      R     LCALL   _updata_smart
                                           ; SOURCE LINE # 88
00CD 7D01              MOV     R5,#01H
00CF 7F1F              MOV     R7,#01FH
00D1 120000      R     LCALL   _updata_smart
                                           ; SOURCE LINE # 89
00D4 90FF34            MOV     DPTR,#sata+034H
00D7 E0                MOVX    A,@DPTR
00D8 30E705            JNB     ACC.7,?C0046
00DB 120000      R     LCALL   smart_card_update
00DE 8019              SJMP    ?C0048
00E0         ?C0046:
                                           ; SOURCE LINE # 90
00E0 120000      R     LCALL   smart_erase_handle
                                           ; SOURCE LINE # 92
00E3 8014              SJMP    ?C0048
00E5         ?C0045:
                                           ; SOURCE LINE # 94
                                           ; SOURCE LINE # 96
00E5 7D01              MOV     R5,#01H
00E7 7F13              MOV     R7,#013H
00E9 120000      R     LCALL   _updata_smart
                                           ; SOURCE LINE # 97
00EC 300007      R     JNB     g_smart_power_down_flag,?C0049
00EF 7D01              MOV     R5,#01H
00F1 7F1F              MOV     R7,#01FH
00F3 120000      R     LCALL   _updata_smart
00F6         ?C0049:
                                           ; SOURCE LINE # 98
00F6 120000      R     LCALL   reset_engine
                                           ; SOURCE LINE # 100
00F9         ?C0048:
                                           ; SOURCE LINE # 102
00F9 E4                CLR     A
00FA F500        R     MOV     g_security_flag,A
                                           ; SOURCE LINE # 104
00FC 90FF00            MOV     DPTR,#sata
00FF E0                MOVX    A,@DPTR
0100 7005              JNZ     ?C0050
                                           ; SOURCE LINE # 105
                                           ; SOURCE LINE # 106
0102 F500        R     MOV     security_mode,A
                                           ; SOURCE LINE # 107
0104 120000      R     LCALL   security_initial
                                           ; SOURCE LINE # 108
0107         ?C0050:
                                           ; SOURCE LINE # 110
0107 90FF00            MOV     DPTR,#sata
C51 COMPILER V9.50a   SHARK                                                                07/26/2013 11:07:39 PAGE 22  

010A E0                MOVX    A,@DPTR
010B 7003              JNZ     ?C0051
010D 74FF              MOV     A,#0FFH
010F F0                MOVX    @DPTR,A
0110         ?C0051:
                                           ; SOURCE LINE # 113
0110 120000      R     LCALL   reset_engine
                                           ; SOURCE LINE # 114
0113 90FFF0            MOV     DPTR,#sata+0F0H
0116 74F4              MOV     A,#0F4H
0118 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 123
0119 90FFAF            MOV     DPTR,#sata+0AFH
011C 7401              MOV     A,#01H
011E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 124
011F 90FF1E            MOV     DPTR,#sata+01EH
0122 7440              MOV     A,#040H
0124 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 125
0125 90FF56            MOV     DPTR,#sata+056H
0128 7410              MOV     A,#010H
012A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 126
012B 90FFCE            MOV     DPTR,#sata+0CEH
012E E0                MOVX    A,@DPTR
012F 4402              ORL     A,#02H
0131 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 127
0132 90FF54            MOV     DPTR,#sata+054H
0135 7410              MOV     A,#010H
0137 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 128
0138 A3                INC     DPTR
0139 743F              MOV     A,#03FH
013B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 130
013C 90FFA1            MOV     DPTR,#sata+0A1H
013F 7445              MOV     A,#045H
0141 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 131
0142 90FFA3            MOV     DPTR,#sata+0A3H
0145 7415              MOV     A,#015H
0147 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 132
0148 90FFA2            MOV     DPTR,#sata+0A2H
014B 740A              MOV     A,#0AH
014D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 135
014E 90FF66            MOV     DPTR,#sata+066H
0151 7485              MOV     A,#085H
0153 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 139
0154 90FF60            MOV     DPTR,#sata+060H
0157 7405              MOV     A,#05H
0159 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 140
015A 90FF64            MOV     DPTR,#sata+064H
015D 742D              MOV     A,#02DH
015F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 166
0160 750001      R     MOV     g_smart_flag,#01H
C51 COMPILER V9.50a   SHARK                                                                07/26/2013 11:07:39 PAGE 23  

                                           ; SOURCE LINE # 167
0163 E4                CLR     A
0164 F500        R     MOV     g_smart_handle_flag,A
                                           ; SOURCE LINE # 168
0166 7800        R     MOV     R0,#LOW g_smart_test_status
0168 F6                MOV     @R0,A
                                           ; SOURCE LINE # 169
0169 7800        R     MOV     R0,#LOW g_smart_write_cnt
016B F6                MOV     @R0,A
                                           ; SOURCE LINE # 170
016C 7800        R     MOV     R0,#LOW g_smart_read_cnt
016E F6                MOV     @R0,A
                                           ; SOURCE LINE # 171
016F 7800        R     MOV     R0,#LOW g_smart_block_cnt_l
0171 F6                MOV     @R0,A
                                           ; SOURCE LINE # 172
0172 18                DEC     R0
0173 F6                MOV     @R0,A
                                           ; SOURCE LINE # 173
0174 7800        R     MOV     R0,#LOW write_sec_cnt_l
0176 F6                MOV     @R0,A
0177 08                INC     R0
0178 F6                MOV     @R0,A
                                           ; SOURCE LINE # 174
0179 7800        R     MOV     R0,#LOW write_sec_cnt_h
017B F6                MOV     @R0,A
                                           ; SOURCE LINE # 175
017C 7800        R     MOV     R0,#LOW read_sec_cnt_l
017E F6                MOV     @R0,A
017F 08                INC     R0
0180 F6                MOV     @R0,A
                                           ; SOURCE LINE # 176
0181 7800        R     MOV     R0,#LOW read_sec_cnt_h
0183 F6                MOV     @R0,A
                                           ; SOURCE LINE # 179
0184 907FC4            MOV     DPTR,#07FC4H
0187 93                MOVC    A,@A+DPTR
0188 90FFC0            MOV     DPTR,#sata+0C0H
018B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 180
018C 907FC5            MOV     DPTR,#07FC5H
018F E4                CLR     A
0190 93                MOVC    A,@A+DPTR
0191 90FFC1            MOV     DPTR,#sata+0C1H
0194 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 181
0195 907FC6            MOV     DPTR,#07FC6H
0198 E4                CLR     A
0199 93                MOVC    A,@A+DPTR
019A 90FFC2            MOV     DPTR,#sata+0C2H
019D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 182
019E 907FC7            MOV     DPTR,#07FC7H
01A1 E4                CLR     A
01A2 93                MOVC    A,@A+DPTR
01A3 90FFC3            MOV     DPTR,#sata+0C3H
01A6 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 183
01A7 907FC8            MOV     DPTR,#07FC8H
01AA E4                CLR     A
01AB 93                MOVC    A,@A+DPTR
01AC 90FFC4            MOV     DPTR,#sata+0C4H
C51 COMPILER V9.50a   SHARK                                                                07/26/2013 11:07:39 PAGE 24  

01AF F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 184
01B0 907FC9            MOV     DPTR,#07FC9H
01B3 E4                CLR     A
01B4 93                MOVC    A,@A+DPTR
01B5 90FFC5            MOV     DPTR,#sata+0C5H
01B8 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 189
01B9         start_phy:
                                           ; SOURCE LINE # 191
01B9 7800        R     MOV     R0,#LOW g_current_fis_num
01BB A69F              MOV     @R0,SFR_fis_num
                                           ; SOURCE LINE # 193
01BD 90FF3C            MOV     DPTR,#sata+03CH
01C0 7470              MOV     A,#070H
01C2 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 195
01C3 E4                CLR     A
01C4 F5D9              MOV     SFR_watch_dog_high,A
01C6         ?C0053:
                                           ; SOURCE LINE # 196
01C6 90FF3D            MOV     DPTR,#sata+03DH
01C9 E0                MOVX    A,@DPTR
01CA 20E113            JB      ACC.1,?C0054
                                           ; SOURCE LINE # 197
                                           ; SOURCE LINE # 199
01CD E5D9              MOV     A,SFR_watch_dog_high
01CF D3                SETB    C
01D0 9420              SUBB    A,#020H
01D2 40F2              JC      ?C0053
                                           ; SOURCE LINE # 200
                                           ; SOURCE LINE # 201
01D4 E4                CLR     A
01D5 F5D9              MOV     SFR_watch_dog_high,A
                                           ; SOURCE LINE # 202
01D7 90FF34            MOV     DPTR,#sata+034H
01DA E0                MOVX    A,@DPTR
01DB 4402              ORL     A,#02H
01DD F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 203
                                           ; SOURCE LINE # 204
01DE 80E6              SJMP    ?C0053
01E0         ?C0054:
                                           ; SOURCE LINE # 217
01E0 E4                CLR     A
01E1 F500        R     MOV     ii,A
01E3 F500        R     MOV     ii+01H,A
01E5         ?C0056:
01E5 C3                CLR     C
01E6 E500        R     MOV     A,ii+01H
01E8 9430              SUBB    A,#030H
01EA E500        R     MOV     A,ii
01EC 9475              SUBB    A,#075H
01EE 5011              JNC     ?C0057
                                           ; SOURCE LINE # 218
                                           ; SOURCE LINE # 219
01F0 90FF3D            MOV     DPTR,#sata+03DH
01F3 E0                MOVX    A,@DPTR
01F4 20E0C2            JB      ACC.0,start_phy
01F7         ?C0059:
                                           ; SOURCE LINE # 220
01F7         ?C0058:
C51 COMPILER V9.50a   SHARK                                                                07/26/2013 11:07:39 PAGE 25  

01F7 0500        R     INC     ii+01H
01F9 E500        R     MOV     A,ii+01H
01FB 70E8              JNZ     ?C0056
01FD 0500        R     INC     ii
01FF         ?C0778:
01FF 80E4              SJMP    ?C0056
0201         ?C0057:
                                           ; SOURCE LINE # 223
0201 90FFF0            MOV     DPTR,#sata+0F0H
0204 74F0              MOV     A,#0F0H
0206 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 225
0207 7BFF              MOV     R3,#0FFH
0209 7A00        R     MOV     R2,#HIGH ?SC_0
020B 7900        R     MOV     R1,#LOW ?SC_0
020D 120000      R     LCALL   _printu
                                           ; SOURCE LINE # 226
0210 90FF3E            MOV     DPTR,#sata+03EH
0213 E0                MOVX    A,@DPTR
0214 4401              ORL     A,#01H
0216 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 228
0217 E4                CLR     A
0218 90FF35            MOV     DPTR,#sata+035H
021B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 232
021C 120000      R     LCALL   init_tx_fis
                                           ; SOURCE LINE # 233
021F E4                CLR     A
0220 FB                MOV     R3,A
0221 7D01              MOV     R5,#01H
0223 7F50              MOV     R7,#050H
0225 120000      R     LCALL   _tx_fis_34
                                           ; SOURCE LINE # 234
0228 7F64              MOV     R7,#064H
022A 7E00              MOV     R6,#00H
022C 120000      R     LCALL   _delay
                                           ; SOURCE LINE # 239
022F 90FFBE            MOV     DPTR,#sata+0BEH
0232 E0                MOVX    A,@DPTR
0233 54F0              ANL     A,#0F0H
0235 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 241
0236 907FB2            MOV     DPTR,#07FB2H
0239 E4                CLR     A
023A 93                MOVC    A,@A+DPTR
023B 90FFBF            MOV     DPTR,#sata+0BFH
023E 6006              JZ      ?C0060
0240 E0                MOVX    A,@DPTR
0241 4408              ORL     A,#08H
0243 F0                MOVX    @DPTR,A
0244 8004              SJMP    ?C0061
0246         ?C0060:
                                           ; SOURCE LINE # 242
0246 E0                MOVX    A,@DPTR
0247 54F7              ANL     A,#0F7H
0249 F0                MOVX    @DPTR,A
024A         ?C0061:
                                           ; SOURCE LINE # 246
024A 90FF1E            MOV     DPTR,#sata+01EH
024D E0                MOVX    A,@DPTR
024E 54BF              ANL     A,#0BFH
C51 COMPILER V9.50a   SHARK                                                                07/26/2013 11:07:39 PAGE 26  

0250 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 247
0251 E4                CLR     A
0252 F5D9              MOV     SFR_watch_dog_high,A
0254         ?C0062:
                                           ; SOURCE LINE # 249
0254 7800        R     MOV     R0,#LOW g_current_fis_num
0256 E6                MOV     A,@R0
0257 659F              XRL     A,SFR_fis_num
0259 60F9              JZ      ?C0062
025B         ?C0063:
                                           ; SOURCE LINE # 250
025B 90FFCE            MOV     DPTR,#sata+0CEH
025E E0                MOVX    A,@DPTR
025F 54FD              ANL     A,#0FDH
0261 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 251
0262 22                RET     
             ; FUNCTION init (END)

             ; FUNCTION init_tx_fis (BEGIN)
                                           ; SOURCE LINE # 258
                                           ; SOURCE LINE # 259
                                           ; SOURCE LINE # 261
0000 E4                CLR     A
0001 90FF04            MOV     DPTR,#sata+04H
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 262
0005 90FF10            MOV     DPTR,#sata+010H
0008 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 263
0009 A3                INC     DPTR
000A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 264
000B A3                INC     DPTR
000C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 265
000D A3                INC     DPTR
000E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 266
000F A3                INC     DPTR
0010 04                INC     A
0011 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 267
0012 E4                CLR     A
0013 A3                INC     DPTR
0014 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 268
0015 A3                INC     DPTR
0016 04                INC     A
0017 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 269
0018 E4                CLR     A
0019 A3                INC     DPTR
001A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 270
001B A3                INC     DPTR
001C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 271
001D A3                INC     DPTR
001E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 272
C51 COMPILER V9.50a   SHARK                                                                07/26/2013 11:07:39 PAGE 27  

001F A3                INC     DPTR
0020 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 273
0021 A3                INC     DPTR
0022 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 274
0023 22                RET     
             ; FUNCTION init_tx_fis (END)

             ; FUNCTION int0_handler (BEGIN)
0000 C0E0              PUSH    ACC
0002 C0F0              PUSH    B
0004 C083              PUSH    DPH
0006 C082              PUSH    DPL
0008 C0D0              PUSH    PSW
000A 75D000            MOV     PSW,#00H
000D C000              PUSH    AR0
000F C001              PUSH    AR1
0011 C002              PUSH    AR2
0013 C003              PUSH    AR3
0015 C004              PUSH    AR4
0017 C005              PUSH    AR5
0019 C006              PUSH    AR6
001B C007              PUSH    AR7
                                           ; SOURCE LINE # 280
                                           ; SOURCE LINE # 284
001D 5387EF            ANL     TS8052_PCON,#0EFH
                                           ; SOURCE LINE # 285
0020 90FF3E            MOV     DPTR,#sata+03EH
0023 E0                MOVX    A,@DPTR
0024 54FE              ANL     A,#0FEH
0026 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 294
0027 90FF00            MOV     DPTR,#sata
002A 74FF              MOV     A,#0FFH
002C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 295
002D 120000      R     LCALL   reset_engine
                                           ; SOURCE LINE # 296
0030 90FFCE            MOV     DPTR,#sata+0CEH
0033 E0                MOVX    A,@DPTR
0034 4402              ORL     A,#02H
0036 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 297
0037 90FF1E            MOV     DPTR,#sata+01EH
003A 7440              MOV     A,#040H
003C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 298
003D 90FF34            MOV     DPTR,#sata+034H
0040 7410              MOV     A,#010H
0042 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 299
0043 D007              POP     AR7
0045 D006              POP     AR6
0047 D005              POP     AR5
0049 D004              POP     AR4
004B D003              POP     AR3
004D D002              POP     AR2
004F D001              POP     AR1
0051 D000              POP     AR0
0053 D0D0              POP     PSW
0055 D082              POP     DPL
C51 COMPILER V9.50a   SHARK                                                                07/26/2013 11:07:39 PAGE 28  

0057 D083              POP     DPH
0059 D0F0              POP     B
005B D0E0              POP     ACC
005D 32                RETI    
             ; FUNCTION int0_handler (END)

             ; FUNCTION int1_handler (BEGIN)
0000 C0E0              PUSH    ACC
0002 C0F0              PUSH    B
0004 C083              PUSH    DPH
0006 C082              PUSH    DPL
0008 C0D0              PUSH    PSW
000A 75D000            MOV     PSW,#00H
000D C000              PUSH    AR0
000F C001              PUSH    AR1
0011 C002              PUSH    AR2
0013 C003              PUSH    AR3
0015 C004              PUSH    AR4
0017 C005              PUSH    AR5
0019 C006              PUSH    AR6
001B C007              PUSH    AR7
                                           ; SOURCE LINE # 305
                                           ; SOURCE LINE # 309
001D 750000      R     MOV     tmp_flag,#00H
                                           ; SOURCE LINE # 310
0020 E587              MOV     A,TS8052_PCON
0022 30E406            JNB     ACC.4,?C0067
                                           ; SOURCE LINE # 311
                                           ; SOURCE LINE # 312
0025 750001      R     MOV     tmp_flag,#01H
                                           ; SOURCE LINE # 313
0028 5387EF            ANL     TS8052_PCON,#0EFH
                                           ; SOURCE LINE # 314
002B         ?C0067:
                                           ; SOURCE LINE # 318
002B 120000      R     LCALL   check_power_loss
                                           ; SOURCE LINE # 322
002E 90FFC7            MOV     DPTR,#sata+0C7H
0031 E0                MOVX    A,@DPTR
0032 30E703            JNB     ACC.7,?C0068
0035 120000      R     LCALL   uart_int_handler
0038         ?C0068:
                                           ; SOURCE LINE # 326
0038 90FFC7            MOV     DPTR,#sata+0C7H
003B E0                MOVX    A,@DPTR
003C 30E303            JNB     ACC.3,?C0069
003F 120000      R     LCALL   chp_int_handler
0042         ?C0069:
                                           ; SOURCE LINE # 331
0042 E500        R     MOV     A,tmp_flag
0044 B40103            CJNE    A,#01H,?C0071
                                           ; SOURCE LINE # 332
                                           ; SOURCE LINE # 333
0047 438710            ORL     TS8052_PCON,#010H
                                           ; SOURCE LINE # 334
                                           ; SOURCE LINE # 338
004A         ?C0071:
004A D007              POP     AR7
004C D006              POP     AR6
004E D005              POP     AR5
0050 D004              POP     AR4
0052 D003              POP     AR3
C51 COMPILER V9.50a   SHARK                                                                07/26/2013 11:07:39 PAGE 29  

0054 D002              POP     AR2
0056 D001              POP     AR1
0058 D000              POP     AR0
005A D0D0              POP     PSW
005C D082              POP     DPL
005E D083              POP     DPH
0060 D0F0              POP     B
0062 D0E0              POP     ACC
0064 32                RETI    
             ; FUNCTION int1_handler (END)

             ; FUNCTION L?0903 (BEGIN)
0000         L?0904:
0000 7412              MOV     A,#012H
0002         L?0905:
0002 90FF7E            MOV     DPTR,#sata+07EH
0005 F0                MOVX    @DPTR,A
             ; FUNCTION wait_chp_ready (BEGIN)
                                           ; SOURCE LINE # 341
                                           ; SOURCE LINE # 342
0006         ?C0072:
                                           ; SOURCE LINE # 343
                                           ; SOURCE LINE # 344
                                           ; SOURCE LINE # 346
0006 E5D6              MOV     A,SFR_CHP_rdy
0008 55D7              ANL     A,SFR_CHP_en
000A 65D7              XRL     A,SFR_CHP_en
000C 6005              JZ      ?C0075
000E         ?C0074:
                                           ; SOURCE LINE # 351
000E 120000      R     LCALL   check_power_loss
                                           ; SOURCE LINE # 353
0011 80F3              SJMP    ?C0072
                                           ; SOURCE LINE # 354
0013         ?C0075:
0013 22                RET     
             ; FUNCTION wait_chp_ready (END)

             ; FUNCTION wait_chp_not_ready (BEGIN)
                                           ; SOURCE LINE # 356
                                           ; SOURCE LINE # 357
0000         ?C0076:
                                           ; SOURCE LINE # 358
                                           ; SOURCE LINE # 359
                                           ; SOURCE LINE # 360
0000 E5D6              MOV     A,SFR_CHP_rdy
0002 55D7              ANL     A,SFR_CHP_en
0004 6005              JZ      ?C0079
0006         ?C0078:
                                           ; SOURCE LINE # 363
0006 120000      R     LCALL   check_power_loss
                                           ; SOURCE LINE # 365
0009 80F5              SJMP    ?C0076
                                           ; SOURCE LINE # 367
000B         ?C0079:
000B 22                RET     
             ; FUNCTION wait_chp_not_ready (END)

             ; FUNCTION L?0907 (BEGIN)
0000         L?0908:
0000 7BFF              MOV     R3,#0FFH
0002 E4                CLR     A
C51 COMPILER V9.50a   SHARK                                                                07/26/2013 11:07:39 PAGE 30  

0003 FD                MOV     R5,A
0004 7F50              MOV     R7,#050H
             ; FUNCTION _tx_fis_34 (BEGIN)
                                           ; SOURCE LINE # 368
;---- Variable 'status' assigned to Register 'R7' ----
;---- Variable 'flag' assigned to Register 'R3' ----
;---- Variable 'error' assigned to Register 'R5' ----
                                           ; SOURCE LINE # 369
                                           ; SOURCE LINE # 370
0006 90FF01            MOV     DPTR,#sata+01H
0009 ED                MOV     A,R5
000A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 371
000B 90FF0B            MOV     DPTR,#sata+0BH
000E EF                MOV     A,R7
000F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 372
0010 EB                MOV     A,R3
0011 90FF13            MOV     DPTR,#sata+013H
0014 6006              JZ      ?C0080
0016 E0                MOVX    A,@DPTR
0017 4440              ORL     A,#040H
0019 F0                MOVX    @DPTR,A
001A 8004              SJMP    ?C0081
001C         ?C0080:
                                           ; SOURCE LINE # 373
001C E0                MOVX    A,@DPTR
001D 54BF              ANL     A,#0BFH
001F F0                MOVX    @DPTR,A
0020         ?C0081:
                                           ; SOURCE LINE # 374
0020 90FF37            MOV     DPTR,#sata+037H
0023 7434              MOV     A,#034H
0025 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 375
0026 22                RET     
             ; FUNCTION _tx_fis_34 (END)

             ; FUNCTION L?0906 (BEGIN)
0000 750001      R     MOV     ?_tx_fis_5f?BYTE+03H,#01H
0003 E4                CLR     A
0004 F500        R     MOV     ?_tx_fis_5f?BYTE+04H,A
0006 7500D0      R     MOV     ?_tx_fis_5f?BYTE+05H,#0D0H
0009 FB                MOV     R3,A
000A FD                MOV     R5,A
000B 7F58              MOV     R7,#058H
             ; FUNCTION _tx_fis_5f (BEGIN)
                                           ; SOURCE LINE # 377
;---- Variable 'status' assigned to Register 'R7' ----
;---- Variable 'flag' assigned to Register 'R3' ----
;---- Variable 'error' assigned to Register 'R5' ----
                                           ; SOURCE LINE # 378
                                           ; SOURCE LINE # 379
000D 90FF01            MOV     DPTR,#sata+01H
0010 ED                MOV     A,R5
0011 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 380
0012 90FF0B            MOV     DPTR,#sata+0BH
0015 EF                MOV     A,R7
0016 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 381
0017 90FF13            MOV     DPTR,#sata+013H
C51 COMPILER V9.50a   SHARK                                                                07/26/2013 11:07:39 PAGE 31  

001A EB                MOV     A,R3
001B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 382
001C A3                INC     DPTR
001D E500        R     MOV     A,seccnt
001F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 383
0020 A3                INC     DPTR
0021 E500        R     MOV     A,seccnt_ext
0023 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 384
0024 E4                CLR     A
0025 90FF05            MOV     DPTR,#sata+05H
0028 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 386
0029 A3                INC     DPTR
002A 7402              MOV     A,#02H
002C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 387
002D 90FF04            MOV     DPTR,#sata+04H
0030 E500        R     MOV     A,estatus
0032 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 388
0033 90FF37            MOV     DPTR,#sata+037H
0036 745F              MOV     A,#05FH
0038 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 389
0039 22                RET     
             ; FUNCTION _tx_fis_5f (END)

             ; FUNCTION L?0918 (BEGIN)
0000 0D                INC     R5
0001 7F80              MOV     R7,#080H
             ; FUNCTION _sata_burst (BEGIN)
                                           ; SOURCE LINE # 395
;---- Variable 'cnt' assigned to Register 'R5' ----
;---- Variable 'dir' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 396
                                           ; SOURCE LINE # 397
0003 E4                CLR     A
0004 F5E7              MOV     SFR_sata_burst_base+01H,A
0006 F5E6              MOV     SFR_sata_burst_base,A
                                           ; SOURCE LINE # 398
0008 8DDE              MOV     SFR_sata_burst_cnt_l,R5
                                           ; SOURCE LINE # 399
000A F5DF              MOV     SFR_sata_burst_cnt_h,A
                                           ; SOURCE LINE # 401
000C 75E810            MOV     SFR_sata_burst_cntl,#010H
                                           ; SOURCE LINE # 404
000F 8FE8              MOV     SFR_sata_burst_cntl,R7
0011         ?C0084:
                                           ; SOURCE LINE # 405
0011 30E8FD            JNB     sata_burst_done,?C0084
0014         ?C0085:
                                           ; SOURCE LINE # 407
0014         ?C0086:
0014 22                RET     
             ; FUNCTION _sata_burst (END)

             ; FUNCTION bist_handler (BEGIN)
                                           ; SOURCE LINE # 410
                                           ; SOURCE LINE # 411
C51 COMPILER V9.50a   SHARK                                                                07/26/2013 11:07:39 PAGE 32  

                                           ; SOURCE LINE # 414
0000 90FF64            MOV     DPTR,#sata+064H
0003 742D              MOV     A,#02DH
0005 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 416
0006 90FF66            MOV     DPTR,#sata+066H
0009 7483              MOV     A,#083H
000B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 417
000C A3                INC     DPTR
000D 742B              MOV     A,#02BH
000F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 441
0010 22                RET     
             ; FUNCTION bist_handler (END)

             ; FUNCTION save_lba (BEGIN)
                                           ; SOURCE LINE # 443
                                           ; SOURCE LINE # 444
                                           ; SOURCE LINE # 445
0000 E4                CLR     A
0001 90FF57            MOV     DPTR,#sata+057H
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 446
0005 90FF78            MOV     DPTR,#sata+078H
0008 E0                MOVX    A,@DPTR
0009 F500        R     MOV     g_lba,A
                                           ; SOURCE LINE # 447
000B A3                INC     DPTR
000C E0                MOVX    A,@DPTR
000D F500        R     MOV     g_lba+01H,A
                                           ; SOURCE LINE # 448
000F A3                INC     DPTR
0010 E0                MOVX    A,@DPTR
0011 F500        R     MOV     g_lba+02H,A
                                           ; SOURCE LINE # 449
0013 A3                INC     DPTR
0014 E0                MOVX    A,@DPTR
0015 F500        R     MOV     g_lba+03H,A
                                           ; SOURCE LINE # 450
0017 A3                INC     DPTR
0018 E0                MOVX    A,@DPTR
0019 F500        R     MOV     g_lba+04H,A
                                           ; SOURCE LINE # 451
001B A3                INC     DPTR
001C E0                MOVX    A,@DPTR
001D F500        R     MOV     g_lba+05H,A
                                           ; SOURCE LINE # 452
001F 907FBC            MOV     DPTR,#07FBCH
0022 E4                CLR     A
0023 93                MOVC    A,@A+DPTR
0024 90FF57            MOV     DPTR,#sata+057H
0027 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 453
0028 22                RET     
             ; FUNCTION save_lba (END)

             ; FUNCTION recover_lba (BEGIN)
                                           ; SOURCE LINE # 454
                                           ; SOURCE LINE # 455
                                           ; SOURCE LINE # 456
0000 90FF78            MOV     DPTR,#sata+078H
C51 COMPILER V9.50a   SHARK                                                                07/26/2013 11:07:39 PAGE 33  

0003 E500        R     MOV     A,g_lba
0005 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 457
0006 A3                INC     DPTR
0007 E500        R     MOV     A,g_lba+01H
0009 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 458
000A A3                INC     DPTR
000B E500        R     MOV     A,g_lba+02H
000D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 459
000E A3                INC     DPTR
000F E500        R     MOV     A,g_lba+03H
0011 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 460
0012 A3                INC     DPTR
0013 E500        R     MOV     A,g_lba+04H
0015 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 461
0016 A3                INC     DPTR
0017 E500        R     MOV     A,g_lba+05H
0019 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 462
001A 22                RET     
             ; FUNCTION recover_lba (END)

             ; FUNCTION check_power_loss (BEGIN)
                                           ; SOURCE LINE # 464
                                           ; SOURCE LINE # 465
                                           ; SOURCE LINE # 467
0000 90FFC7            MOV     DPTR,#sata+0C7H
0003 E0                MOVX    A,@DPTR
0004 30E639            JNB     ACC.6,?C0091
0007         ?C0090:
                                           ; SOURCE LINE # 468
0007 90FFC7            MOV     DPTR,#sata+0C7H
000A E0                MOVX    A,@DPTR
000B 30E632            JNB     ACC.6,?C0091
000E         ?C0092:
                                           ; SOURCE LINE # 469
000E 90FFC7            MOV     DPTR,#sata+0C7H
0011 E0                MOVX    A,@DPTR
0012 30E62B            JNB     ACC.6,?C0091
0015         ?C0093:
                                           ; SOURCE LINE # 470
0015 90FFC7            MOV     DPTR,#sata+0C7H
0018 E0                MOVX    A,@DPTR
0019 30E624            JNB     ACC.6,?C0091
001C         ?C0094:
                                           ; SOURCE LINE # 473
001C 90FFF0            MOV     DPTR,#sata+0F0H
001F 740F              MOV     A,#0FH
0021 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 476
0022 90FFCC            MOV     DPTR,#sata+0CCH
0025 74C0              MOV     A,#0C0H
0027 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 478
0028 90FF20            MOV     DPTR,#sata+020H
002B E0                MOVX    A,@DPTR
002C 44C0              ORL     A,#0C0H
002E F0                MOVX    @DPTR,A
C51 COMPILER V9.50a   SHARK                                                                07/26/2013 11:07:39 PAGE 34  

                                           ; SOURCE LINE # 479
002F 90FF60            MOV     DPTR,#sata+060H
0032 E0                MOVX    A,@DPTR
0033 4480              ORL     A,#080H
0035 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 482
0036 7F02              MOV     R7,#02H
0038 7E00              MOV     R6,#00H
003A 120000      R     LCALL   _delay_ms
                                           ; SOURCE LINE # 483
003D 75F6B0            MOV     SFR_cpu_reboot,#0B0H
                                           ; SOURCE LINE # 486
0040         ?C0091:
0040 22                RET     
             ; FUNCTION check_power_loss (END)

             ; FUNCTION L?0914 (BEGIN)
0000 E4                CLR     A
0001 F5F4              MOV     SFR_ext_sram_cntl,A
             ; FUNCTION gen_check_sum (BEGIN)
                                           ; SOURCE LINE # 7
;---- Variable 'temp' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 8
                                           ; SOURCE LINE # 11
0003 75F410            MOV     SFR_ext_sram_cntl,#010H
                                           ; SOURCE LINE # 12
0006 E4                CLR     A
0007 F5F2              MOV     SFR_ext_sram_addr+01H,A
0009 F5F1              MOV     SFR_ext_sram_addr,A
                                           ; SOURCE LINE # 13
;---- Variable 'sum' assigned to Register 'R6' ----
000B FE                MOV     R6,A
                                           ; SOURCE LINE # 14
;---- Variable 'jj' assigned to Register 'R4/R5' ----
000C FD                MOV     R5,A
000D FC                MOV     R4,A
000E         ?C0095:
                                           ; SOURCE LINE # 15
                                           ; SOURCE LINE # 16
000E AFF3              MOV     R7,SFR_ext_sram_data
                                           ; SOURCE LINE # 17
0010 EF                MOV     A,R7
0011 2E                ADD     A,R6
0012 FE                MOV     R6,A
                                           ; SOURCE LINE # 18
0013 0D                INC     R5
0014 BD0001            CJNE    R5,#00H,?C0779
0017 0C                INC     R4
0018         ?C0779:
0018 BC01F3            CJNE    R4,#01H,?C0095
001B BDFFF0            CJNE    R5,#0FFH,?C0095
001E         ?C0096:
                                           ; SOURCE LINE # 20
001E EE                MOV     A,R6
001F F4                CPL     A
0020 04                INC     A
0021 FF                MOV     R7,A
                                           ; SOURCE LINE # 21
                                           ; SOURCE LINE # 22
0022         ?C0098:
0022 22                RET     
             ; FUNCTION gen_check_sum (END)
C51 COMPILER V9.50a   SHARK                                                                07/26/2013 11:07:39 PAGE 35  


             ; FUNCTION L?0909 (BEGIN)
0000         L?0910:
0000 7BFF              MOV     R3,#0FFH
0002 7D04              MOV     R5,#04H
0004 7F51              MOV     R7,#051H
0006 120000      R     LCALL   _tx_fis_34
             ; FUNCTION reset_engine (BEGIN)
                                           ; SOURCE LINE # 25
                                           ; SOURCE LINE # 26
                                           ; SOURCE LINE # 28
0009 75F818            MOV     SFR_dma_cntl,#018H
                                           ; SOURCE LINE # 29
000C 907FBA            MOV     DPTR,#07FBAH
000F E4                CLR     A
0010 93                MOVC    A,@A+DPTR
0011 F5D7              MOV     SFR_CHP_en,A
                                           ; SOURCE LINE # 30
                                           ; SOURCE LINE # 31
0013 120000      R     LCALL   L?0903
                                           ; SOURCE LINE # 32
0016 C200        R     CLR     g_cont_en
                                           ; SOURCE LINE # 33
0018 22                RET     
             ; FUNCTION reset_engine (END)

             ; FUNCTION reset_engine_read_write (BEGIN)
                                           ; SOURCE LINE # 35
                                           ; SOURCE LINE # 36
                                           ; SOURCE LINE # 37
                                           ; SOURCE LINE # 38
0000 75F818            MOV     SFR_dma_cntl,#018H
                                           ; SOURCE LINE # 39
0003 907FBA            MOV     DPTR,#07FBAH
0006 E4                CLR     A
0007 93                MOVC    A,@A+DPTR
0008 F5D7              MOV     SFR_CHP_en,A
                                           ; SOURCE LINE # 40
000A 90FF7E            MOV     DPTR,#sata+07EH
000D 7412              MOV     A,#012H
000F F0                MOVX    @DPTR,A
0010         ?C0100:
                                           ; SOURCE LINE # 41
                                           ; SOURCE LINE # 42
                                           ; SOURCE LINE # 44
0010 E5D6              MOV     A,SFR_CHP_rdy
0012 55D7              ANL     A,SFR_CHP_en
0014 65D7              XRL     A,SFR_CHP_en
0016 600B              JZ      ?C0101
0018         ?C0102:
                                           ; SOURCE LINE # 45
0018 7800        R     MOV     R0,#LOW g_current_fis_num
001A E6                MOV     A,@R0
001B B59F05            CJNE    A,SFR_fis_num,?C0101
001E         ?C0103:
                                           ; SOURCE LINE # 49
001E 120000      R     LCALL   check_power_loss
                                           ; SOURCE LINE # 51
0021 80ED              SJMP    ?C0100
0023         ?C0101:
                                           ; SOURCE LINE # 52
0023 C200        R     CLR     g_cont_en
C51 COMPILER V9.50a   SHARK                                                                07/26/2013 11:07:39 PAGE 36  

                                           ; SOURCE LINE # 53
                                           ; SOURCE LINE # 54
0025 22                RET     
             ; FUNCTION reset_engine_read_write (END)

             ; FUNCTION check_lba (BEGIN)
                                           ; SOURCE LINE # 55
                                           ; SOURCE LINE # 56
                                           ; SOURCE LINE # 57
0000 C200        R     CLR     g_flag_lba_err
                                           ; SOURCE LINE # 59
0002 E5D1              MOV     A,SFR_cmd_aux
0004 30E514            JNB     ACC.5,?C0105
                                           ; SOURCE LINE # 60
                                           ; SOURCE LINE # 62
0007 E5BE              MOV     A,SFR_lba_comp
0009 30E609            JNB     ACC.6,?C0106
000C 7BFF              MOV     R3,#0FFH
000E 7A00        R     MOV     R2,#HIGH ?SC_7
0010 7900        R     MOV     R1,#LOW ?SC_7
0012 120000      R     LCALL   _printu
0015         ?C0106:
                                           ; SOURCE LINE # 63
0015 75C901            MOV     SFR_smart_load,#01H
                                           ; SOURCE LINE # 72
0018 020000      R     LJMP    choose_lba
                                           ; SOURCE LINE # 83
001B         ?C0105:
                                           ; SOURCE LINE # 86
                                           ; SOURCE LINE # 99
001B 75C903            MOV     SFR_smart_load,#03H
                                           ; SOURCE LINE # 102
                                           ; SOURCE LINE # 103
001E         ?C0108:
001E 22                RET     
             ; FUNCTION check_lba (END)

             ; FUNCTION check_chs (BEGIN)
                                           ; SOURCE LINE # 108
                                           ; SOURCE LINE # 109
                                           ; SOURCE LINE # 110
0000 75C903            MOV     SFR_smart_load,#03H
                                           ; SOURCE LINE # 113
0003 E4                CLR     A
0004 90FF57            MOV     DPTR,#sata+057H
0007 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 114
0008 7A00        R     MOV     R2,#HIGH ?SC_17
000A 7900        R     MOV     R1,#LOW ?SC_17
000C 120000      R     LCALL   L?0893
                                           ; SOURCE LINE # 115
000F 907FBC            MOV     DPTR,#07FBCH
0012 E4                CLR     A
0013 93                MOVC    A,@A+DPTR
0014 90FF57            MOV     DPTR,#sata+057H
0017 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 118
0018 22                RET     
             ; FUNCTION check_chs (END)

             ; FUNCTION check_sec_cnt (BEGIN)
                                           ; SOURCE LINE # 125
C51 COMPILER V9.50a   SHARK                                                                07/26/2013 11:07:39 PAGE 37  

                                           ; SOURCE LINE # 126
                                           ; SOURCE LINE # 128
0000 85BD00      R     MOV     g_sec_cnt,SFR_smart_cnt+01H
0003 85BC00      R     MOV     g_sec_cnt+01H,SFR_smart_cnt
                                           ; SOURCE LINE # 129
0006 22                RET     
             ; FUNCTION check_sec_cnt (END)

             ; FUNCTION soft_lba_add (BEGIN)
                                           ; SOURCE LINE # 135
                                           ; SOURCE LINE # 136
                                           ; SOURCE LINE # 140
0000 E4                CLR     A
0001 90FF57            MOV     DPTR,#sata+057H
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 141
0005 90FF78            MOV     DPTR,#sata+078H
0008 E0                MOVX    A,@DPTR
0009 F500        R     MOV     g_lba_add,A
                                           ; SOURCE LINE # 142
000B A3                INC     DPTR
000C E0                MOVX    A,@DPTR
000D F500        R     MOV     g_lba_add+01H,A
                                           ; SOURCE LINE # 143
000F A3                INC     DPTR
0010 E0                MOVX    A,@DPTR
0011 F500        R     MOV     g_lba_add+02H,A
                                           ; SOURCE LINE # 144
0013 A3                INC     DPTR
0014 E0                MOVX    A,@DPTR
0015 F500        R     MOV     g_lba_add+03H,A
                                           ; SOURCE LINE # 145
0017 907FBC            MOV     DPTR,#07FBCH
001A E4                CLR     A
001B 93                MOVC    A,@A+DPTR
001C 90FF57            MOV     DPTR,#sata+057H
001F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 147
;---- Variable 'tmp_data' assigned to Register 'R7' ----
0020 AF00        R     MOV     R7,g_lba_add
                                           ; SOURCE LINE # 148
0022 E500        R     MOV     A,g_sec_cnt+01H
0024 6006              JZ      ?C0111
                                           ; SOURCE LINE # 149
0026 E500        R     MOV     A,g_sec_cnt+01H
0028 2500        R     ADD     A,g_lba_add
002A F500        R     MOV     g_lba_add,A
002C         ?C0111:
                                           ; SOURCE LINE # 151
002C EF                MOV     A,R7
002D D3                SETB    C
002E 9500        R     SUBB    A,g_lba_add
0030 5004              JNC     ?C0113
0032 E500        R     MOV     A,g_sec_cnt+01H
0034 7016              JNZ     ?C0116
0036         ?C0113:
                                           ; SOURCE LINE # 152
                                           ; SOURCE LINE # 153
0036 AF00        R     MOV     R7,g_lba_add+01H
                                           ; SOURCE LINE # 154
0038 0500        R     INC     g_lba_add+01H
                                           ; SOURCE LINE # 156
C51 COMPILER V9.50a   SHARK                                                                07/26/2013 11:07:39 PAGE 38  

003A EF                MOV     A,R7
003B D3                SETB    C
003C 9500        R     SUBB    A,g_lba_add+01H
003E 400C              JC      ?C0116
                                           ; SOURCE LINE # 157
                                           ; SOURCE LINE # 158
0040 AF00        R     MOV     R7,g_lba_add+02H
                                           ; SOURCE LINE # 159
0042 0500        R     INC     g_lba_add+02H
                                           ; SOURCE LINE # 161
0044 EF                MOV     A,R7
0045 D3                SETB    C
0046 9500        R     SUBB    A,g_lba_add+02H
0048 4002              JC      ?C0116
                                           ; SOURCE LINE # 162
                                           ; SOURCE LINE # 163
                                           ; SOURCE LINE # 164
004A 0500        R     INC     g_lba_add+03H
                                           ; SOURCE LINE # 165
                                           ; SOURCE LINE # 166
                                           ; SOURCE LINE # 167
                                           ; SOURCE LINE # 169
004C         ?C0116:
004C 22                RET     
             ; FUNCTION soft_lba_add (END)

             ; FUNCTION chs_cmp_lba (BEGIN)
                                           ; SOURCE LINE # 177
                                           ; SOURCE LINE # 178
                                           ; SOURCE LINE # 179
0000 E4                CLR     A
0001 90FF57            MOV     DPTR,#sata+057H
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 180
0005 90FF78            MOV     DPTR,#sata+078H
0008 E0                MOVX    A,@DPTR
0009 6500        R     XRL     A,g_lba_add
000B 7021              JNZ     discontinue
000D         ?C0117:
                                           ; SOURCE LINE # 181
000D 90FF79            MOV     DPTR,#sata+079H
0010 E0                MOVX    A,@DPTR
0011 B5001A      R     CJNE    A,g_lba_add+01H,discontinue
0014         ?C0119:
                                           ; SOURCE LINE # 182
0014 90FF7A            MOV     DPTR,#sata+07AH
0017 E0                MOVX    A,@DPTR
0018 B50013      R     CJNE    A,g_lba_add+02H,discontinue
001B         ?C0120:
                                           ; SOURCE LINE # 183
001B 90FF7B            MOV     DPTR,#sata+07BH
001E E0                MOVX    A,@DPTR
001F B5000C      R     CJNE    A,g_lba_add+03H,discontinue
0022         ?C0121:
                                           ; SOURCE LINE # 186
0022 907FBC            MOV     DPTR,#07FBCH
0025 E4                CLR     A
0026 93                MOVC    A,@A+DPTR
0027 90FF57            MOV     DPTR,#sata+057H
002A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 187
002B 7F01              MOV     R7,#01H
C51 COMPILER V9.50a   SHARK                                                                07/26/2013 11:07:39 PAGE 39  

002D 22                RET     
                                           ; SOURCE LINE # 189
002E         discontinue:
                                           ; SOURCE LINE # 190
002E 907FBC            MOV     DPTR,#07FBCH
0031 E4                CLR     A
0032 93                MOVC    A,@A+DPTR
0033 90FF57            MOV     DPTR,#sata+057H
0036 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 191
0037 7F00              MOV     R7,#00H
                                           ; SOURCE LINE # 192
0039         ?C0122:
0039 22                RET     
             ; FUNCTION chs_cmp_lba (END)

             ; FUNCTION chs_read_handle (BEGIN)
                                           ; SOURCE LINE # 195
                                           ; SOURCE LINE # 196
                                           ; SOURCE LINE # 202
0000 120000      R     LCALL   check_chs
                                           ; SOURCE LINE # 203
0003 120000      R     LCALL   reset_engine_read_write
                                           ; SOURCE LINE # 204
0006 7800        R     MOV     R0,#LOW g_current_fis_num
0008 E6                MOV     A,@R0
0009 659F              XRL     A,SFR_fis_num
000B 6003              JZ      $ + 5H
000D 020000      R     LJMP    ?C0124
0010         ?C0123:
                                           ; SOURCE LINE # 206
0010 90FF7E            MOV     DPTR,#sata+07EH
0013 7420              MOV     A,#020H
0015 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 207
0016 D200        R     SETB    g_cont_en
                                           ; SOURCE LINE # 208
0018 E4                CLR     A
0019 F500        R     MOV     temp_sel,A
                                           ; SOURCE LINE # 209
001B 907FB7            MOV     DPTR,#07FB7H
001E 93                MOVC    A,@A+DPTR
001F B40505            CJNE    A,#05H,?C0125
0022 75000F      R     MOV     boundary_check,#0FH
0025 8010              SJMP    ?C0126
0027         ?C0125:
                                           ; SOURCE LINE # 210
0027 907FB7            MOV     DPTR,#07FB7H
002A E4                CLR     A
002B 93                MOVC    A,@A+DPTR
002C B40405            CJNE    A,#04H,?C0127
002F 750007      R     MOV     boundary_check,#07H
0032 8003              SJMP    ?C0126
0034         ?C0127:
                                           ; SOURCE LINE # 211
0034 750003      R     MOV     boundary_check,#03H
0037         ?C0126:
                                           ; SOURCE LINE # 213
0037 75C90C            MOV     SFR_smart_load,#0CH
                                           ; SOURCE LINE # 214
003A E4                CLR     A
003B F5FA              MOV     SFR_dma_base+01H,A
C51 COMPILER V9.50a   SHARK                                                                07/26/2013 11:07:39 PAGE 40  

003D F5F9              MOV     SFR_dma_base,A
                                           ; SOURCE LINE # 215
003F 75F8D8            MOV     SFR_dma_cntl,#0D8H
                                           ; SOURCE LINE # 218
0042 90FF57            MOV     DPTR,#sata+057H
0045 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 219
0046 7BFF              MOV     R3,#0FFH
0048 7A00        R     MOV     R2,#HIGH ?SC_44
004A 7900        R     MOV     R1,#LOW ?SC_44
004C 120000      R     LCALL   L?0894
                                           ; SOURCE LINE # 220
004F 907FBC            MOV     DPTR,#07FBCH
0052 E4                CLR     A
0053 93                MOVC    A,@A+DPTR
0054 90FF57            MOV     DPTR,#sata+057H
0057 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 223
0058         chs_read_cont:
                                           ; SOURCE LINE # 224
0058 E5D7              MOV     A,SFR_CHP_en
005A 6401              XRL     A,#01H
005C 7027              JNZ     ?C0136
                                           ; SOURCE LINE # 225
                                           ; SOURCE LINE # 226
005E F500        R     MOV     temp_sel,A
                                           ; SOURCE LINE # 227
0060 90FF78            MOV     DPTR,#sata+078H
0063 E0                MOVX    A,@DPTR
0064 FF                MOV     R7,A
;---- Variable 'temp_lba_low' assigned to Register 'R7' ----
0065         ?C0131:
                                           ; SOURCE LINE # 228
0065 20E848            JB      sata_burst_done,?C0135
                                           ; SOURCE LINE # 229
                                           ; SOURCE LINE # 230
;---- Variable 'temp8' assigned to Register 'R6' ----
0068 AEFD              MOV     R6,SFR_dma_done_num_l
                                           ; SOURCE LINE # 231
006A EF                MOV     A,R7
006B 2E                ADD     A,R6
006C 5500        R     ANL     A,boundary_check
006E 700D              JNZ     ?C0133
0070 E500        R     MOV     A,temp_sel
0072 6E                XRL     A,R6
0073 6008              JZ      ?C0133
                                           ; SOURCE LINE # 232
                                           ; SOURCE LINE # 233
0075 8E00        R     MOV     temp_sel,R6
                                           ; SOURCE LINE # 234
0077 90FF7E            MOV     DPTR,#sata+07EH
007A 742B              MOV     A,#02BH
007C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 235
007D         ?C0133:
                                           ; SOURCE LINE # 236
007D 7800        R     MOV     R0,#LOW g_current_fis_num
007F E6                MOV     A,@R0
0080 659F              XRL     A,SFR_fis_num
0082 60E1              JZ      ?C0131
0084 22                RET     
                                           ; SOURCE LINE # 238
C51 COMPILER V9.50a   SHARK                                                                07/26/2013 11:07:39 PAGE 41  

                                           ; SOURCE LINE # 240
0085         ?C0136:
                                           ; SOURCE LINE # 241
0085 20E828            JB      sata_burst_done,?C0135
                                           ; SOURCE LINE # 242
                                           ; SOURCE LINE # 243
0088 90FFC6            MOV     DPTR,#sata+0C6H
008B E0                MOVX    A,@DPTR
008C 6500        R     XRL     A,temp_sel
008E 6018              JZ      ?C0138
                                           ; SOURCE LINE # 244
                                           ; SOURCE LINE # 245
0090 90FFCD            MOV     DPTR,#sata+0CDH
0093 E500        R     MOV     A,temp_sel
0095 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 246
0096 90FF7E            MOV     DPTR,#sata+07EH
0099 742B              MOV     A,#02BH
009B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 247
009C 90FFC6            MOV     DPTR,#sata+0C6H
009F E0                MOVX    A,@DPTR
00A0 F500        R     MOV     temp_sel,A
                                           ; SOURCE LINE # 248
00A2 90FFCD            MOV     DPTR,#sata+0CDH
00A5 74FF              MOV     A,#0FFH
00A7 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 249
00A8         ?C0138:
                                           ; SOURCE LINE # 250
00A8 7800        R     MOV     R0,#LOW g_current_fis_num
00AA E6                MOV     A,@R0
00AB 659F              XRL     A,SFR_fis_num
00AD 60D6              JZ      ?C0136
00AF         ?C0817:
00AF 22                RET     
                                           ; SOURCE LINE # 252
00B0         ?C0135:
                                           ; SOURCE LINE # 254
00B0 30EA03            JNB     sata_burst_abort,$ + 6H
00B3 020000      R     LJMP    chs_read_err
00B6         ?C0140:
                                           ; SOURCE LINE # 256
00B6 120000      R     LCALL   L?0907
                                           ; SOURCE LINE # 257
00B9 90FF5C            MOV     DPTR,#sata+05CH
00BC E0                MOVX    A,@DPTR
00BD 30E703            JNB     ACC.7,$ + 6H
00C0 020000      R     LJMP    chs_read_over
00C3 A3                INC     DPTR
00C4 E0                MOVX    A,@DPTR
00C5 20E778            JB      ACC.7,chs_read_over
00C8 A3                INC     DPTR
00C9 E0                MOVX    A,@DPTR
00CA 20E773            JB      ACC.7,chs_read_over
00CD A3                INC     DPTR
00CE E0                MOVX    A,@DPTR
00CF 20E76E            JB      ACC.7,chs_read_over
00D2 90FF76            MOV     DPTR,#sata+076H
00D5 E0                MOVX    A,@DPTR
00D6 20E767            JB      ACC.7,chs_read_over
                                           ; SOURCE LINE # 258
C51 COMPILER V9.50a   SHARK                                                                07/26/2013 11:07:39 PAGE 42  

                                           ; SOURCE LINE # 259
                                           ; SOURCE LINE # 260
00D9         ?C0142:
                                           ; SOURCE LINE # 262
00D9 75F818            MOV     SFR_dma_cntl,#018H
                                           ; SOURCE LINE # 265
00DC 120000      R     LCALL   soft_lba_add
                                           ; SOURCE LINE # 268
00DF E4                CLR     A
00E0 90FF57            MOV     DPTR,#sata+057H
00E3 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 269
00E4 7BFF              MOV     R3,#0FFH
00E6 7A00        R     MOV     R2,#HIGH ?SC_71
00E8 7900        R     MOV     R1,#LOW ?SC_71
00EA 120000      R     LCALL   L?0894
                                           ; SOURCE LINE # 270
00ED 907FBC            MOV     DPTR,#07FBCH
00F0 E4                CLR     A
00F1 93                MOVC    A,@A+DPTR
00F2 90FF57            MOV     DPTR,#sata+057H
00F5 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 274
00F6 E4                CLR     A
00F7 F5D9              MOV     SFR_watch_dog_high,A
00F9         ?C0145:
                                           ; SOURCE LINE # 275
                                           ; SOURCE LINE # 276
                                           ; SOURCE LINE # 277
00F9 7800        R     MOV     R0,#LOW g_current_fis_num
00FB E6                MOV     A,@R0
00FC 659F              XRL     A,SFR_fis_num
00FE 6034              JZ      ?C0147
                                           ; SOURCE LINE # 278
                                           ; SOURCE LINE # 281
0100 120000      R     LCALL   check_sec_cnt
                                           ; SOURCE LINE # 283
0103 E596              MOV     A,SFR_FIS0_2
0105 64C8              XRL     A,#0C8H
0107 7037              JNZ     chs_read_over
0109 E5D1              MOV     A,SFR_cmd_aux
010B 20E532            JB      ACC.5,chs_read_over
                                           ; SOURCE LINE # 284
                                           ; SOURCE LINE # 286
010E 120000      R     LCALL   chs_cmp_lba
0111 EF                MOV     A,R7
0112 602C              JZ      chs_read_over
0114         ?C0149:
                                           ; SOURCE LINE # 289
0114 7800        R     MOV     R0,#LOW g_current_fis_num
0116 A69F              MOV     @R0,SFR_fis_num
                                           ; SOURCE LINE # 290
0118 90FF1E            MOV     DPTR,#sata+01EH
011B E0                MOVX    A,@DPTR
011C 54FD              ANL     A,#0FDH
011E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 294
011F 7F01              MOV     R7,#01H
0121 7E00              MOV     R6,#00H
0123 120000      R     LCALL   _delay
                                           ; SOURCE LINE # 296
0126 75C90C            MOV     SFR_smart_load,#0CH
C51 COMPILER V9.50a   SHARK                                                                07/26/2013 11:07:39 PAGE 43  

                                           ; SOURCE LINE # 297
0129 E4                CLR     A
012A F5FA              MOV     SFR_dma_base+01H,A
012C F5F9              MOV     SFR_dma_base,A
                                           ; SOURCE LINE # 298
012E 75F8D8            MOV     SFR_dma_cntl,#0D8H
                                           ; SOURCE LINE # 299
0131 020000      R     LJMP    chs_read_cont
                                           ; SOURCE LINE # 300
                                           ; SOURCE LINE # 301
                                           ; SOURCE LINE # 302
0134         ?C0147:
                                           ; SOURCE LINE # 303
0134 E5D9              MOV     A,SFR_watch_dog_high
0136 D3                SETB    C
0137 9420              SUBB    A,#020H
0139 40BE              JC      ?C0145
013B 8003              SJMP    chs_read_over
                                           ; SOURCE LINE # 305
                                           ; SOURCE LINE # 307
013D         chs_read_err:
                                           ; SOURCE LINE # 308
                                           ; SOURCE LINE # 310
013D 120000      R     LCALL   L?0900
                                           ; SOURCE LINE # 312
0140         chs_read_over:
                                           ; SOURCE LINE # 313
0140 120000      R     LCALL   reset_engine
                                           ; SOURCE LINE # 315
0143         ?C0124:
0143 22                RET     
             ; FUNCTION chs_read_handle (END)

             ; FUNCTION chs_write_handle (BEGIN)
                                           ; SOURCE LINE # 318
                                           ; SOURCE LINE # 319
                                           ; SOURCE LINE # 321
0000 120000      R     LCALL   check_chs
                                           ; SOURCE LINE # 322
0003 120000      R     LCALL   reset_engine_read_write
                                           ; SOURCE LINE # 323
0006 7800        R     MOV     R0,#LOW g_current_fis_num
0008 E6                MOV     A,@R0
0009 659F              XRL     A,SFR_fis_num
000B 6003              JZ      $ + 5H
000D 020000      R     LJMP    ?C0153
0010         ?C0152:
                                           ; SOURCE LINE # 336
                                           ; SOURCE LINE # 337
0010 90FF7E            MOV     DPTR,#sata+07EH
0013 7430              MOV     A,#030H
0015 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 338
0016 D200        R     SETB    g_cont_en
                                           ; SOURCE LINE # 339
0018 75C90C            MOV     SFR_smart_load,#0CH
                                           ; SOURCE LINE # 340
001B E4                CLR     A
001C F5FA              MOV     SFR_dma_base+01H,A
001E F5F9              MOV     SFR_dma_base,A
                                           ; SOURCE LINE # 341
0020 75F898            MOV     SFR_dma_cntl,#098H
C51 COMPILER V9.50a   SHARK                                                                07/26/2013 11:07:39 PAGE 44  

                                           ; SOURCE LINE # 342
                                           ; SOURCE LINE # 345
                                           ; SOURCE LINE # 346
0023 120000      R     LCALL   L?0892
                                           ; SOURCE LINE # 347
0026 907FBC            MOV     DPTR,#07FBCH
0029 E4                CLR     A
002A 93                MOVC    A,@A+DPTR
002B 90FF57            MOV     DPTR,#sata+057H
002E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 350
002F         chs_write_cont:
002F         ?C0155:
                                           ; SOURCE LINE # 351
002F 20E808            JB      sata_burst_done,?C0156
                                           ; SOURCE LINE # 352
                                           ; SOURCE LINE # 353
0032 7800        R     MOV     R0,#LOW g_current_fis_num
0034 E6                MOV     A,@R0
0035 659F              XRL     A,SFR_fis_num
0037 60F6              JZ      ?C0155
0039 22                RET     
003A         ?C0156:
                                           ; SOURCE LINE # 355
003A 30EA03            JNB     sata_burst_abort,$ + 6H
003D 020000      R     LJMP    chs_write_err
0040         ?C0158:
0040         ?C0160:
                                           ; SOURCE LINE # 365
0040 20F808            JB      dma_done,?C0161
                                           ; SOURCE LINE # 366
                                           ; SOURCE LINE # 367
0043 7800        R     MOV     R0,#LOW g_current_fis_num
0045 E6                MOV     A,@R0
0046 659F              XRL     A,SFR_fis_num
0048 60F6              JZ      ?C0160
004A         ?C0818:
004A 22                RET     
004B         ?C0161:
                                           ; SOURCE LINE # 370
004B 120000      R     LCALL   L?0907
                                           ; SOURCE LINE # 371
004E 90FF5C            MOV     DPTR,#sata+05CH
0051 E0                MOVX    A,@DPTR
0052 20E76E            JB      ACC.7,chs_write_over
0055 A3                INC     DPTR
0056 E0                MOVX    A,@DPTR
0057 20E769            JB      ACC.7,chs_write_over
005A A3                INC     DPTR
005B E0                MOVX    A,@DPTR
005C 20E764            JB      ACC.7,chs_write_over
005F A3                INC     DPTR
0060 E0                MOVX    A,@DPTR
0061 20E75F            JB      ACC.7,chs_write_over
0064 90FF76            MOV     DPTR,#sata+076H
0067 E0                MOVX    A,@DPTR
0068 20E758            JB      ACC.7,chs_write_over
                                           ; SOURCE LINE # 372
                                           ; SOURCE LINE # 373
                                           ; SOURCE LINE # 374
006B         ?C0163:
                                           ; SOURCE LINE # 375
C51 COMPILER V9.50a   SHARK                                                                07/26/2013 11:07:39 PAGE 45  

006B 75F818            MOV     SFR_dma_cntl,#018H
                                           ; SOURCE LINE # 378
006E 120000      R     LCALL   soft_lba_add
                                           ; SOURCE LINE # 381
0071 E4                CLR     A
                                           ; SOURCE LINE # 382
0072 120000      R     LCALL   L?0892
                                           ; SOURCE LINE # 383
0075 907FBC            MOV     DPTR,#07FBCH
0078 E4                CLR     A
0079 93                MOVC    A,@A+DPTR
007A 90FF57            MOV     DPTR,#sata+057H
007D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 387
007E E4                CLR     A
007F F5D9              MOV     SFR_watch_dog_high,A
0081         ?C0166:
                                           ; SOURCE LINE # 388
                                           ; SOURCE LINE # 389
                                           ; SOURCE LINE # 390
0081 7800        R     MOV     R0,#LOW g_current_fis_num
0083 E6                MOV     A,@R0
0084 659F              XRL     A,SFR_fis_num
0086 602D              JZ      ?C0168
                                           ; SOURCE LINE # 391
                                           ; SOURCE LINE # 392
0088 120000      R     LCALL   check_sec_cnt
                                           ; SOURCE LINE # 394
008B E596              MOV     A,SFR_FIS0_2
008D 64CA              XRL     A,#0CAH
008F 7032              JNZ     chs_write_over
0091 E5D1              MOV     A,SFR_cmd_aux
0093 20E52D            JB      ACC.5,chs_write_over
                                           ; SOURCE LINE # 395
                                           ; SOURCE LINE # 397
0096 120000      R     LCALL   chs_cmp_lba
0099 EF                MOV     A,R7
009A 6027              JZ      chs_write_over
009C         ?C0170:
                                           ; SOURCE LINE # 399
009C 7800        R     MOV     R0,#LOW g_current_fis_num
009E A69F              MOV     @R0,SFR_fis_num
                                           ; SOURCE LINE # 400
00A0 90FF1E            MOV     DPTR,#sata+01EH
00A3 E0                MOVX    A,@DPTR
00A4 54FD              ANL     A,#0FDH
00A6 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 401
00A7 75C90C            MOV     SFR_smart_load,#0CH
                                           ; SOURCE LINE # 402
00AA E4                CLR     A
00AB F5FA              MOV     SFR_dma_base+01H,A
00AD F5F9              MOV     SFR_dma_base,A
                                           ; SOURCE LINE # 403
00AF 75F898            MOV     SFR_dma_cntl,#098H
                                           ; SOURCE LINE # 404
00B2 020000      R     LJMP    ?C0155
                                           ; SOURCE LINE # 405
                                           ; SOURCE LINE # 406
                                           ; SOURCE LINE # 407
00B5         ?C0168:
                                           ; SOURCE LINE # 408
C51 COMPILER V9.50a   SHARK                                                                07/26/2013 11:07:39 PAGE 46  

00B5 90FFBA            MOV     DPTR,#sata+0BAH
00B8 E0                MOVX    A,@DPTR
00B9 D3                SETB    C
00BA 9404              SUBB    A,#04H
00BC 40C3              JC      ?C0166
00BE 8003              SJMP    chs_write_over
                                           ; SOURCE LINE # 410
                                           ; SOURCE LINE # 412
00C0         chs_write_err:
                                           ; SOURCE LINE # 413
                                           ; SOURCE LINE # 415
00C0 120000      R     LCALL   L?0900
                                           ; SOURCE LINE # 417
00C3         chs_write_over:
                                           ; SOURCE LINE # 418
00C3 120000      R     LCALL   reset_engine
                                           ; SOURCE LINE # 420
00C6         ?C0153:
00C6 22                RET     
             ; FUNCTION chs_write_handle (END)

             ; FUNCTION read_handler (BEGIN)
                                           ; SOURCE LINE # 422
                                           ; SOURCE LINE # 423
                                           ; SOURCE LINE # 424
                                           ; SOURCE LINE # 438
0000 90FF78            MOV     DPTR,#sata+078H
0003 E0                MOVX    A,@DPTR
;---- Variable 'temp_lba_low' assigned to Register 'R1' ----
0004 F9                MOV     R1,A
                                           ; SOURCE LINE # 439
0005 120000      R     LCALL   reset_engine_read_write
                                           ; SOURCE LINE # 440
0008 7800        R     MOV     R0,#LOW g_current_fis_num
000A E6                MOV     A,@R0
000B 659F              XRL     A,SFR_fis_num
000D 6003              JZ      $ + 5H
000F 020000      R     LJMP    ?C0174
0012         ?C0173:
                                           ; SOURCE LINE # 448
0012 90FF7E            MOV     DPTR,#sata+07EH
0015 7420              MOV     A,#020H
0017 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 449
0018 75C90C            MOV     SFR_smart_load,#0CH
                                           ; SOURCE LINE # 450
001B E4                CLR     A
001C F5FA              MOV     SFR_dma_base+01H,A
001E F5F9              MOV     SFR_dma_base,A
                                           ; SOURCE LINE # 451
0020 75F8DC            MOV     SFR_dma_cntl,#0DCH
                                           ; SOURCE LINE # 452
0023 D200        R     SETB    g_cont_en
                                           ; SOURCE LINE # 453
;---- Variable 'temp_sel' assigned to Register 'R2' ----
0025 FA                MOV     R2,A
                                           ; SOURCE LINE # 454
0026 907FB7            MOV     DPTR,#07FB7H
0029 93                MOVC    A,@A+DPTR
002A B40505            CJNE    A,#05H,?C0175
002D 75000F      R     MOV     boundary_check,#0FH
0030 8010              SJMP    read_cont
C51 COMPILER V9.50a   SHARK                                                                07/26/2013 11:07:39 PAGE 47  

0032         ?C0175:
                                           ; SOURCE LINE # 455
0032 907FB7            MOV     DPTR,#07FB7H
0035 E4                CLR     A
0036 93                MOVC    A,@A+DPTR
0037 B40405            CJNE    A,#04H,?C0177
003A 750007      R     MOV     boundary_check,#07H
003D 8003              SJMP    read_cont
003F         ?C0177:
                                           ; SOURCE LINE # 456
003F 750003      R     MOV     boundary_check,#03H
                                           ; SOURCE LINE # 457
                                           ; SOURCE LINE # 458
0042         read_cont:
                                           ; SOURCE LINE # 459
0042 E5D7              MOV     A,SFR_CHP_en
0044 6401              XRL     A,#01H
0046 7022              JNZ     ?C0186
                                           ; SOURCE LINE # 460
0048         ?C0181:
                                           ; SOURCE LINE # 461
0048 20E847            JB      sata_burst_done,?C0185
                                           ; SOURCE LINE # 462
                                           ; SOURCE LINE # 463
004B 85FD00      R     MOV     temp8,SFR_dma_done_num_l
                                           ; SOURCE LINE # 464
004E E500        R     MOV     A,temp8
0050 29                ADD     A,R1
0051 5500        R     ANL     A,boundary_check
0053 700D              JNZ     ?C0183
0055 EA                MOV     A,R2
0056 6500        R     XRL     A,temp8
0058 6008              JZ      ?C0183
                                           ; SOURCE LINE # 465
                                           ; SOURCE LINE # 466
005A AA00        R     MOV     R2,temp8
                                           ; SOURCE LINE # 467
005C 90FF7E            MOV     DPTR,#sata+07EH
005F 742B              MOV     A,#02BH
0061 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 468
0062         ?C0183:
                                           ; SOURCE LINE # 469
0062 7800        R     MOV     R0,#LOW g_current_fis_num
0064 E6                MOV     A,@R0
0065 659F              XRL     A,SFR_fis_num
0067 60DF              JZ      ?C0181
0069 22                RET     
                                           ; SOURCE LINE # 471
                                           ; SOURCE LINE # 473
006A         ?C0186:
                                           ; SOURCE LINE # 474
006A 20E825            JB      sata_burst_done,?C0185
                                           ; SOURCE LINE # 475
                                           ; SOURCE LINE # 476
006D 90FFC6            MOV     DPTR,#sata+0C6H
0070 E0                MOVX    A,@DPTR
0071 6A                XRL     A,R2
0072 6016              JZ      ?C0188
                                           ; SOURCE LINE # 477
                                           ; SOURCE LINE # 478
0074 90FFCD            MOV     DPTR,#sata+0CDH
C51 COMPILER V9.50a   SHARK                                                                07/26/2013 11:07:39 PAGE 48  

0077 EA                MOV     A,R2
0078 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 479
0079 90FF7E            MOV     DPTR,#sata+07EH
007C 742B              MOV     A,#02BH
007E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 480
007F 90FFC6            MOV     DPTR,#sata+0C6H
0082 E0                MOVX    A,@DPTR
0083 FA                MOV     R2,A
                                           ; SOURCE LINE # 481
0084 90FFCD            MOV     DPTR,#sata+0CDH
0087 74FF              MOV     A,#0FFH
0089 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 482
008A         ?C0188:
                                           ; SOURCE LINE # 483
008A 7800        R     MOV     R0,#LOW g_current_fis_num
008C E6                MOV     A,@R0
008D 659F              XRL     A,SFR_fis_num
008F 60D9              JZ      ?C0186
0091         ?C0819:
0091 22                RET     
                                           ; SOURCE LINE # 485
0092         ?C0185:
                                           ; SOURCE LINE # 487
0092 30EA03            JNB     sata_burst_abort,$ + 6H
0095 020000      R     LJMP    read_handler_err
0098         ?C0190:
                                           ; SOURCE LINE # 488
0098 120000      R     LCALL   L?0908
                                           ; SOURCE LINE # 489
009B 90FF5C            MOV     DPTR,#sata+05CH
009E E0                MOVX    A,@DPTR
009F 30E703            JNB     ACC.7,$ + 6H
00A2 020000      R     LJMP    read_handler_over
00A5 A3                INC     DPTR
00A6 E0                MOVX    A,@DPTR
00A7 30E703            JNB     ACC.7,$ + 6H
00AA 020000      R     LJMP    read_handler_over
00AD A3                INC     DPTR
00AE E0                MOVX    A,@DPTR
00AF 30E703            JNB     ACC.7,$ + 6H
00B2 020000      R     LJMP    read_handler_over
00B5 A3                INC     DPTR
00B6 E0                MOVX    A,@DPTR
00B7 30E703            JNB     ACC.7,$ + 6H
00BA 020000      R     LJMP    read_handler_over
00BD 90FF76            MOV     DPTR,#sata+076H
00C0 E0                MOVX    A,@DPTR
00C1 30E703            JNB     ACC.7,$ + 6H
00C4 020000      R     LJMP    read_handler_over
                                           ; SOURCE LINE # 490
                                           ; SOURCE LINE # 491
                                           ; SOURCE LINE # 492
00C7         ?C0192:
                                           ; SOURCE LINE # 494
00C7 E4                CLR     A
00C8 F5D9              MOV     SFR_watch_dog_high,A
00CA         ?C0195:
                                           ; SOURCE LINE # 495
                                           ; SOURCE LINE # 496
C51 COMPILER V9.50a   SHARK                                                                07/26/2013 11:07:39 PAGE 49  

                                           ; SOURCE LINE # 497
00CA E5D7              MOV     A,SFR_CHP_en
00CC 6401              XRL     A,#01H
00CE 601F              JZ      ?C0197
                                           ; SOURCE LINE # 498
                                           ; SOURCE LINE # 499
00D0 90FFC6            MOV     DPTR,#sata+0C6H
00D3 E0                MOVX    A,@DPTR
00D4 6A                XRL     A,R2
00D5 602F              JZ      ?C0199
                                           ; SOURCE LINE # 500
                                           ; SOURCE LINE # 501
00D7 90FFCD            MOV     DPTR,#sata+0CDH
00DA EA                MOV     A,R2
00DB F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 502
00DC 90FF7E            MOV     DPTR,#sata+07EH
00DF 742B              MOV     A,#02BH
00E1 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 503
00E2 90FFC6            MOV     DPTR,#sata+0C6H
00E5 E0                MOVX    A,@DPTR
00E6 FA                MOV     R2,A
                                           ; SOURCE LINE # 504
00E7 90FFCD            MOV     DPTR,#sata+0CDH
00EA 74FF              MOV     A,#0FFH
00EC F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 505
                                           ; SOURCE LINE # 506
00ED 8017              SJMP    ?C0199
00EF         ?C0197:
                                           ; SOURCE LINE # 508
                                           ; SOURCE LINE # 509
00EF 85FD00      R     MOV     temp8,SFR_dma_done_num_l
                                           ; SOURCE LINE # 510
00F2 E500        R     MOV     A,temp8
00F4 29                ADD     A,R1
00F5 5407              ANL     A,#07H
00F7 700D              JNZ     ?C0199
00F9 EA                MOV     A,R2
00FA 6500        R     XRL     A,temp8
00FC 6008              JZ      ?C0199
                                           ; SOURCE LINE # 511
                                           ; SOURCE LINE # 512
00FE AA00        R     MOV     R2,temp8
                                           ; SOURCE LINE # 513
0100 90FF7E            MOV     DPTR,#sata+07EH
0103 742B              MOV     A,#02BH
0105 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 514
                                           ; SOURCE LINE # 516
0106         ?C0199:
                                           ; SOURCE LINE # 517
0106 7800        R     MOV     R0,#LOW g_current_fis_num
0108 E6                MOV     A,@R0
0109 659F              XRL     A,SFR_fis_num
010B 6028              JZ      ?C0201
                                           ; SOURCE LINE # 518
                                           ; SOURCE LINE # 521
010D E5D1              MOV     A,SFR_cmd_aux
010F 54C0              ANL     A,#0C0H
0111 64C0              XRL     A,#0C0H
C51 COMPILER V9.50a   SHARK                                                                07/26/2013 11:07:39 PAGE 50  

0113 7027              JNZ     ?C0196
0115 300024      R     JNB     g_cont_en,?C0196
0118 E59E              MOV     A,SFR_quick_cmd
011A 30E01F            JNB     ACC.0,?C0196
                                           ; SOURCE LINE # 522
                                           ; SOURCE LINE # 524
011D 7F01              MOV     R7,#01H
011F 7E00              MOV     R6,#00H
0121 120000      R     LCALL   _delay
                                           ; SOURCE LINE # 526
0124 75C930            MOV     SFR_smart_load,#030H
                                           ; SOURCE LINE # 527
0127 D2ED              SETB    sata_burst_cont
                                           ; SOURCE LINE # 529
0129 A69F              MOV     @R0,SFR_fis_num
                                           ; SOURCE LINE # 530
012B 90FF1E            MOV     DPTR,#sata+01EH
012E E0                MOVX    A,@DPTR
012F 54FD              ANL     A,#0FDH
0131 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 531
0132 020000      R     LJMP    read_cont
                                           ; SOURCE LINE # 532
                                           ; SOURCE LINE # 533
                                           ; SOURCE LINE # 534
0135         ?C0201:
                                           ; SOURCE LINE # 535
0135 E5D9              MOV     A,SFR_watch_dog_high
0137 D3                SETB    C
0138 9420              SUBB    A,#020H
013A 408E              JC      ?C0195
013C         ?C0196:
                                           ; SOURCE LINE # 538
013C 120000      R     LCALL   smart_read_cnt
                                           ; SOURCE LINE # 540
013F 8003              SJMP    read_handler_over
                                           ; SOURCE LINE # 542
0141         read_handler_err:
                                           ; SOURCE LINE # 544
                                           ; SOURCE LINE # 546
0141 120000      R     LCALL   L?0901
                                           ; SOURCE LINE # 549
0144         read_handler_over:
                                           ; SOURCE LINE # 550
0144 120000      R     LCALL   reset_engine
                                           ; SOURCE LINE # 552
0147         ?C0174:
0147 22                RET     
             ; FUNCTION read_handler (END)

             ; FUNCTION write_handler (BEGIN)
                                           ; SOURCE LINE # 554
                                           ; SOURCE LINE # 555
                                           ; SOURCE LINE # 562
                                           ; SOURCE LINE # 563
0000 120000      R     LCALL   reset_engine_read_write
                                           ; SOURCE LINE # 566
0003 7800        R     MOV     R0,#LOW g_current_fis_num
0005 E6                MOV     A,@R0
0006 659F              XRL     A,SFR_fis_num
0008 6003              JZ      $ + 5H
000A 020000      R     LJMP    ?C0206
C51 COMPILER V9.50a   SHARK                                                                07/26/2013 11:07:39 PAGE 51  

000D         ?C0205:
                                           ; SOURCE LINE # 585
                                           ; SOURCE LINE # 586
000D 90FF7E            MOV     DPTR,#sata+07EH
0010 7430              MOV     A,#030H
0012 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 587
0013 75C90C            MOV     SFR_smart_load,#0CH
                                           ; SOURCE LINE # 588
0016 E4                CLR     A
0017 F5FA              MOV     SFR_dma_base+01H,A
0019 F5F9              MOV     SFR_dma_base,A
                                           ; SOURCE LINE # 589
001B 75F898            MOV     SFR_dma_cntl,#098H
                                           ; SOURCE LINE # 590
001E D200        R     SETB    g_cont_en
                                           ; SOURCE LINE # 591
                                           ; SOURCE LINE # 592
                                           ; SOURCE LINE # 594
0020         write_cont:
0020         ?C0208:
                                           ; SOURCE LINE # 595
0020 20E808            JB      sata_burst_done,?C0209
                                           ; SOURCE LINE # 596
                                           ; SOURCE LINE # 597
0023 7800        R     MOV     R0,#LOW g_current_fis_num
0025 E6                MOV     A,@R0
0026 659F              XRL     A,SFR_fis_num
0028 60F6              JZ      ?C0208
002A 22                RET     
002B         ?C0209:
                                           ; SOURCE LINE # 599
002B 20EA65            JB      sata_burst_abort,write_handler_err
002E         ?C0211:
002E         ?C0213:
                                           ; SOURCE LINE # 609
002E 20F808            JB      dma_done,?C0214
                                           ; SOURCE LINE # 610
                                           ; SOURCE LINE # 611
0031 7800        R     MOV     R0,#LOW g_current_fis_num
0033 E6                MOV     A,@R0
0034 659F              XRL     A,SFR_fis_num
0036 60F6              JZ      ?C0213
0038         ?C0820:
0038 22                RET     
0039         ?C0214:
                                           ; SOURCE LINE # 614
0039 120000      R     LCALL   L?0908
                                           ; SOURCE LINE # 615
003C 90FF5C            MOV     DPTR,#sata+05CH
003F E0                MOVX    A,@DPTR
0040 20E753            JB      ACC.7,write_handler_over
0043 A3                INC     DPTR
0044 E0                MOVX    A,@DPTR
0045 20E74E            JB      ACC.7,write_handler_over
0048 A3                INC     DPTR
0049 E0                MOVX    A,@DPTR
004A 20E749            JB      ACC.7,write_handler_over
004D A3                INC     DPTR
004E E0                MOVX    A,@DPTR
004F 20E744            JB      ACC.7,write_handler_over
0052 90FF76            MOV     DPTR,#sata+076H
C51 COMPILER V9.50a   SHARK                                                                07/26/2013 11:07:39 PAGE 52  

0055 E0                MOVX    A,@DPTR
0056 20E73D            JB      ACC.7,write_handler_over
                                           ; SOURCE LINE # 616
                                           ; SOURCE LINE # 617
                                           ; SOURCE LINE # 618
0059         ?C0216:
                                           ; SOURCE LINE # 620
0059 E4                CLR     A
005A F5D9              MOV     SFR_watch_dog_high,A
005C         ?C0219:
                                           ; SOURCE LINE # 621
                                           ; SOURCE LINE # 622
                                           ; SOURCE LINE # 623
005C 7800        R     MOV     R0,#LOW g_current_fis_num
005E E6                MOV     A,@R0
005F 659F              XRL     A,SFR_fis_num
0061 6022              JZ      ?C0221
                                           ; SOURCE LINE # 624
                                           ; SOURCE LINE # 627
0063 E5D1              MOV     A,SFR_cmd_aux
0065 54C0              ANL     A,#0C0H
0067 64C0              XRL     A,#0C0H
0069 7023              JNZ     ?C0220
006B 300020      R     JNB     g_cont_en,?C0220
006E E59E              MOV     A,SFR_quick_cmd
0070 30E41B            JNB     ACC.4,?C0220
                                           ; SOURCE LINE # 628
                                           ; SOURCE LINE # 629
0073 75C930            MOV     SFR_smart_load,#030H
                                           ; SOURCE LINE # 630
0076 D2ED              SETB    sata_burst_cont
                                           ; SOURCE LINE # 631
0078 D2FD              SETB    dma_cont
                                           ; SOURCE LINE # 632
007A A69F              MOV     @R0,SFR_fis_num
                                           ; SOURCE LINE # 633
007C 90FF1E            MOV     DPTR,#sata+01EH
007F E0                MOVX    A,@DPTR
0080 54FD              ANL     A,#0FDH
0082 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 637
0083 809B              SJMP    ?C0208
                                           ; SOURCE LINE # 638
                                           ; SOURCE LINE # 639
                                           ; SOURCE LINE # 640
0085         ?C0221:
                                           ; SOURCE LINE # 641
0085 90FFBA            MOV     DPTR,#sata+0BAH
0088 E0                MOVX    A,@DPTR
0089 D3                SETB    C
008A 9404              SUBB    A,#04H
008C 40CE              JC      ?C0219
008E         ?C0220:
                                           ; SOURCE LINE # 644
008E 120000      R     LCALL   smart_write_cnt
                                           ; SOURCE LINE # 646
0091 8003              SJMP    write_handler_over
                                           ; SOURCE LINE # 648
0093         write_handler_err:
                                           ; SOURCE LINE # 649
                                           ; SOURCE LINE # 651
0093 120000      R     LCALL   L?0901
C51 COMPILER V9.50a   SHARK                                                                07/26/2013 11:07:39 PAGE 53  

                                           ; SOURCE LINE # 653
0096         write_handler_over:
                                           ; SOURCE LINE # 655
0096 120000      R     LCALL   reset_engine
                                           ; SOURCE LINE # 657
0099         ?C0206:
0099 22                RET     
             ; FUNCTION write_handler (END)

             ; FUNCTION pio_read_handler (BEGIN)
                                           ; SOURCE LINE # 666
                                           ; SOURCE LINE # 667
                                           ; SOURCE LINE # 669
0000 E4                CLR     A
0001 7800        R     MOV     R0,#LOW pio_interrput
0003 F6                MOV     @R0,A
                                           ; SOURCE LINE # 670
0004 300003      R     JNB     g_flag_lba_err,$ + 6H
0007 020000      R     LJMP    pio_handler_err
000A         ?C0225:
000A         ?C0229:
                                           ; SOURCE LINE # 673
                                           ; SOURCE LINE # 674
000A 120000      R     LCALL   reset_engine_read_write
                                           ; SOURCE LINE # 675
000D 7800        R     MOV     R0,#LOW g_current_fis_num
000F E6                MOV     A,@R0
0010 659F              XRL     A,SFR_fis_num
0012 6003              JZ      $ + 5H
0014 020000      R     LJMP    ?C0231
0017         ?C0230:
                                           ; SOURCE LINE # 678
0017 90FF7E            MOV     DPTR,#sata+07EH
001A 7420              MOV     A,#020H
001C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 679
001D 75FC00            MOV     SFR_dma_max_num+01H,#00H
0020 75FB01            MOV     SFR_dma_max_num,#01H
                                           ; SOURCE LINE # 681
                                           ; SOURCE LINE # 682
0023 E500        R     MOV     A,g_sec_cnt+01H
0025 6401              XRL     A,#01H
0027 4500        R     ORL     A,g_sec_cnt
0029 700D              JNZ     ?C0232
002B 850000      R     MOV     ?_tx_fis_5f?BYTE+03H,g_sec_cnt+01H
002E 850000      R     MOV     ?_tx_fis_5f?BYTE+04H,g_sec_cnt
0031 750050      R     MOV     ?_tx_fis_5f?BYTE+05H,#050H
0034 7BE0              MOV     R3,#0E0H
0036 800C              SJMP    ?C0821
0038         ?C0232:
                                           ; SOURCE LINE # 683
0038 850000      R     MOV     ?_tx_fis_5f?BYTE+03H,g_sec_cnt+01H
003B 850000      R     MOV     ?_tx_fis_5f?BYTE+04H,g_sec_cnt
003E 7500D0      R     MOV     ?_tx_fis_5f?BYTE+05H,#0D0H
0041 7BE0              MOV     R3,#0E0H
0043 E4                CLR     A
0044         ?C0821:
0044 FD                MOV     R5,A
0045 7F58              MOV     R7,#058H
0047 120000      R     LCALL   _tx_fis_5f
004A         ?C0233:
                                           ; SOURCE LINE # 684
C51 COMPILER V9.50a   SHARK                                                                07/26/2013 11:07:39 PAGE 54  

                                           ; SOURCE LINE # 689
004A 75F8C8            MOV     SFR_dma_cntl,#0C8H
004D         ?C0234:
                                           ; SOURCE LINE # 691
004D 20E808            JB      sata_burst_done,?C0235
                                           ; SOURCE LINE # 692
                                           ; SOURCE LINE # 693
0050 7800        R     MOV     R0,#LOW g_current_fis_num
0052 E6                MOV     A,@R0
0053 659F              XRL     A,SFR_fis_num
0055 60F6              JZ      ?C0234
0057 22                RET     
0058         ?C0235:
                                           ; SOURCE LINE # 695
0058 20EA31            JB      sata_burst_abort,pio_handler_err
005B         ?C0237:
005B         ?C0238:
                                           ; SOURCE LINE # 698
005B 20F808            JB      dma_done,?C0239
                                           ; SOURCE LINE # 699
                                           ; SOURCE LINE # 700
005E 7800        R     MOV     R0,#LOW g_current_fis_num
0060 E6                MOV     A,@R0
0061 659F              XRL     A,SFR_fis_num
0063 60F6              JZ      ?C0238
0065 22                RET     
0066         ?C0239:
                                           ; SOURCE LINE # 704
0066 75F808            MOV     SFR_dma_cntl,#08H
                                           ; SOURCE LINE # 705
0069 E500        R     MOV     A,g_sec_cnt+01H
006B 1500        R     DEC     g_sec_cnt+01H
006D 7002              JNZ     ?C0780
006F 1500        R     DEC     g_sec_cnt
0071         ?C0780:
                                           ; SOURCE LINE # 706
0071 75BE08            MOV     SFR_lba_comp,#08H
                                           ; SOURCE LINE # 708
0074 D3                SETB    C
0075 E500        R     MOV     A,g_sec_cnt+01H
0077 9400              SUBB    A,#00H
0079 E500        R     MOV     A,g_sec_cnt
007B 9400              SUBB    A,#00H
007D 508B              JNC     ?C0229
                                           ; SOURCE LINE # 709
007F 90FF14            MOV     DPTR,#sata+014H
0082 E500        R     MOV     A,g_sec_cnt+01H
0084 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 710
0085 A3                INC     DPTR
0086 E500        R     MOV     A,g_sec_cnt
0088 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 713
                                           ; SOURCE LINE # 715
0089 020000      R     LJMP    smart_read_cnt
                                           ; SOURCE LINE # 716
                                           ; SOURCE LINE # 720
008C         pio_handler_err:
                                           ; SOURCE LINE # 721
                                           ; SOURCE LINE # 722
008C 120000      R     LCALL   L?0909
                                           ; SOURCE LINE # 724
C51 COMPILER V9.50a   SHARK                                                                07/26/2013 11:07:39 PAGE 55  

008F 120000      R     LCALL   L?0902
                                           ; SOURCE LINE # 725
0092 120000      R     LCALL   reset_engine
                                           ; SOURCE LINE # 728
0095         ?C0231:
0095 22                RET     
             ; FUNCTION pio_read_handler (END)

             ; FUNCTION pio_write_handler (BEGIN)
                                           ; SOURCE LINE # 732
                                           ; SOURCE LINE # 733
                                           ; SOURCE LINE # 735
0000 E4                CLR     A
0001 7800        R     MOV     R0,#LOW pio_interrput
0003 F6                MOV     @R0,A
                                           ; SOURCE LINE # 736
0004 200077      R     JB      g_flag_lba_err,pio_handler_err
0007         ?C0241:
                                           ; SOURCE LINE # 738
0007 120000      R     LCALL   reset_engine_read_write
                                           ; SOURCE LINE # 739
000A 7800        R     MOV     R0,#LOW g_current_fis_num
000C E6                MOV     A,@R0
000D 659F              XRL     A,SFR_fis_num
000F 7076              JNZ     ?C0244
0011         ?C0243:
                                           ; SOURCE LINE # 749
                                           ; SOURCE LINE # 750
0011 90FF7E            MOV     DPTR,#sata+07EH
0014 7430              MOV     A,#030H
0016 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 751
0017 75FC00            MOV     SFR_dma_max_num+01H,#00H
001A 75FB01            MOV     SFR_dma_max_num,#01H
                                           ; SOURCE LINE # 752
001D         ?C0247:
                                           ; SOURCE LINE # 754
                                           ; SOURCE LINE # 758
                                           ; SOURCE LINE # 759
001D 7800        R     MOV     R0,#LOW pio_interrput
001F E6                MOV     A,@R0
0020 FB                MOV     R3,A
0021 850000      R     MOV     ?_tx_fis_5f?BYTE+03H,g_sec_cnt+01H
0024 850000      R     MOV     ?_tx_fis_5f?BYTE+04H,g_sec_cnt
0027 7500D0      R     MOV     ?_tx_fis_5f?BYTE+05H,#0D0H
002A E4                CLR     A
002B FD                MOV     R5,A
002C 7F58              MOV     R7,#058H
002E 120000      R     LCALL   _tx_fis_5f
                                           ; SOURCE LINE # 760
0031 7640              MOV     @R0,#040H
                                           ; SOURCE LINE # 761
                                           ; SOURCE LINE # 767
                                           ; SOURCE LINE # 768
0033 75F888            MOV     SFR_dma_cntl,#088H
                                           ; SOURCE LINE # 769
0036         ?C0248:
                                           ; SOURCE LINE # 775
0036 20E808            JB      sata_burst_done,?C0249
                                           ; SOURCE LINE # 776
                                           ; SOURCE LINE # 777
0039 7800        R     MOV     R0,#LOW g_current_fis_num
C51 COMPILER V9.50a   SHARK                                                                07/26/2013 11:07:39 PAGE 56  

003B E6                MOV     A,@R0
003C 659F              XRL     A,SFR_fis_num
003E 60F6              JZ      ?C0248
0040 22                RET     
0041         ?C0249:
                                           ; SOURCE LINE # 779
0041 20EA3A            JB      sata_burst_abort,pio_handler_err
0044         ?C0251:
                                           ; SOURCE LINE # 785
0044         ?C0252:
                                           ; SOURCE LINE # 786
0044 20F808            JB      dma_done,?C0253
                                           ; SOURCE LINE # 787
                                           ; SOURCE LINE # 788
0047 7800        R     MOV     R0,#LOW g_current_fis_num
0049 E6                MOV     A,@R0
004A 659F              XRL     A,SFR_fis_num
004C 60F6              JZ      ?C0252
004E 22                RET     
004F         ?C0253:
                                           ; SOURCE LINE # 790
                                           ; SOURCE LINE # 792
004F 75F808            MOV     SFR_dma_cntl,#08H
                                           ; SOURCE LINE # 793
0052 E500        R     MOV     A,g_sec_cnt+01H
0054 1500        R     DEC     g_sec_cnt+01H
0056 7002              JNZ     ?C0781
0058 1500        R     DEC     g_sec_cnt
005A         ?C0781:
                                           ; SOURCE LINE # 794
005A 75BE08            MOV     SFR_lba_comp,#08H
                                           ; SOURCE LINE # 796
005D D3                SETB    C
005E E500        R     MOV     A,g_sec_cnt+01H
0060 9400              SUBB    A,#00H
0062 E500        R     MOV     A,g_sec_cnt
0064 9400              SUBB    A,#00H
0066 50B5              JNC     ?C0247
                                           ; SOURCE LINE # 797
0068 90FF14            MOV     DPTR,#sata+014H
006B E500        R     MOV     A,g_sec_cnt+01H
006D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 798
006E A3                INC     DPTR
006F E500        R     MOV     A,g_sec_cnt
0071 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 801
                                           ; SOURCE LINE # 803
0072 120000      R     LCALL   smart_write_cnt
                                           ; SOURCE LINE # 804
                                           ; SOURCE LINE # 806
0075 7BFF              MOV     R3,#0FFH
0077 E4                CLR     A
0078 FD                MOV     R5,A
0079 7F50              MOV     R7,#050H
007B 020000      R     LJMP    _tx_fis_34
                                           ; SOURCE LINE # 809
007E         pio_handler_err:
                                           ; SOURCE LINE # 810
                                           ; SOURCE LINE # 811
007E 120000      R     LCALL   L?0909
                                           ; SOURCE LINE # 813
C51 COMPILER V9.50a   SHARK                                                                07/26/2013 11:07:39 PAGE 57  

0081 120000      R     LCALL   L?0902
                                           ; SOURCE LINE # 814
0084 120000      R     LCALL   reset_engine
                                           ; SOURCE LINE # 817
0087         ?C0244:
0087 22                RET     
             ; FUNCTION pio_write_handler (END)

             ; FUNCTION identify_device (BEGIN)
                                           ; SOURCE LINE # 826
                                           ; SOURCE LINE # 827
                                           ; SOURCE LINE # 828
;---- Variable 'i' assigned to Register 'R6/R7' ----
0000 E4                CLR     A
0001 FF                MOV     R7,A
0002 FE                MOV     R6,A
                                           ; SOURCE LINE # 836
0003 F5F2              MOV     SFR_ext_sram_addr+01H,A
0005 F5F1              MOV     SFR_ext_sram_addr,A
                                           ; SOURCE LINE # 837
0007 75F410            MOV     SFR_ext_sram_cntl,#010H
                                           ; SOURCE LINE # 838
000A 7800        R     MOV     R0,#LOW g_tmp_addr
000C 767A              MOV     @R0,#07AH
000E 08                INC     R0
000F F6                MOV     @R0,A
                                           ; SOURCE LINE # 839
0010         ?C0255:
                                           ; SOURCE LINE # 840
                                           ; SOURCE LINE # 841
0010 7800        R     MOV     R0,#LOW g_tmp_addr
0012 E6                MOV     A,@R0
0013 FC                MOV     R4,A
0014 08                INC     R0
0015 E6                MOV     A,@R0
0016 F582              MOV     DPL,A
0018 8C83              MOV     DPH,R4
001A E4                CLR     A
001B 93                MOVC    A,@A+DPTR
001C F5F3              MOV     SFR_ext_sram_data,A
                                           ; SOURCE LINE # 842
001E 06                INC     @R0
001F E6                MOV     A,@R0
0020 18                DEC     R0
0021 7001              JNZ     ?C0782
0023 06                INC     @R0
0024         ?C0782:
                                           ; SOURCE LINE # 843
0024 0F                INC     R7
0025 BF0001            CJNE    R7,#00H,?C0783
0028 0E                INC     R6
0029         ?C0783:
0029 E4                CLR     A
002A B507E3            CJNE    A,AR7,?C0255
002D EE                MOV     A,R6
002E B402DF            CJNE    A,#02H,?C0255
0031         ?C0256:
                                           ; SOURCE LINE # 846
0031 E500        R     MOV     A,security_mode
0033 6420              XRL     A,#020H
0035 701E              JNZ     ?C0258
                                           ; SOURCE LINE # 847
C51 COMPILER V9.50a   SHARK                                                                07/26/2013 11:07:39 PAGE 58  

                                           ; SOURCE LINE # 848
0037 F5F2              MOV     SFR_ext_sram_addr+01H,A
0039 75F178            MOV     SFR_ext_sram_addr,#078H
                                           ; SOURCE LINE # 849
003C F5F3              MOV     SFR_ext_sram_data,A
                                           ; SOURCE LINE # 850
003E F5F3              MOV     SFR_ext_sram_data,A
                                           ; SOURCE LINE # 851
0040 F5F3              MOV     SFR_ext_sram_data,A
                                           ; SOURCE LINE # 852
0042 75F306            MOV     SFR_ext_sram_data,#06H
                                           ; SOURCE LINE # 854
0045 F5F2              MOV     SFR_ext_sram_addr+01H,A
0047 75F1C8            MOV     SFR_ext_sram_addr,#0C8H
                                           ; SOURCE LINE # 855
004A F5F3              MOV     SFR_ext_sram_data,A
                                           ; SOURCE LINE # 856
004C F5F3              MOV     SFR_ext_sram_data,A
                                           ; SOURCE LINE # 857
004E F5F3              MOV     SFR_ext_sram_data,A
                                           ; SOURCE LINE # 858
0050 75F306            MOV     SFR_ext_sram_data,#06H
                                           ; SOURCE LINE # 860
                                           ; SOURCE LINE # 861
                                           ; SOURCE LINE # 862
                                           ; SOURCE LINE # 863
                                           ; SOURCE LINE # 864
                                           ; SOURCE LINE # 865
0053 8024              SJMP    ?C0822
0055         ?C0258:
                                           ; SOURCE LINE # 866
0055 E500        R     MOV     A,security_mode
0057 6410              XRL     A,#010H
0059 703E              JNZ     ?C0259
                                           ; SOURCE LINE # 867
                                           ; SOURCE LINE # 868
005B F5F2              MOV     SFR_ext_sram_addr+01H,A
005D 75F178            MOV     SFR_ext_sram_addr,#078H
                                           ; SOURCE LINE # 869
0060 F5F3              MOV     SFR_ext_sram_data,A
                                           ; SOURCE LINE # 870
0062 F5F3              MOV     SFR_ext_sram_data,A
                                           ; SOURCE LINE # 871
0064 75F3EE            MOV     SFR_ext_sram_data,#0EEH
                                           ; SOURCE LINE # 872
0067 75F302            MOV     SFR_ext_sram_data,#02H
                                           ; SOURCE LINE # 874
006A F5F2              MOV     SFR_ext_sram_addr+01H,A
006C 75F1C8            MOV     SFR_ext_sram_addr,#0C8H
                                           ; SOURCE LINE # 875
006F F5F3              MOV     SFR_ext_sram_data,A
                                           ; SOURCE LINE # 876
0071 F5F3              MOV     SFR_ext_sram_data,A
                                           ; SOURCE LINE # 877
0073 75F3EE            MOV     SFR_ext_sram_data,#0EEH
                                           ; SOURCE LINE # 878
0076 75F302            MOV     SFR_ext_sram_data,#02H
                                           ; SOURCE LINE # 880
0079         ?C0822:
0079 7800        R     MOV     R0,#LOW g_tmp_addr
007B 767A              MOV     @R0,#07AH
007D 08                INC     R0
C51 COMPILER V9.50a   SHARK                                                                07/26/2013 11:07:39 PAGE 59  

007E 76AD              MOV     @R0,#0ADH
                                           ; SOURCE LINE # 881
0080 18                DEC     R0
0081 E6                MOV     A,@R0
0082 FE                MOV     R6,A
0083 08                INC     R0
0084 E6                MOV     A,@R0
0085 F582              MOV     DPL,A
0087 8E83              MOV     DPH,R6
0089 E4                CLR     A
008A 93                MOVC    A,@A+DPTR
008B F500        R     MOV     tmp1,A
                                           ; SOURCE LINE # 882
008D 5300FB      R     ANL     tmp1,#0FBH
                                           ; SOURCE LINE # 883
0090 75F200            MOV     SFR_ext_sram_addr+01H,#00H
0093 75F1AD            MOV     SFR_ext_sram_addr,#0ADH
                                           ; SOURCE LINE # 884
0096 8500F3      R     MOV     SFR_ext_sram_data,tmp1
                                           ; SOURCE LINE # 885
0099         ?C0259:
                                           ; SOURCE LINE # 890
0099 7800        R     MOV     R0,#LOW g_tmp_addr
009B 767A              MOV     @R0,#07AH
009D 08                INC     R0
009E 7602              MOV     @R0,#02H
                                           ; SOURCE LINE # 891
00A0 18                DEC     R0
00A1 E6                MOV     A,@R0
00A2 FE                MOV     R6,A
00A3 08                INC     R0
00A4 E6                MOV     A,@R0
00A5 F582              MOV     DPL,A
00A7 8E83              MOV     DPH,R6
00A9 E4                CLR     A
00AA 93                MOVC    A,@A+DPTR
00AB F500        R     MOV     tmp2,A
                                           ; SOURCE LINE # 892
00AD 18                DEC     R0
00AE 767A              MOV     @R0,#07AH
00B0 08                INC     R0
00B1 7603              MOV     @R0,#03H
                                           ; SOURCE LINE # 893
00B3 18                DEC     R0
00B4 E6                MOV     A,@R0
00B5 FE                MOV     R6,A
00B6 08                INC     R0
00B7 E6                MOV     A,@R0
00B8 F582              MOV     DPL,A
00BA 8E83              MOV     DPH,R6
00BC E4                CLR     A
00BD 93                MOVC    A,@A+DPTR
00BE F500        R     MOV     tmp2+01H,A
                                           ; SOURCE LINE # 894
00C0 7BFF              MOV     R3,#0FFH
00C2 7A00        R     MOV     R2,#HIGH ?SC_125
00C4 7900        R     MOV     R1,#LOW ?SC_125
00C6 850000      R     MOV     ?_printu?BYTE+03H,tmp2
00C9 850000      R     MOV     ?_printu?BYTE+04H,tmp2+01H
00CC 120000      R     LCALL   _printu
                                           ; SOURCE LINE # 896
00CF 7800        R     MOV     R0,#LOW g_tmp_addr
C51 COMPILER V9.50a   SHARK                                                                07/26/2013 11:07:39 PAGE 60  

00D1 767A              MOV     @R0,#07AH
00D3 08                INC     R0
00D4 7606              MOV     @R0,#06H
                                           ; SOURCE LINE # 897
00D6 18                DEC     R0
00D7 E6                MOV     A,@R0
00D8 FE                MOV     R6,A
00D9 08                INC     R0
00DA E6                MOV     A,@R0
00DB F582              MOV     DPL,A
00DD 8E83              MOV     DPH,R6
00DF E4                CLR     A
00E0 93                MOVC    A,@A+DPTR
00E1 F500        R     MOV     tmp2,A
                                           ; SOURCE LINE # 898
00E3 18                DEC     R0
00E4 767A              MOV     @R0,#07AH
00E6 08                INC     R0
00E7 7607              MOV     @R0,#07H
                                           ; SOURCE LINE # 899
00E9 18                DEC     R0
00EA E6                MOV     A,@R0
00EB FE                MOV     R6,A
00EC 08                INC     R0
00ED E6                MOV     A,@R0
00EE F582              MOV     DPL,A
00F0 8E83              MOV     DPH,R6
00F2 E4                CLR     A
00F3 93                MOVC    A,@A+DPTR
00F4 F500        R     MOV     tmp2+01H,A
                                           ; SOURCE LINE # 900
00F6 7BFF              MOV     R3,#0FFH
00F8 7A00        R     MOV     R2,#HIGH ?SC_141
00FA 7900        R     MOV     R1,#LOW ?SC_141
00FC 850000      R     MOV     ?_printu?BYTE+03H,tmp2
00FF 850000      R     MOV     ?_printu?BYTE+04H,tmp2+01H
0102 120000      R     LCALL   _printu
                                           ; SOURCE LINE # 902
0105 7800        R     MOV     R0,#LOW g_tmp_addr
0107 767A              MOV     @R0,#07AH
0109 08                INC     R0
010A 760C              MOV     @R0,#0CH
                                           ; SOURCE LINE # 903
010C 18                DEC     R0
010D E6                MOV     A,@R0
010E FE                MOV     R6,A
010F 08                INC     R0
0110 E6                MOV     A,@R0
0111 F582              MOV     DPL,A
0113 8E83              MOV     DPH,R6
0115 E4                CLR     A
0116 93                MOVC    A,@A+DPTR
0117 F500        R     MOV     tmp2,A
                                           ; SOURCE LINE # 904
0119 18                DEC     R0
011A 767A              MOV     @R0,#07AH
011C 08                INC     R0
011D 760D              MOV     @R0,#0DH
                                           ; SOURCE LINE # 905
011F 18                DEC     R0
0120 E6                MOV     A,@R0
0121 FE                MOV     R6,A
C51 COMPILER V9.50a   SHARK                                                                07/26/2013 11:07:39 PAGE 61  

0122 08                INC     R0
0123 E6                MOV     A,@R0
0124 F582              MOV     DPL,A
0126 8E83              MOV     DPH,R6
0128 E4                CLR     A
0129 93                MOVC    A,@A+DPTR
012A F500        R     MOV     tmp2+01H,A
                                           ; SOURCE LINE # 906
012C 7BFF              MOV     R3,#0FFH
012E 7A00        R     MOV     R2,#HIGH ?SC_153
0130 7900        R     MOV     R1,#LOW ?SC_153
0132 850000      R     MOV     ?_printu?BYTE+03H,tmp2
0135 850000      R     MOV     ?_printu?BYTE+04H,tmp2+01H
0138 120000      R     LCALL   _printu
                                           ; SOURCE LINE # 910
013B 75F201            MOV     SFR_ext_sram_addr+01H,#01H
013E 75F104            MOV     SFR_ext_sram_addr,#04H
                                           ; SOURCE LINE # 911
0141 75F353            MOV     SFR_ext_sram_data,#053H
                                           ; SOURCE LINE # 912
0144 75F341            MOV     SFR_ext_sram_data,#041H
                                           ; SOURCE LINE # 913
0147 75F347            MOV     SFR_ext_sram_data,#047H
                                           ; SOURCE LINE # 914
014A 75F345            MOV     SFR_ext_sram_data,#045H
                                           ; SOURCE LINE # 915
                                           ; SOURCE LINE # 920
014D 120000      R     LCALL   L?0914
;---- Variable 'tmp' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 921
0150 75F201            MOV     SFR_ext_sram_addr+01H,#01H
0153 75F1FF            MOV     SFR_ext_sram_addr,#0FFH
                                           ; SOURCE LINE # 922
0156 8FF3              MOV     SFR_ext_sram_data,R7
                                           ; SOURCE LINE # 925
0158 750001      R     MOV     ?_tx_fis_5f?BYTE+03H,#01H
015B E4                CLR     A
015C F500        R     MOV     ?_tx_fis_5f?BYTE+04H,A
015E 750050      R     MOV     ?_tx_fis_5f?BYTE+05H,#050H
0161 7BE0              MOV     R3,#0E0H
0163 FD                MOV     R5,A
0164 7F58              MOV     R7,#058H
0166 120000      R     LCALL   _tx_fis_5f
                                           ; SOURCE LINE # 927
0169 0D                INC     R5
016A 7FC0              MOV     R7,#0C0H
016C 120000      R     LCALL   _sata_burst
                                           ; SOURCE LINE # 928
016F 30EA09            JNB     sata_burst_abort,?C0262
                                           ; SOURCE LINE # 929
                                           ; SOURCE LINE # 930
                                           ; SOURCE LINE # 931
0172 120000      R     LCALL   L?0910
                                           ; SOURCE LINE # 933
0175 120000      R     LCALL   L?0902
                                           ; SOURCE LINE # 934
0178 120000      R     LCALL   reset_engine
                                           ; SOURCE LINE # 937
                                           ; SOURCE LINE # 938
017B         ?C0262:
017B 22                RET     
             ; FUNCTION identify_device (END)
C51 COMPILER V9.50a   SHARK                                                                07/26/2013 11:07:39 PAGE 62  


             ; FUNCTION set_feature (BEGIN)
                                           ; SOURCE LINE # 940
                                           ; SOURCE LINE # 941
                                           ; SOURCE LINE # 943
0000 90FF14            MOV     DPTR,#sata+014H
0003 E0                MOVX    A,@DPTR
0004 FF                MOV     R7,A
;---- Variable 'tmp' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 944
0005 90FF10            MOV     DPTR,#sata+010H
0008 E0                MOVX    A,@DPTR
0009 120000      E     LCALL   ?C?CCASE
000C 0000        R     DW      ?C0264
000E 02                DB      02H
000F 0000        R     DW      ?C0266
0011 03                DB      03H
0012 0000        R     DW      ?C0274
0014 05                DB      05H
0015 0000        R     DW      ?C0276
0017 06                DB      06H
0018 0000        R     DW      ?C0278
001A 0B                DB      0BH
001B 0000        R     DW      ?C0282
001D 42                DB      042H
001E 0000        R     DW      ?C0280
0020 55                DB      055H
0021 0000        R     DW      ?C0263
0023 66                DB      066H
0024 0000        R     DW      ?C0265
0026 82                DB      082H
0027 0000        R     DW      ?C0275
0029 85                DB      085H
002A 0000        R     DW      ?C0277
002C 86                DB      086H
002D 0000        R     DW      ?C0279
002F 8B                DB      08BH
0030 0000        R     DW      ?C0263
0032 90                DB      090H
0033 0000        R     DW      ?C0281
0035 AA                DB      0AAH
0036 0000        R     DW      ?C0283
0038 C2                DB      0C2H
0039 0000        R     DW      ?C0263
003B CC                DB      0CCH
003C 0000              DW      00H
003E 0000        R     DW      ?C0287
                                           ; SOURCE LINE # 945
                                           ; SOURCE LINE # 946
0040         ?C0264:
                                           ; SOURCE LINE # 947
                                           ; SOURCE LINE # 948
0040 D200        R     SETB    g_enable_write_cache
                                           ; SOURCE LINE # 949
0042 907AAA            MOV     DPTR,#07AAAH
                                           ; SOURCE LINE # 950
                                           ; SOURCE LINE # 951
                                           ; SOURCE LINE # 952
                                           ; SOURCE LINE # 953
                                           ; SOURCE LINE # 954
0045 807E              SJMP    ?C0823
                                           ; SOURCE LINE # 955
C51 COMPILER V9.50a   SHARK                                                                07/26/2013 11:07:39 PAGE 63  

                                           ; SOURCE LINE # 957
0047         ?C0265:
                                           ; SOURCE LINE # 958
                                           ; SOURCE LINE # 959
0047 C200        R     CLR     g_enable_write_cache
                                           ; SOURCE LINE # 960
0049 907AAA            MOV     DPTR,#07AAAH
                                           ; SOURCE LINE # 961
                                           ; SOURCE LINE # 962
                                           ; SOURCE LINE # 963
                                           ; SOURCE LINE # 964
                                           ; SOURCE LINE # 965
004C 020000      R     LJMP    ?C0824
                                           ; SOURCE LINE # 966
                                           ; SOURCE LINE # 968
004F         ?C0266:
                                           ; SOURCE LINE # 969
                                           ; SOURCE LINE # 970
004F EF                MOV     A,R7
0050 30E61C            JNB     ACC.6,?C0267
                                           ; SOURCE LINE # 971
                                           ; SOURCE LINE # 972
0053 530707            ANL     AR7,#07H
                                           ; SOURCE LINE # 973
0056 7401              MOV     A,#01H
0058 A807              MOV     R0,AR7
005A 08                INC     R0
005B 8002              SJMP    ?C0786
005D         ?C0785:
005D C3                CLR     C
005E 33                RLC     A
005F         ?C0786:
005F D8FC              DJNZ    R0,?C0785
0061 FF                MOV     R7,A
                                           ; SOURCE LINE # 974
0062 438710            ORL     TS8052_PCON,#010H
                                           ; SOURCE LINE # 975
0065 907AB1            MOV     DPTR,#07AB1H
0068 EF                MOV     A,R7
0069 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 976
006A 907A7F            MOV     DPTR,#07A7FH
                                           ; SOURCE LINE # 977
                                           ; SOURCE LINE # 978
006D 801E              SJMP    ?C0825
006F         ?C0267:
                                           ; SOURCE LINE # 979
006F EF                MOV     A,R7
0070 30E51E            JNB     ACC.5,?C0269
                                           ; SOURCE LINE # 980
                                           ; SOURCE LINE # 981
0073 530707            ANL     AR7,#07H
                                           ; SOURCE LINE # 982
0076 7401              MOV     A,#01H
0078 A807              MOV     R0,AR7
007A 08                INC     R0
007B 8002              SJMP    ?C0788
007D         ?C0787:
007D C3                CLR     C
007E 33                RLC     A
007F         ?C0788:
007F D8FC              DJNZ    R0,?C0787
C51 COMPILER V9.50a   SHARK                                                                07/26/2013 11:07:39 PAGE 64  

0081 FF                MOV     R7,A
                                           ; SOURCE LINE # 983
0082 438710            ORL     TS8052_PCON,#010H
                                           ; SOURCE LINE # 984
0085 907A7F            MOV     DPTR,#07A7FH
0088 EF                MOV     A,R7
0089 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 985
008A 907AB1            MOV     DPTR,#07AB1H
008D         ?C0825:
008D E4                CLR     A
                                           ; SOURCE LINE # 986
                                           ; SOURCE LINE # 987
008E 020000      R     LJMP    ?C0835
0091         ?C0269:
                                           ; SOURCE LINE # 988
0091 EF                MOV     A,R7
0092 54F8              ANL     A,#0F8H
0094 7003              JNZ     $ + 5H
0096 020000      R     LJMP    ?C0263
                                           ; SOURCE LINE # 989
                                           ; SOURCE LINE # 996
0099         ?C0271:
                                           ; SOURCE LINE # 997
0099 EF                MOV     A,R7
009A 20E303            JB      ACC.3,$ + 6H
009D 020000      R     LJMP    ?C0263
                                           ; SOURCE LINE # 998
                                           ; SOURCE LINE # 1009
                                           ; SOURCE LINE # 1010
00A0 020000      R     LJMP    ?C0263
                                           ; SOURCE LINE # 1011
                                           ; SOURCE LINE # 1013
00A3         ?C0274:
                                           ; SOURCE LINE # 1014
                                           ; SOURCE LINE # 1015
00A3 907AAC            MOV     DPTR,#07AACH
00A6 E4                CLR     A
00A7 93                MOVC    A,@A+DPTR
00A8 FF                MOV     R7,A
                                           ; SOURCE LINE # 1016
00A9 430708            ORL     AR7,#08H
                                           ; SOURCE LINE # 1017
00AC 438710            ORL     TS8052_PCON,#010H
                                           ; SOURCE LINE # 1018
00AF EF                MOV     A,R7
00B0         ?C0826:
                                           ; SOURCE LINE # 1019
                                           ; SOURCE LINE # 1020
00B0 020000      R     LJMP    ?C0835
                                           ; SOURCE LINE # 1021
                                           ; SOURCE LINE # 1023
00B3         ?C0275:
                                           ; SOURCE LINE # 1024
                                           ; SOURCE LINE # 1025
00B3 907AAC            MOV     DPTR,#07AACH
00B6 E4                CLR     A
00B7 93                MOVC    A,@A+DPTR
00B8 FF                MOV     R7,A
                                           ; SOURCE LINE # 1026
00B9 5307F7            ANL     AR7,#0F7H
                                           ; SOURCE LINE # 1027
C51 COMPILER V9.50a   SHARK                                                                07/26/2013 11:07:39 PAGE 65  

00BC 438710            ORL     TS8052_PCON,#010H
                                           ; SOURCE LINE # 1028
00BF EF                MOV     A,R7
00C0         ?C0827:
                                           ; SOURCE LINE # 1029
                                           ; SOURCE LINE # 1030
00C0 8076              SJMP    ?C0835
                                           ; SOURCE LINE # 1031
                                           ; SOURCE LINE # 1033
00C2         ?C0276:
                                           ; SOURCE LINE # 1034
                                           ; SOURCE LINE # 1035
00C2 907AAC            MOV     DPTR,#07AACH
00C5         ?C0823:
00C5 E4                CLR     A
00C6 93                MOVC    A,@A+DPTR
00C7 FF                MOV     R7,A
                                           ; SOURCE LINE # 1036
00C8 430720            ORL     AR7,#020H
                                           ; SOURCE LINE # 1037
00CB 438710            ORL     TS8052_PCON,#010H
                                           ; SOURCE LINE # 1038
00CE EF                MOV     A,R7
00CF         ?C0828:
                                           ; SOURCE LINE # 1039
                                           ; SOURCE LINE # 1040
00CF 8067              SJMP    ?C0835
                                           ; SOURCE LINE # 1041
                                           ; SOURCE LINE # 1043
00D1         ?C0277:
                                           ; SOURCE LINE # 1044
                                           ; SOURCE LINE # 1045
00D1 907AAC            MOV     DPTR,#07AACH
00D4         ?C0824:
00D4 E4                CLR     A
00D5 93                MOVC    A,@A+DPTR
00D6 FF                MOV     R7,A
                                           ; SOURCE LINE # 1046
00D7 5307DF            ANL     AR7,#0DFH
                                           ; SOURCE LINE # 1047
00DA 438710            ORL     TS8052_PCON,#010H
                                           ; SOURCE LINE # 1048
00DD EF                MOV     A,R7
00DE         ?C0829:
                                           ; SOURCE LINE # 1049
                                           ; SOURCE LINE # 1050
00DE 8058              SJMP    ?C0835
                                           ; SOURCE LINE # 1051
                                           ; SOURCE LINE # 1053
00E0         ?C0278:
                                           ; SOURCE LINE # 1054
                                           ; SOURCE LINE # 1055
00E0 907AF0            MOV     DPTR,#07AF0H
00E3 E4                CLR     A
00E4 93                MOVC    A,@A+DPTR
00E5 FF                MOV     R7,A
                                           ; SOURCE LINE # 1056
00E6 430702            ORL     AR7,#02H
                                           ; SOURCE LINE # 1057
00E9 438710            ORL     TS8052_PCON,#010H
                                           ; SOURCE LINE # 1058
00EC EF                MOV     A,R7
C51 COMPILER V9.50a   SHARK                                                                07/26/2013 11:07:39 PAGE 66  

00ED         ?C0830:
                                           ; SOURCE LINE # 1059
                                           ; SOURCE LINE # 1060
00ED 8049              SJMP    ?C0835
                                           ; SOURCE LINE # 1061
                                           ; SOURCE LINE # 1063
00EF         ?C0279:
                                           ; SOURCE LINE # 1064
                                           ; SOURCE LINE # 1065
00EF 907AF0            MOV     DPTR,#07AF0H
00F2 E4                CLR     A
00F3 93                MOVC    A,@A+DPTR
00F4 FF                MOV     R7,A
                                           ; SOURCE LINE # 1066
00F5 5307FD            ANL     AR7,#0FDH
                                           ; SOURCE LINE # 1067
00F8 438710            ORL     TS8052_PCON,#010H
                                           ; SOURCE LINE # 1068
00FB EF                MOV     A,R7
00FC         ?C0831:
                                           ; SOURCE LINE # 1069
                                           ; SOURCE LINE # 1070
00FC 803A              SJMP    ?C0835
                                           ; SOURCE LINE # 1071
                                           ; SOURCE LINE # 1073
00FE         ?C0280:
                                           ; SOURCE LINE # 1074
                                           ; SOURCE LINE # 1075
00FE 907AAA            MOV     DPTR,#07AAAH
0101 E4                CLR     A
0102 93                MOVC    A,@A+DPTR
0103 FF                MOV     R7,A
                                           ; SOURCE LINE # 1076
0104 430740            ORL     AR7,#040H
                                           ; SOURCE LINE # 1077
0107 438710            ORL     TS8052_PCON,#010H
                                           ; SOURCE LINE # 1078
010A EF                MOV     A,R7
010B         ?C0832:
                                           ; SOURCE LINE # 1079
                                           ; SOURCE LINE # 1080
010B 802B              SJMP    ?C0835
                                           ; SOURCE LINE # 1081
                                           ; SOURCE LINE # 1083
010D         ?C0281:
                                           ; SOURCE LINE # 1084
                                           ; SOURCE LINE # 1085
010D 907AAA            MOV     DPTR,#07AAAH
0110 E4                CLR     A
0111 93                MOVC    A,@A+DPTR
0112 FF                MOV     R7,A
                                           ; SOURCE LINE # 1086
0113 5307BF            ANL     AR7,#0BFH
                                           ; SOURCE LINE # 1087
0116 438710            ORL     TS8052_PCON,#010H
                                           ; SOURCE LINE # 1088
0119 EF                MOV     A,R7
011A         ?C0833:
                                           ; SOURCE LINE # 1089
                                           ; SOURCE LINE # 1090
011A 801C              SJMP    ?C0835
                                           ; SOURCE LINE # 1091
C51 COMPILER V9.50a   SHARK                                                                07/26/2013 11:07:39 PAGE 67  

                                           ; SOURCE LINE # 1093
011C         ?C0282:
                                           ; SOURCE LINE # 1094
                                           ; SOURCE LINE # 1095
011C 907AAD            MOV     DPTR,#07AADH
011F E4                CLR     A
0120 93                MOVC    A,@A+DPTR
0121 FF                MOV     R7,A
                                           ; SOURCE LINE # 1096
0122 430702            ORL     AR7,#02H
                                           ; SOURCE LINE # 1097
0125 438710            ORL     TS8052_PCON,#010H
                                           ; SOURCE LINE # 1098
0128 EF                MOV     A,R7
0129         ?C0834:
                                           ; SOURCE LINE # 1099
                                           ; SOURCE LINE # 1100
0129 800D              SJMP    ?C0835
                                           ; SOURCE LINE # 1101
                                           ; SOURCE LINE # 1103
012B         ?C0283:
                                           ; SOURCE LINE # 1104
                                           ; SOURCE LINE # 1105
012B 907AAD            MOV     DPTR,#07AADH
012E E4                CLR     A
012F 93                MOVC    A,@A+DPTR
0130 FF                MOV     R7,A
                                           ; SOURCE LINE # 1106
0131 5307FD            ANL     AR7,#0FDH
                                           ; SOURCE LINE # 1107
0134 438710            ORL     TS8052_PCON,#010H
                                           ; SOURCE LINE # 1108
0137 EF                MOV     A,R7
0138         ?C0835:
0138 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1109
0139 5387EF            ANL     TS8052_PCON,#0EFH
                                           ; SOURCE LINE # 1110
013C 8008              SJMP    ?C0263
                                           ; SOURCE LINE # 1111
                                           ; SOURCE LINE # 1113
                                           ; SOURCE LINE # 1114
                                           ; SOURCE LINE # 1115
                                           ; SOURCE LINE # 1116
                                           ; SOURCE LINE # 1118
                                           ; SOURCE LINE # 1119
                                           ; SOURCE LINE # 1120
                                           ; SOURCE LINE # 1121
                                           ; SOURCE LINE # 1123
                                           ; SOURCE LINE # 1124
                                           ; SOURCE LINE # 1125
                                           ; SOURCE LINE # 1126
                                           ; SOURCE LINE # 1127
013E         ?C0287:
                                           ; SOURCE LINE # 1128
                                           ; SOURCE LINE # 1129
013E 7BFF              MOV     R3,#0FFH
0140 7D04              MOV     R5,#04H
0142 7F51              MOV     R7,#051H
0144 8006              SJMP    ?C0836
                                           ; SOURCE LINE # 1131
                                           ; SOURCE LINE # 1132
C51 COMPILER V9.50a   SHARK                                                                07/26/2013 11:07:39 PAGE 68  

0146         ?C0263:
                                           ; SOURCE LINE # 1133
0146 7BFF              MOV     R3,#0FFH
0148 E4                CLR     A
0149 FD                MOV     R5,A
014A 7F50              MOV     R7,#050H
014C         ?C0836:
014C 120000      R     LCALL   _tx_fis_34
                                           ; SOURCE LINE # 1134
014F         ?C0288:
014F 22                RET     
             ; FUNCTION set_feature (END)

             ; FUNCTION init_dev_para (BEGIN)
                                           ; SOURCE LINE # 1136
                                           ; SOURCE LINE # 1137
                                           ; SOURCE LINE # 1139
0000 90FF87            MOV     DPTR,#sata+087H
0003 E0                MOVX    A,@DPTR
0004 540F              ANL     A,#0FH
0006 640F              XRL     A,#0FH
0008 7024              JNZ     init_dev_para_err
000A         ?C0289:
                                           ; SOURCE LINE # 1140
000A 90FF8C            MOV     DPTR,#sata+08CH
000D E0                MOVX    A,@DPTR
000E 643F              XRL     A,#03FH
0010 701C              JNZ     init_dev_para_err
0012         ?C0291:
                                           ; SOURCE LINE # 1141
0012 907A6A            MOV     DPTR,#07A6AH
0015 E4                CLR     A
0016 93                MOVC    A,@A+DPTR
0017 7800        R     MOV     R0,#LOW tmp8
0019 F6                MOV     @R0,A
                                           ; SOURCE LINE # 1143
001A E6                MOV     A,@R0
001B 4401              ORL     A,#01H
001D F6                MOV     @R0,A
                                           ; SOURCE LINE # 1144
001E 438710            ORL     TS8052_PCON,#010H
                                           ; SOURCE LINE # 1145
0021 E6                MOV     A,@R0
0022 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1146
0023 5387EF            ANL     TS8052_PCON,#0EFH
                                           ; SOURCE LINE # 1147
0026 7BFF              MOV     R3,#0FFH
0028 E4                CLR     A
0029 FD                MOV     R5,A
002A 7F50              MOV     R7,#050H
002C 801A              SJMP    ?C0837
                                           ; SOURCE LINE # 1149
002E         init_dev_para_err:
                                           ; SOURCE LINE # 1150
002E 907A6A            MOV     DPTR,#07A6AH
0031 E4                CLR     A
0032 93                MOVC    A,@A+DPTR
0033 7800        R     MOV     R0,#LOW tmp8
0035 F6                MOV     @R0,A
                                           ; SOURCE LINE # 1152
0036 E6                MOV     A,@R0
C51 COMPILER V9.50a   SHARK                                                                07/26/2013 11:07:39 PAGE 69  

0037 54FE              ANL     A,#0FEH
0039 F6                MOV     @R0,A
                                           ; SOURCE LINE # 1153
003A 438710            ORL     TS8052_PCON,#010H
                                           ; SOURCE LINE # 1154
003D E6                MOV     A,@R0
003E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1155
003F 5387EF            ANL     TS8052_PCON,#0EFH
                                           ; SOURCE LINE # 1156
0042 7BFF              MOV     R3,#0FFH
0044 7D04              MOV     R5,#04H
0046 7F51              MOV     R7,#051H
0048         ?C0837:
0048 120000      R     LCALL   _tx_fis_34
                                           ; SOURCE LINE # 1158
004B         ?C0292:
004B 22                RET     
             ; FUNCTION init_dev_para (END)

             ; FUNCTION intial_data_partition (BEGIN)
                                           ; SOURCE LINE # 1161
                                           ; SOURCE LINE # 1162
                                           ; SOURCE LINE # 1164
0000 7800        R     MOV     R0,#LOW g_tmp_addr
0002 767A              MOV     @R0,#07AH
0004 08                INC     R0
0005 76AD              MOV     @R0,#0ADH
                                           ; SOURCE LINE # 1165
0007 18                DEC     R0
0008 E6                MOV     A,@R0
0009 FE                MOV     R6,A
000A 08                INC     R0
000B E6                MOV     A,@R0
000C F582              MOV     DPL,A
000E 8E83              MOV     DPH,R6
0010 E4                CLR     A
0011 93                MOVC    A,@A+DPTR
0012 30E208            JNB     ACC.2,?C0293
0015 18                DEC     R0
0016 767A              MOV     @R0,#07AH
0018 08                INC     R0
0019 76C8              MOV     @R0,#0C8H
001B 8007              SJMP    ?C0294
001D         ?C0293:
                                           ; SOURCE LINE # 1166
001D 7800        R     MOV     R0,#LOW g_tmp_addr
001F 767A              MOV     @R0,#07AH
0021 08                INC     R0
0022 7678              MOV     @R0,#078H
0024         ?C0294:
                                           ; SOURCE LINE # 1167
0024 E4                CLR     A
0025 F500        R     MOV     ii,A
0027         ?C0295:
                                           ; SOURCE LINE # 1168
                                           ; SOURCE LINE # 1169
0027 7800        R     MOV     R0,#LOW g_tmp_addr
0029 E6                MOV     A,@R0
002A FE                MOV     R6,A
002B 08                INC     R0
002C E6                MOV     A,@R0
C51 COMPILER V9.50a   SHARK                                                                07/26/2013 11:07:39 PAGE 70  

002D F582              MOV     DPL,A
002F 8E83              MOV     DPH,R6
0031 E4                CLR     A
0032 93                MOVC    A,@A+DPTR
0033 FF                MOV     R7,A
0034 C3                CLR     C
0035 7403              MOV     A,#03H
0037 9500        R     SUBB    A,ii
0039 2400        R     ADD     A,#LOW sum
003B F8                MOV     R0,A
003C A607              MOV     @R0,AR7
                                           ; SOURCE LINE # 1170
003E 7800        R     MOV     R0,#LOW g_tmp_addr+01H
0040 06                INC     @R0
0041 E6                MOV     A,@R0
0042 18                DEC     R0
0043 7001              JNZ     ?C0789
0045 06                INC     @R0
0046         ?C0789:
                                           ; SOURCE LINE # 1171
0046 0500        R     INC     ii
0048 E500        R     MOV     A,ii
004A B404DA            CJNE    A,#04H,?C0295
004D         ?C0296:
                                           ; SOURCE LINE # 1173
004D E4                CLR     A
004E 90FF78            MOV     DPTR,#sata+078H
0051 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1174
0052 A3                INC     DPTR
0053 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1175
0054 A3                INC     DPTR
0055 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1176
0056 A3                INC     DPTR
0057 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1177
0058 A3                INC     DPTR
0059 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1178
005A A3                INC     DPTR
005B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1180
005C FD                MOV     R5,A
005D FB                MOV     R3,A
005E FE                MOV     R6,A
005F 120000      R     LCALL   L?0911
                                           ; SOURCE LINE # 1182
0062 7800        R     MOV     R0,#LOW g_tmp_addr
0064 767A              MOV     @R0,#07AH
0066 08                INC     R0
0067 76AD              MOV     @R0,#0ADH
                                           ; SOURCE LINE # 1183
0069 18                DEC     R0
006A E6                MOV     A,@R0
006B FE                MOV     R6,A
006C 08                INC     R0
006D E6                MOV     A,@R0
006E F582              MOV     DPL,A
0070 8E83              MOV     DPH,R6
0072 E4                CLR     A
C51 COMPILER V9.50a   SHARK                                                                07/26/2013 11:07:39 PAGE 71  

0073 93                MOVC    A,@A+DPTR
0074 30E208            JNB     ACC.2,?C0298
0077 18                DEC     R0
0078 767A              MOV     @R0,#07AH
007A 08                INC     R0
007B 76C8              MOV     @R0,#0C8H
007D 8007              SJMP    ?C0299
007F         ?C0298:
                                           ; SOURCE LINE # 1185
007F 7800        R     MOV     R0,#LOW g_tmp_addr
0081 767A              MOV     @R0,#07AH
0083 08                INC     R0
0084 7678              MOV     @R0,#078H
0086         ?C0299:
                                           ; SOURCE LINE # 1186
0086 E4                CLR     A
0087 F500        R     MOV     ii,A
0089         ?C0300:
                                           ; SOURCE LINE # 1187
                                           ; SOURCE LINE # 1188
0089 7800        R     MOV     R0,#LOW g_tmp_addr
008B E6                MOV     A,@R0
008C FE                MOV     R6,A
008D 08                INC     R0
008E E6                MOV     A,@R0
008F F582              MOV     DPL,A
0091 8E83              MOV     DPH,R6
0093 E4                CLR     A
0094 93                MOVC    A,@A+DPTR
0095 FF                MOV     R7,A
0096 C3                CLR     C
0097 7403              MOV     A,#03H
0099 9500        R     SUBB    A,ii
009B 2400        R     ADD     A,#LOW sum
009D F8                MOV     R0,A
009E A607              MOV     @R0,AR7
                                           ; SOURCE LINE # 1189
00A0 7800        R     MOV     R0,#LOW g_tmp_addr+01H
00A2 06                INC     @R0
00A3 E6                MOV     A,@R0
00A4 18                DEC     R0
00A5 7001              JNZ     ?C0790
00A7 06                INC     @R0
00A8         ?C0790:
                                           ; SOURCE LINE # 1190
00A8 0500        R     INC     ii
00AA E500        R     MOV     A,ii
00AC B404DA            CJNE    A,#04H,?C0300
00AF         ?C0301:
                                           ; SOURCE LINE # 1193
00AF E4                CLR     A
00B0 F5F2              MOV     SFR_ext_sram_addr+01H,A
00B2 F5F1              MOV     SFR_ext_sram_addr,A
                                           ; SOURCE LINE # 1194
00B4 75F410            MOV     SFR_ext_sram_cntl,#010H
00B7         ?C0303:
                                           ; SOURCE LINE # 1195
00B7 C3                CLR     C
00B8 E5F2              MOV     A,SFR_ext_sram_addr+01H
00BA 9480              SUBB    A,#080H
00BC 5005              JNC     ?C0304
00BE 75F377            MOV     SFR_ext_sram_data,#077H
C51 COMPILER V9.50a   SHARK                                                                07/26/2013 11:07:39 PAGE 72  

00C1 80F4              SJMP    ?C0303
00C3         ?C0304:
                                           ; SOURCE LINE # 1197
00C3 907FCA            MOV     DPTR,#07FCAH
00C6 E4                CLR     A
00C7 93                MOVC    A,@A+DPTR
00C8 7800        R     MOV     R0,#LOW trim_addr_offset+03H
00CA F6                MOV     @R0,A
                                           ; SOURCE LINE # 1198
00CB A3                INC     DPTR
00CC E4                CLR     A
00CD 93                MOVC    A,@A+DPTR
00CE 18                DEC     R0
00CF F6                MOV     @R0,A
                                           ; SOURCE LINE # 1199
00D0 E4                CLR     A
00D1 18                DEC     R0
00D2 F6                MOV     @R0,A
                                           ; SOURCE LINE # 1200
00D3 18                DEC     R0
00D4 F6                MOV     @R0,A
                                           ; SOURCE LINE # 1201
00D5 120000      E     LCALL   ?C?LLDIDATA
00D8 7803              MOV     R0,#03H
00DA 120000      E     LCALL   ?C?LSHL
00DD 7800        R     MOV     R0,#LOW trim_addr_offset
00DF 120000      E     LCALL   ?C?LSTIDATA
                                           ; SOURCE LINE # 1202
00E2 7800        R     MOV     R0,#LOW sum
00E4 120000      E     LCALL   ?C?LLDIDATA
00E7 7800        R     MOV     R0,#LOW trim_addr_offset
00E9 120000      E     LCALL   ?C?LLDIDATA0
00EC C3                CLR     C
00ED EF                MOV     A,R7
00EE 9B                SUBB    A,R3
00EF FF                MOV     R7,A
00F0 EE                MOV     A,R6
00F1 9A                SUBB    A,R2
00F2 FE                MOV     R6,A
00F3 ED                MOV     A,R5
00F4 99                SUBB    A,R1
00F5 FD                MOV     R5,A
00F6 EC                MOV     A,R4
00F7 98                SUBB    A,R0
00F8 FC                MOV     R4,A
00F9 7800        R     MOV     R0,#LOW sum
00FB 120000      E     LCALL   ?C?LSTIDATA
                                           ; SOURCE LINE # 1203
00FE 7800        R     MOV     R0,#LOW trim_addr_offset+02H
0100 E6                MOV     A,@R0
0101 F500        R     MOV     g_sec_cnt,A
0103 08                INC     R0
0104 E6                MOV     A,@R0
0105 F500        R     MOV     g_sec_cnt+01H,A
                                           ; SOURCE LINE # 1204
0107 7BFF              MOV     R3,#0FFH
0109 7A00        R     MOV     R2,#HIGH ?SC_167
010B 7900        R     MOV     R1,#LOW ?SC_167
010D 850000      R     MOV     ?_printu?BYTE+03H,g_sec_cnt
0110 850000      R     MOV     ?_printu?BYTE+04H,g_sec_cnt+01H
0113 120000      R     LCALL   _printu
                                           ; SOURCE LINE # 1205
C51 COMPILER V9.50a   SHARK                                                                07/26/2013 11:07:39 PAGE 73  

0116 7BFF              MOV     R3,#0FFH
0118 7A00        R     MOV     R2,#HIGH ?SC_177
011A 7900        R     MOV     R1,#LOW ?SC_177
011C 7800        R     MOV     R0,#LOW sum+03H
011E E6                MOV     A,@R0
011F F500        R     MOV     ?_printu?BYTE+03H,A
0121 18                DEC     R0
0122 E6                MOV     A,@R0
0123 F500        R     MOV     ?_printu?BYTE+04H,A
0125 18                DEC     R0
0126 E6                MOV     A,@R0
0127 F500        R     MOV     ?_printu?BYTE+05H,A
0129 18                DEC     R0
012A E6                MOV     A,@R0
012B F500        R     MOV     ?_printu?BYTE+06H,A
012D 120000      R     LCALL   _printu
                                           ; SOURCE LINE # 1206
0130 120000      R     LCALL   reset_engine
                                           ; SOURCE LINE # 1207
0133 7800        R     MOV     R0,#LOW sum+03H
0135 E6                MOV     A,@R0
0136 90FF78            MOV     DPTR,#sata+078H
0139 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1208
013A 18                DEC     R0
013B E6                MOV     A,@R0
013C A3                INC     DPTR
013D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1209
013E 18                DEC     R0
013F E6                MOV     A,@R0
0140 A3                INC     DPTR
0141 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1210
0142 18                DEC     R0
0143 E6                MOV     A,@R0
0144 A3                INC     DPTR
0145 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1211
0146 E4                CLR     A
0147 A3                INC     DPTR
0148 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1212
0149 A3                INC     DPTR
014A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1213
014B A3                INC     DPTR
014C 7430              MOV     A,#030H
014E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1214
014F E4                CLR     A
0150 F5FA              MOV     SFR_dma_base+01H,A
0152 F5F9              MOV     SFR_dma_base,A
                                           ; SOURCE LINE # 1216
0154 E500        R     MOV     A,g_sec_cnt+01H
0156 7004              JNZ     ?C0306
0158 E500        R     MOV     A,g_sec_cnt
015A 6008              JZ      ?C0305
015C         ?C0306:
                                           ; SOURCE LINE # 1217
015C 8500FC      R     MOV     SFR_dma_max_num+01H,g_sec_cnt
015F 8500FB      R     MOV     SFR_dma_max_num,g_sec_cnt+01H
C51 COMPILER V9.50a   SHARK                                                                07/26/2013 11:07:39 PAGE 74  

0162 8014              SJMP    ?C0307
0164         ?C0305:
                                           ; SOURCE LINE # 1219
                                           ; SOURCE LINE # 1220
0164 E4                CLR     A
0165 F5FC              MOV     SFR_dma_max_num+01H,A
0167 F5FB              MOV     SFR_dma_max_num,A
                                           ; SOURCE LINE # 1221
0169 90FF1E            MOV     DPTR,#sata+01EH
016C E0                MOVX    A,@DPTR
016D 4420              ORL     A,#020H
016F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1222
0170 7800        R     MOV     R0,#LOW trim_addr_offset+01H
0172 E6                MOV     A,@R0
0173 16                DEC     @R0
0174 18                DEC     R0
0175 7001              JNZ     ?C0791
0177 16                DEC     @R0
0178         ?C0791:
                                           ; SOURCE LINE # 1223
0178         ?C0307:
                                           ; SOURCE LINE # 1224
0178 75F880            MOV     SFR_dma_cntl,#080H
017B         ?C0308:
                                           ; SOURCE LINE # 1225
017B 30F8FD            JNB     dma_done,?C0308
017E         ?C0309:
017E         ?C0310:
                                           ; SOURCE LINE # 1227
017E D3                SETB    C
017F 7800        R     MOV     R0,#LOW trim_addr_offset+01H
0181 E6                MOV     A,@R0
0182 9400              SUBB    A,#00H
0184 18                DEC     R0
0185 E6                MOV     A,@R0
0186 9400              SUBB    A,#00H
0188 4013              JC      ?C0311
                                           ; SOURCE LINE # 1228
                                           ; SOURCE LINE # 1229
018A E4                CLR     A
018B F5FC              MOV     SFR_dma_max_num+01H,A
018D F5FB              MOV     SFR_dma_max_num,A
                                           ; SOURCE LINE # 1230
018F 90FF1E            MOV     DPTR,#sata+01EH
0192 E0                MOVX    A,@DPTR
0193 4420              ORL     A,#020H
0195 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1231
0196 D2FD              SETB    dma_cont
0198         ?C0312:
                                           ; SOURCE LINE # 1232
0198 20F8E3            JB      dma_done,?C0310
019B 80FB              SJMP    ?C0312
019D         ?C0311:
                                           ; SOURCE LINE # 1236
019D 75F818            MOV     SFR_dma_cntl,#018H
                                           ; SOURCE LINE # 1238
01A0 E4                CLR     A
01A1 F5F4              MOV     SFR_ext_sram_cntl,A
                                           ; SOURCE LINE # 1239
01A3 120000      R     LCALL   flush_delay
C51 COMPILER V9.50a   SHARK                                                                07/26/2013 11:07:39 PAGE 75  

                                           ; SOURCE LINE # 1241
01A6         ?C0314:
01A6 22                RET     
             ; FUNCTION intial_data_partition (END)

             ; FUNCTION _update_chp_status (BEGIN)
                                           ; SOURCE LINE # 5
;---- Variable 'chp_sel' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 6
                                           ; SOURCE LINE # 7
0000 BF010C            CJNE    R7,#01H,?C0315
                                           ; SOURCE LINE # 8
                                           ; SOURCE LINE # 9
0003 90FF70            MOV     DPTR,#sata+070H
0006 E0                MOVX    A,@DPTR
0007 F500        R     MOV     chp_status_low,A
                                           ; SOURCE LINE # 10
0009 90FF5C            MOV     DPTR,#sata+05CH
000C E0                MOVX    A,@DPTR
000D F500        R     MOV     chp_status_high,A
                                           ; SOURCE LINE # 11
000F         ?C0315:
                                           ; SOURCE LINE # 12
000F BF020C            CJNE    R7,#02H,?C0316
                                           ; SOURCE LINE # 13
                                           ; SOURCE LINE # 14
0012 90FF71            MOV     DPTR,#sata+071H
0015 E0                MOVX    A,@DPTR
0016 F500        R     MOV     chp_status_low,A
                                           ; SOURCE LINE # 15
0018 90FF5D            MOV     DPTR,#sata+05DH
001B E0                MOVX    A,@DPTR
001C F500        R     MOV     chp_status_high,A
                                           ; SOURCE LINE # 16
001E         ?C0316:
                                           ; SOURCE LINE # 17
001E BF040C            CJNE    R7,#04H,?C0317
                                           ; SOURCE LINE # 18
                                           ; SOURCE LINE # 19
0021 90FF72            MOV     DPTR,#sata+072H
0024 E0                MOVX    A,@DPTR
0025 F500        R     MOV     chp_status_low,A
                                           ; SOURCE LINE # 20
0027 90FF5E            MOV     DPTR,#sata+05EH
002A E0                MOVX    A,@DPTR
002B F500        R     MOV     chp_status_high,A
                                           ; SOURCE LINE # 21
002D         ?C0317:
                                           ; SOURCE LINE # 22
002D BF080C            CJNE    R7,#08H,?C0318
                                           ; SOURCE LINE # 23
                                           ; SOURCE LINE # 24
0030 90FF73            MOV     DPTR,#sata+073H
0033 E0                MOVX    A,@DPTR
0034 F500        R     MOV     chp_status_low,A
                                           ; SOURCE LINE # 25
0036 90FF5F            MOV     DPTR,#sata+05FH
0039 E0                MOVX    A,@DPTR
003A F500        R     MOV     chp_status_high,A
                                           ; SOURCE LINE # 26
003C         ?C0318:
                                           ; SOURCE LINE # 27
C51 COMPILER V9.50a   SHARK                                                                07/26/2013 11:07:39 PAGE 76  

003C BF100C            CJNE    R7,#010H,?C0319
                                           ; SOURCE LINE # 28
                                           ; SOURCE LINE # 29
003F 90FF74            MOV     DPTR,#sata+074H
0042 E0                MOVX    A,@DPTR
0043 F500        R     MOV     chp_status_low,A
                                           ; SOURCE LINE # 30
0045 90FF76            MOV     DPTR,#sata+076H
0048 E0                MOVX    A,@DPTR
0049 F500        R     MOV     chp_status_high,A
                                           ; SOURCE LINE # 31
004B         ?C0319:
                                           ; SOURCE LINE # 32
004B 5300F0      R     ANL     chp_status_low,#0F0H
                                           ; SOURCE LINE # 33
004E 22                RET     
             ; FUNCTION _update_chp_status (END)

             ; FUNCTION chp_int_handler (BEGIN)
                                           ; SOURCE LINE # 36
                                           ; SOURCE LINE # 37
                                           ; SOURCE LINE # 41
0000 750001      R     MOV     tmp_sel,#01H
                                           ; SOURCE LINE # 42
0003 750001      R     MOV     first_print,#01H
                                           ; SOURCE LINE # 43
0006 E4                CLR     A
0007 F500        R     MOV     pre_chp_status_low,A
                                           ; SOURCE LINE # 44
0009 F500        R     MOV     tmp_chp_id,A
                                           ; SOURCE LINE # 45
000B 85D700      R     MOV     tmp_chp_en,SFR_CHP_en
                                           ; SOURCE LINE # 46
000E 90FF7F            MOV     DPTR,#sata+07FH
0011 E0                MOVX    A,@DPTR
0012 F500        R     MOV     tmp_chp_stripe,A
                                           ; SOURCE LINE # 47
0014 90FF57            MOV     DPTR,#sata+057H
0017 E0                MOVX    A,@DPTR
0018 F500        R     MOV     tmp_chp_stripe_h,A
                                           ; SOURCE LINE # 48
001A         int_loop:
                                           ; SOURCE LINE # 49
001A AF00        R     MOV     R7,tmp_sel
001C 120000      R     LCALL   _update_chp_status
                                           ; SOURCE LINE # 50
001F E500        R     MOV     A,chp_status_low
0021 6061              JZ      next_loop
0023         ?C0322:
                                           ; SOURCE LINE # 51
0023 850000      R     MOV     pre_chp_status_low,chp_status_low
                                           ; SOURCE LINE # 52
0026 E500        R     MOV     A,chp_status_low
0028 2410              ADD     A,#010H
002A 701D              JNZ     ?C0329
                                           ; SOURCE LINE # 53
                                           ; SOURCE LINE # 54
002C         ?C0325:
                                           ; SOURCE LINE # 55
                                           ; SOURCE LINE # 58
002C E500        R     MOV     A,first_print
002E B40103            CJNE    A,#01H,?C0326
C51 COMPILER V9.50a   SHARK                                                                07/26/2013 11:07:39 PAGE 77  

                                           ; SOURCE LINE # 59
                                           ; SOURCE LINE # 61
0031 E4                CLR     A
0032 F500        R     MOV     first_print,A
                                           ; SOURCE LINE # 62
0034         ?C0326:
                                           ; SOURCE LINE # 63
0034 E500        R     MOV     A,chp_status_high
0036 7BFF              MOV     R3,#0FFH
0038 7006              JNZ     ?C0327
003A 7A00        R     MOV     R2,#HIGH ?SC_194
003C 7900        R     MOV     R1,#LOW ?SC_194
003E 800F              SJMP    ?C0839
0040         ?C0327:
                                           ; SOURCE LINE # 64
0040 7A00        R     MOV     R2,#HIGH ?SC_196
0042 7900        R     MOV     R1,#LOW ?SC_196
0044 850000      R     MOV     ?_printu?BYTE+03H,chp_status_high
0047         ?C0838:
                                           ; SOURCE LINE # 67
0047 8006              SJMP    ?C0839
                                           ; SOURCE LINE # 68
                                           ; SOURCE LINE # 69
0049         ?C0329:
                                           ; SOURCE LINE # 70
                                           ; SOURCE LINE # 71
0049 7BFF              MOV     R3,#0FFH
004B 7A00        R     MOV     R2,#HIGH ?SC_199
004D 7900        R     MOV     R1,#LOW ?SC_199
004F         ?C0839:
004F 120000      R     LCALL   _printu
                                           ; SOURCE LINE # 72
                                           ; SOURCE LINE # 73
                                           ; SOURCE LINE # 74
0052         ?C0324:
                                           ; SOURCE LINE # 76
0052 8500D7      R     MOV     SFR_CHP_en,tmp_sel
                                           ; SOURCE LINE # 77
0055 90FF7E            MOV     DPTR,#sata+07EH
0058 74F1              MOV     A,#0F1H
005A F0                MOVX    @DPTR,A
005B         ?C0330:
                                           ; SOURCE LINE # 78
                                           ; SOURCE LINE # 79
                                           ; SOURCE LINE # 80
005B AF00        R     MOV     R7,tmp_sel
005D 120000      R     LCALL   _update_chp_status
                                           ; SOURCE LINE # 81
0060 E500        R     MOV     A,chp_status_low
0062 6005              JZ      ?C0331
0064         ?C0332:
                                           ; SOURCE LINE # 84
0064 120000      R     LCALL   check_power_loss
                                           ; SOURCE LINE # 86
0067 80F2              SJMP    ?C0330
0069         ?C0331:
                                           ; SOURCE LINE # 87
0069 90FF7E            MOV     DPTR,#sata+07EH
006C 74F0              MOV     A,#0F0H
006E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 91
006F B50012      R     CJNE    A,pre_chp_status_low,next_loop
C51 COMPILER V9.50a   SHARK                                                                07/26/2013 11:07:39 PAGE 78  

                                           ; SOURCE LINE # 92
                                           ; SOURCE LINE # 93
0072 E500        R     MOV     A,chp_status_high
0074 600E              JZ      next_loop
0076         ?C0334:
0076         ?C0335:
                                           ; SOURCE LINE # 94
                                           ; SOURCE LINE # 95
                                           ; SOURCE LINE # 96
0076 AF00        R     MOV     R7,tmp_sel
0078 120000      R     LCALL   _update_chp_status
                                           ; SOURCE LINE # 97
007B E500        R     MOV     A,chp_status_low
007D 709B              JNZ     int_loop
007F         ?C0337:
                                           ; SOURCE LINE # 100
007F 120000      R     LCALL   check_power_loss
                                           ; SOURCE LINE # 102
0082 80F2              SJMP    ?C0335
                                           ; SOURCE LINE # 103
                                           ; SOURCE LINE # 105
0084         next_loop:
                                           ; SOURCE LINE # 107
0084 E500        R     MOV     A,tmp_sel
0086 6410              XRL     A,#010H
0088 600D              JZ      chp_int_over
008A         ?C0338:
                                           ; SOURCE LINE # 108
008A E500        R     MOV     A,tmp_sel
008C 25E0              ADD     A,ACC
008E F500        R     MOV     tmp_sel,A
                                           ; SOURCE LINE # 109
0090 0500        R     INC     tmp_chp_id
                                           ; SOURCE LINE # 110
0092 750001      R     MOV     first_print,#01H
                                           ; SOURCE LINE # 111
0095 8083              SJMP    int_loop
                                           ; SOURCE LINE # 113
0097         chp_int_over:
                                           ; SOURCE LINE # 114
0097 8500D7      R     MOV     SFR_CHP_en,tmp_chp_en
                                           ; SOURCE LINE # 115
009A 90FF7F            MOV     DPTR,#sata+07FH
009D E500        R     MOV     A,tmp_chp_stripe
009F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 116
00A0 90FF57            MOV     DPTR,#sata+057H
00A3 E500        R     MOV     A,tmp_chp_stripe_h
00A5 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 118
00A6         ?C0340:
00A6 22                RET     
             ; FUNCTION chp_int_handler (END)

             ; FUNCTION chp_clock_off (BEGIN)
                                           ; SOURCE LINE # 122
                                           ; SOURCE LINE # 123
                                           ; SOURCE LINE # 126
0000 30000F      R     JNB     g_smart_read_handle,?C0341
                                           ; SOURCE LINE # 127
                                           ; SOURCE LINE # 128
0003 7800        R     MOV     R0,#LOW g_smart_read_cnt
C51 COMPILER V9.50a   SHARK                                                                07/26/2013 11:07:39 PAGE 79  

0005 E6                MOV     A,@R0
0006 FD                MOV     R5,A
0007 7F7F              MOV     R7,#07FH
0009 120000      R     LCALL   _updata_smart
                                           ; SOURCE LINE # 129
000C E4                CLR     A
000D 7800        R     MOV     R0,#LOW g_smart_read_cnt
000F F6                MOV     @R0,A
                                           ; SOURCE LINE # 130
0010 C200        R     CLR     g_smart_read_handle
                                           ; SOURCE LINE # 131
0012         ?C0341:
                                           ; SOURCE LINE # 132
0012 30000F      R     JNB     g_smart_write_handle,?C0342
                                           ; SOURCE LINE # 133
                                           ; SOURCE LINE # 134
0015 7800        R     MOV     R0,#LOW g_smart_write_cnt
0017 E6                MOV     A,@R0
0018 FD                MOV     R5,A
0019 7F73              MOV     R7,#073H
001B 120000      R     LCALL   _updata_smart
                                           ; SOURCE LINE # 135
001E E4                CLR     A
001F 7800        R     MOV     R0,#LOW g_smart_write_cnt
0021 F6                MOV     @R0,A
                                           ; SOURCE LINE # 136
0022 C200        R     CLR     g_smart_write_handle
                                           ; SOURCE LINE # 137
0024         ?C0342:
                                           ; SOURCE LINE # 138
0024 120000      R     LCALL   reset_engine
                                           ; SOURCE LINE # 142
0027 90FFD2            MOV     DPTR,#sata+0D2H
002A E0                MOVX    A,@DPTR
002B 54BF              ANL     A,#0BFH
002D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 146
002E 120000      R     LCALL   reset_engine
                                           ; SOURCE LINE # 147
0031 90FFF0            MOV     DPTR,#sata+0F0H
0034 740F              MOV     A,#0FH
0036 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 151
0037 90FF34            MOV     DPTR,#sata+034H
003A E0                MOVX    A,@DPTR
003B 90FF7E            MOV     DPTR,#sata+07EH
003E 30E712            JNB     ACC.7,?C0343
                                           ; SOURCE LINE # 152
                                           ; SOURCE LINE # 154
0041 74F5              MOV     A,#0F5H
0043 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 156
0044 7F0A              MOV     R7,#0AH
0046 7E00              MOV     R6,#00H
0048 120000      R     LCALL   _delay
                                           ; SOURCE LINE # 158
004B 90FFCC            MOV     DPTR,#sata+0CCH
004E 74C0              MOV     A,#0C0H
0050 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 160
0051 800D              SJMP    ?C0344
0053         ?C0343:
C51 COMPILER V9.50a   SHARK                                                                07/26/2013 11:07:39 PAGE 80  

                                           ; SOURCE LINE # 162
                                           ; SOURCE LINE # 163
0053 740A              MOV     A,#0AH
0055 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 164
0056 120000      R     LCALL   wait_chp_not_ready
                                           ; SOURCE LINE # 165
0059 7F64              MOV     R7,#064H
005B 7E00              MOV     R6,#00H
005D 120000      R     LCALL   _delay
                                           ; SOURCE LINE # 166
0060         ?C0344:
                                           ; SOURCE LINE # 167
0060 C200        R     CLR     g_chp_active
                                           ; SOURCE LINE # 168
0062 C200        R     CLR     g_cont_en
                                           ; SOURCE LINE # 170
0064 90FFD2            MOV     DPTR,#sata+0D2H
0067 E0                MOVX    A,@DPTR
0068 4440              ORL     A,#040H
006A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 176
006B 7BFF              MOV     R3,#0FFH
006D 7A00        R     MOV     R2,#HIGH ?SC_225
006F 7900        R     MOV     R1,#LOW ?SC_225
0071 120000      R     LCALL   _printu
                                           ; SOURCE LINE # 177
0074 90FF1E            MOV     DPTR,#sata+01EH
0077 E0                MOVX    A,@DPTR
0078 4440              ORL     A,#040H
007A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 178
007B 7F05              MOV     R7,#05H
007D 7E00              MOV     R6,#00H
007F 120000      R     LCALL   _delay
                                           ; SOURCE LINE # 179
0082 E0                MOVX    A,@DPTR
0083 30E714            JNB     ACC.7,chp_clock_off_over
0086         ?C0345:
                                           ; SOURCE LINE # 180
0086 7800        R     MOV     R0,#LOW g_current_fis_num
0088 E6                MOV     A,@R0
0089 B59F0E            CJNE    A,SFR_fis_num,chp_clock_off_over
008C         ?C0347:
                                           ; SOURCE LINE # 181
008C 90FF3C            MOV     DPTR,#sata+03CH
008F E0                MOVX    A,@DPTR
0090 4408              ORL     A,#08H
0092 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 182
0093 7F1E              MOV     R7,#01EH
0095 7E00              MOV     R6,#00H
0097 120000      R     LCALL   _delay
                                           ; SOURCE LINE # 183
009A         chp_clock_off_over:
                                           ; SOURCE LINE # 184
009A 90FF1E            MOV     DPTR,#sata+01EH
009D E0                MOVX    A,@DPTR
009E 54BF              ANL     A,#0BFH
00A0 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 188
00A1 22                RET     
C51 COMPILER V9.50a   SHARK                                                                07/26/2013 11:07:39 PAGE 81  

             ; FUNCTION chp_clock_off (END)

             ; FUNCTION chp_clock_on (BEGIN)
                                           ; SOURCE LINE # 190
                                           ; SOURCE LINE # 191
                                           ; SOURCE LINE # 193
0000 90FFD2            MOV     DPTR,#sata+0D2H
0003 E0                MOVX    A,@DPTR
0004 54BF              ANL     A,#0BFH
0006 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 195
0007 A200        R     MOV     C,g_chp_active
0009 B3                CPL     C
000A 5036              JNC     ?C0349
                                           ; SOURCE LINE # 196
                                           ; SOURCE LINE # 197
000C 90FF34            MOV     DPTR,#sata+034H
000F E0                MOVX    A,@DPTR
0010 30E716            JNB     ACC.7,?C0350
                                           ; SOURCE LINE # 198
                                           ; SOURCE LINE # 199
0013 90FF7E            MOV     DPTR,#sata+07EH
0016 74F5              MOV     A,#0F5H
0018 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 201
0019 907FBD            MOV     DPTR,#07FBDH
001C E4                CLR     A
001D 93                MOVC    A,@A+DPTR
001E 90FFCC            MOV     DPTR,#sata+0CCH
0021 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 202
0022 7F0A              MOV     R7,#0AH
0024 7E00              MOV     R6,#00H
0026 120000      R     LCALL   _delay
                                           ; SOURCE LINE # 203
0029         ?C0350:
                                           ; SOURCE LINE # 204
0029 90FF7E            MOV     DPTR,#sata+07EH
002C 7412              MOV     A,#012H
002E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 205
002F 7F64              MOV     R7,#064H
0031 7E00              MOV     R6,#00H
0033 120000      R     LCALL   _delay
                                           ; SOURCE LINE # 206
0036 7412              MOV     A,#012H
0038 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 207
0039 120000      R     LCALL   _delay
                                           ; SOURCE LINE # 208
003C 7412              MOV     A,#012H
003E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 209
003F 120000      R     LCALL   wait_chp_ready
                                           ; SOURCE LINE # 210
0042         ?C0349:
                                           ; SOURCE LINE # 211
0042 D200        R     SETB    g_chp_active
                                           ; SOURCE LINE # 213
0044 90FFD2            MOV     DPTR,#sata+0D2H
0047 E0                MOVX    A,@DPTR
0048 4440              ORL     A,#040H
C51 COMPILER V9.50a   SHARK                                                                07/26/2013 11:07:39 PAGE 82  

004A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 215
004B 22                RET     
             ; FUNCTION chp_clock_on (END)

             ; FUNCTION L?0895 (BEGIN)
0000         L?0896:
0000 120000      R     LCALL   gen_check_sum
0003 75F201            MOV     SFR_ext_sram_addr+01H,#01H
0006 75F1FF            MOV     SFR_ext_sram_addr,#0FFH
0009 8FF3              MOV     SFR_ext_sram_data,R7
000B         L?0897:
000B E4                CLR     A
000C         L?0898:
000C FB                MOV     R3,A
000D         L?0899:
000D 7D01              MOV     R5,#01H
000F 7F30              MOV     R7,#030H
             ; FUNCTION _chp_burst (BEGIN)
                                           ; SOURCE LINE # 217
0011 8F00        R     MOV     cmd,R7
0013 8D00        R     MOV     cnt,R5
0015 8B00        R     MOV     base_addr,R3
                                           ; SOURCE LINE # 218
                                           ; SOURCE LINE # 219
0017 120000      R     LCALL   reset_engine
                                           ; SOURCE LINE # 220
001A 120000      R     LCALL   save_lba
                                           ; SOURCE LINE # 221
001D 907FBE            MOV     DPTR,#07FBEH
0020 E4                CLR     A
0021 93                MOVC    A,@A+DPTR
0022 90FF78            MOV     DPTR,#sata+078H
0025 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 222
0026 907FBF            MOV     DPTR,#07FBFH
0029 E4                CLR     A
002A 93                MOVC    A,@A+DPTR
002B 90FF79            MOV     DPTR,#sata+079H
002E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 223
002F 907FC0            MOV     DPTR,#07FC0H
0032 E4                CLR     A
0033 93                MOVC    A,@A+DPTR
0034 90FF7A            MOV     DPTR,#sata+07AH
0037 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 224
0038 907FC1            MOV     DPTR,#07FC1H
003B E4                CLR     A
003C 93                MOVC    A,@A+DPTR
003D 90FF7B            MOV     DPTR,#sata+07BH
0040 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 225
0041 907FC2            MOV     DPTR,#07FC2H
0044 E4                CLR     A
0045 93                MOVC    A,@A+DPTR
0046 90FF7C            MOV     DPTR,#sata+07CH
0049 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 226
004A 907FC3            MOV     DPTR,#07FC3H
004D E4                CLR     A
004E 93                MOVC    A,@A+DPTR
C51 COMPILER V9.50a   SHARK                                                                07/26/2013 11:07:39 PAGE 83  

004F 90FF7D            MOV     DPTR,#sata+07DH
0052 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 227
0053         ?C0352:
0053 E500        R     MOV     A,base_addr
0055 D3                SETB    C
0056 9400              SUBB    A,#00H
0058 4007              JC      ?C0353
                                           ; SOURCE LINE # 228
                                           ; SOURCE LINE # 229
005A 75BE08            MOV     SFR_lba_comp,#08H
                                           ; SOURCE LINE # 230
005D 1500        R     DEC     base_addr
005F 80F2              SJMP    ?C0352
0061         ?C0353:
                                           ; SOURCE LINE # 231
0061 90FF7E            MOV     DPTR,#sata+07EH
0064 E500        R     MOV     A,cmd
0066 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 232
0067 E4                CLR     A
0068 F5FA              MOV     SFR_dma_base+01H,A
006A F5F9              MOV     SFR_dma_base,A
                                           ; SOURCE LINE # 233
006C 8500FB      R     MOV     SFR_dma_max_num_l,cnt
                                           ; SOURCE LINE # 234
006F F5FC              MOV     SFR_dma_max_num_h,A
                                           ; SOURCE LINE # 235
0071 E500        R     MOV     A,cmd
0073 B43005            CJNE    A,#030H,?C0355
                                           ; SOURCE LINE # 236
                                           ; SOURCE LINE # 237
0076 75F880            MOV     SFR_dma_cntl,#080H
                                           ; SOURCE LINE # 238
0079 8003              SJMP    ?C0357
007B         ?C0355:
                                           ; SOURCE LINE # 240
                                           ; SOURCE LINE # 241
007B 75F8C0            MOV     SFR_dma_cntl,#0C0H
                                           ; SOURCE LINE # 242
007E         ?C0357:
                                           ; SOURCE LINE # 243
007E 30F8FD            JNB     dma_done,?C0357
0081         ?C0358:
                                           ; SOURCE LINE # 244
0081 75F818            MOV     SFR_dma_cntl,#018H
                                           ; SOURCE LINE # 245
0084 020000      R     LJMP    recover_lba
             ; FUNCTION _chp_burst (END)

             ; FUNCTION flush_delay (BEGIN)
                                           ; SOURCE LINE # 248
                                           ; SOURCE LINE # 249
                                           ; SOURCE LINE # 250
0000 120000      R     LCALL   reset_engine
                                           ; SOURCE LINE # 252
0003 20000C      R     JB      g_smart_power_down_flag,?C0360
                                           ; SOURCE LINE # 253
                                           ; SOURCE LINE # 254
0006 7D01              MOV     R5,#01H
0008 7F1F              MOV     R7,#01FH
000A 120000      R     LCALL   _updata_smart_n
C51 COMPILER V9.50a   SHARK                                                                07/26/2013 11:07:39 PAGE 84  

                                           ; SOURCE LINE # 255
000D D200        R     SETB    g_smart_power_down_flag
                                           ; SOURCE LINE # 256
000F 120000      R     LCALL   reset_engine
                                           ; SOURCE LINE # 257
0012         ?C0360:
                                           ; SOURCE LINE # 259
0012 90FF7E            MOV     DPTR,#sata+07EH
0015 7442              MOV     A,#042H
0017 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 260
0018 120000      R     LCALL   wait_chp_ready
                                           ; SOURCE LINE # 261
001B 020000      R     LJMP    reset_engine
             ; FUNCTION flush_delay (END)

             ; FUNCTION smart_handler (BEGIN)
                                           ; SOURCE LINE # 3
                                           ; SOURCE LINE # 4
                                           ; SOURCE LINE # 6
0000 C200        R     CLR     g_smart_read_flag
                                           ; SOURCE LINE # 7
0002 20000B      R     JB      g_smart_operation,?C0363
0005 90FF10            MOV     DPTR,#sata+010H
0008 E0                MOVX    A,@DPTR
0009 64D8              XRL     A,#0D8H
000B 6003              JZ      $ + 5H
000D 020000      R     LJMP    smart_handler_err
0010         ?C0363:
                                           ; SOURCE LINE # 8
                                           ; SOURCE LINE # 9
0010 90FF10            MOV     DPTR,#sata+010H
0013 E0                MOVX    A,@DPTR
0014 2430              ADD     A,#030H
0016 B40B00            CJNE    A,#0BH,?C0792
0019         ?C0792:
0019 507C              JNC     ?C0377
001B 900000      R     MOV     DPTR,#?C0793
001E 75F003            MOV     B,#03H
0021 A4                MUL     AB
0022 C583              XCH     A,DPH
0024 25F0              ADD     A,B
0026 C583              XCH     A,DPH
0028 73                JMP     @A+DPTR
0029         ?C0793:
0029 020000      R     LJMP    ?C0373
002C 020000      R     LJMP    ?C0374
002F 020000      R     LJMP    ?C0368
0032 020000      R     LJMP    ?C0377
0035 020000      R     LJMP    ?C0372
0038 020000      R     LJMP    ?C0375
003B 020000      R     LJMP    ?C0376
003E 020000      R     LJMP    ?C0377
0041 020000      R     LJMP    ?C0366
0044 020000      R     LJMP    ?C0365
0047 020000      R     LJMP    ?C0367
                                           ; SOURCE LINE # 10
                                           ; SOURCE LINE # 14
004A         ?C0365:
                                           ; SOURCE LINE # 15
                                           ; SOURCE LINE # 17
004A C200        R     CLR     g_smart_operation
C51 COMPILER V9.50a   SHARK                                                                07/26/2013 11:07:39 PAGE 85  

                                           ; SOURCE LINE # 18
004C 804B              SJMP    ?C0364
                                           ; SOURCE LINE # 19
                                           ; SOURCE LINE # 20
004E         ?C0366:
                                           ; SOURCE LINE # 21
                                           ; SOURCE LINE # 23
004E D200        R     SETB    g_smart_operation
                                           ; SOURCE LINE # 24
0050 8047              SJMP    ?C0364
                                           ; SOURCE LINE # 25
                                           ; SOURCE LINE # 26
0052         ?C0367:
                                           ; SOURCE LINE # 27
                                           ; SOURCE LINE # 29
0052 120000      R     LCALL   smart_status
                                           ; SOURCE LINE # 30
0055 8042              SJMP    ?C0364
                                           ; SOURCE LINE # 31
                                           ; SOURCE LINE # 32
0057         ?C0368:
                                           ; SOURCE LINE # 33
                                           ; SOURCE LINE # 35
0057 90FF14            MOV     DPTR,#sata+014H
005A E0                MOVX    A,@DPTR
005B 7004              JNZ     ?C0369
                                           ; SOURCE LINE # 36
                                           ; SOURCE LINE # 38
005D C200        R     CLR     g_smart_attribute_autosave
                                           ; SOURCE LINE # 39
005F 8038              SJMP    ?C0364
0061         ?C0369:
                                           ; SOURCE LINE # 40
0061 90FF14            MOV     DPTR,#sata+014H
0064 E0                MOVX    A,@DPTR
0065 64F1              XRL     A,#0F1H
0067 7030              JNZ     ?C0364
                                           ; SOURCE LINE # 41
                                           ; SOURCE LINE # 43
0069 D200        R     SETB    g_smart_attribute_autosave
                                           ; SOURCE LINE # 44
                                           ; SOURCE LINE # 45
006B 802C              SJMP    ?C0364
                                           ; SOURCE LINE # 46
                                           ; SOURCE LINE # 48
006D         ?C0372:
                                           ; SOURCE LINE # 49
                                           ; SOURCE LINE # 51
006D 120000      R     LCALL   smart_offline
                                           ; SOURCE LINE # 52
0070 8027              SJMP    ?C0364
                                           ; SOURCE LINE # 53
                                           ; SOURCE LINE # 54
0072         ?C0373:
                                           ; SOURCE LINE # 55
                                           ; SOURCE LINE # 57
0072 7B20              MOV     R3,#020H
0074 7D01              MOV     R5,#01H
0076 E4                CLR     A
0077 FF                MOV     R7,A
                                           ; SOURCE LINE # 58
                                           ; SOURCE LINE # 59
C51 COMPILER V9.50a   SHARK                                                                07/26/2013 11:07:39 PAGE 86  

0078 8006              SJMP    ?C0840
                                           ; SOURCE LINE # 60
                                           ; SOURCE LINE # 62
007A         ?C0374:
                                           ; SOURCE LINE # 63
                                           ; SOURCE LINE # 65
007A 7B20              MOV     R3,#020H
007C 7D01              MOV     R5,#01H
007E 7F01              MOV     R7,#01H
0080         ?C0840:
0080 120000      R     LCALL   _smart_data_handler
                                           ; SOURCE LINE # 66
0083 D200        R     SETB    g_smart_read_flag
                                           ; SOURCE LINE # 67
0085 8012              SJMP    ?C0364
                                           ; SOURCE LINE # 68
                                           ; SOURCE LINE # 70
0087         ?C0375:
                                           ; SOURCE LINE # 71
                                           ; SOURCE LINE # 74
0087 7F20              MOV     R7,#020H
0089 120000      R     LCALL   _smart_log
                                           ; SOURCE LINE # 75
008C D200        R     SETB    g_smart_read_flag
                                           ; SOURCE LINE # 76
008E 8009              SJMP    ?C0364
                                           ; SOURCE LINE # 77
                                           ; SOURCE LINE # 79
0090         ?C0376:
                                           ; SOURCE LINE # 80
                                           ; SOURCE LINE # 83
0090 7F30              MOV     R7,#030H
0092 120000      R     LCALL   _smart_log
                                           ; SOURCE LINE # 84
0095 8002              SJMP    ?C0364
                                           ; SOURCE LINE # 85
                                           ; SOURCE LINE # 86
0097         ?C0377:
                                           ; SOURCE LINE # 87
                                           ; SOURCE LINE # 88
0097 D200        R     SETB    g_smart_abort
                                           ; SOURCE LINE # 90
                                           ; SOURCE LINE # 91
0099         ?C0364:
                                           ; SOURCE LINE # 92
0099 20000C      R     JB      g_smart_abort,smart_handler_err
009C         ?C0378:
                                           ; SOURCE LINE # 93
009C 200014      R     JB      g_smart_read_flag,?C0381
009F 7BFF              MOV     R3,#0FFH
00A1 E4                CLR     A
00A2 FD                MOV     R5,A
00A3 7F50              MOV     R7,#050H
00A5 020000      R     LJMP    _tx_fis_34
                                           ; SOURCE LINE # 95
                                           ; SOURCE LINE # 96
00A8         smart_handler_err:
                                           ; SOURCE LINE # 97
00A8 C200        R     CLR     g_smart_abort
                                           ; SOURCE LINE # 98
                                           ; SOURCE LINE # 99
00AA 120000      R     LCALL   L?0910
C51 COMPILER V9.50a   SHARK                                                                07/26/2013 11:07:39 PAGE 87  

                                           ; SOURCE LINE # 101
00AD 120000      R     LCALL   L?0902
                                           ; SOURCE LINE # 102
00B0 120000      R     LCALL   reset_engine
                                           ; SOURCE LINE # 105
00B3         ?C0381:
00B3 22                RET     
             ; FUNCTION smart_handler (END)

             ; FUNCTION smart_offline (BEGIN)
                                           ; SOURCE LINE # 106
                                           ; SOURCE LINE # 107
                                           ; SOURCE LINE # 108
0000 90FF84            MOV     DPTR,#sata+084H
0003 E0                MOVX    A,@DPTR
0004 24FE              ADD     A,#0FEH
0006 601D              JZ      ?C0390
0008 14                DEC     A
0009 601A              JZ      ?C0390
000B 2484              ADD     A,#084H
000D 6011              JZ      ?C0388
000F 24FE              ADD     A,#0FEH
0011 6012              JZ      ?C0390
0013 14                DEC     A
0014 600F              JZ      ?C0390
0016 14                DEC     A
0017 600C              JZ      ?C0390
0019 2482              ADD     A,#082H
001B 700B              JNZ     ?C0393
                                           ; SOURCE LINE # 109
                                           ; SOURCE LINE # 110
                                           ; SOURCE LINE # 111
                                           ; SOURCE LINE # 113
                                           ; SOURCE LINE # 114
                                           ; SOURCE LINE # 115
001D         ?C0384:
                                           ; SOURCE LINE # 116
                                           ; SOURCE LINE # 117
001D D200        R     SETB    g_smart_offline_flag
                                           ; SOURCE LINE # 118
001F 22                RET     
                                           ; SOURCE LINE # 119
                                           ; SOURCE LINE # 120
                                           ; SOURCE LINE # 124
                                           ; SOURCE LINE # 125
                                           ; SOURCE LINE # 129
                                           ; SOURCE LINE # 130
                                           ; SOURCE LINE # 131
                                           ; SOURCE LINE # 132
                                           ; SOURCE LINE # 133
                                           ; SOURCE LINE # 134
0020         ?C0388:
                                           ; SOURCE LINE # 135
                                           ; SOURCE LINE # 136
0020 D200        R     SETB    g_smart_offline_flag
                                           ; SOURCE LINE # 137
0022 D200        R     SETB    g_smart_test_int
                                           ; SOURCE LINE # 138
0024 22                RET     
                                           ; SOURCE LINE # 139
                                           ; SOURCE LINE # 140
                                           ; SOURCE LINE # 144
C51 COMPILER V9.50a   SHARK                                                                07/26/2013 11:07:39 PAGE 88  

                                           ; SOURCE LINE # 145
0025         ?C0390:
                                           ; SOURCE LINE # 146
                                           ; SOURCE LINE # 147
0025 D200        R     SETB    g_smart_offline_flag
                                           ; SOURCE LINE # 148
0027 22                RET     
                                           ; SOURCE LINE # 149
                                           ; SOURCE LINE # 150
0028         ?C0393:
0028 22                RET     
             ; FUNCTION smart_offline (END)

             ; FUNCTION _smart_log (BEGIN)
                                           ; SOURCE LINE # 162
0000 8F00        R     MOV     chp_cmd,R7
                                           ; SOURCE LINE # 163
                                           ; SOURCE LINE # 164
0002 C200        R     CLR     g_smart_abort
                                           ; SOURCE LINE # 166
0004 E500        R     MOV     A,chp_cmd
0006 B4300C            CJNE    A,#030H,?C0394
                                           ; SOURCE LINE # 167
                                           ; SOURCE LINE # 168
0009 90FF84            MOV     DPTR,#sata+084H
000C E0                MOVX    A,@DPTR
000D B40902            CJNE    A,#09H,?C0395
                                           ; SOURCE LINE # 169
                                           ; SOURCE LINE # 170
                                           ; SOURCE LINE # 171
0010 804A              SJMP    ?C0841
0012         ?C0395:
                                           ; SOURCE LINE # 173
                                           ; SOURCE LINE # 174
0012 D200        R     SETB    g_smart_abort
                                           ; SOURCE LINE # 175
                                           ; SOURCE LINE # 177
0014 22                RET     
                                           ; SOURCE LINE # 178
0015         ?C0394:
                                           ; SOURCE LINE # 180
0015 90FF84            MOV     DPTR,#sata+084H
0018 E0                MOVX    A,@DPTR
0019 C3                CLR     C
001A 940A              SUBB    A,#0AH
001C 4008              JC      ?C0398
                                           ; SOURCE LINE # 181
                                           ; SOURCE LINE # 189
001E E0                MOVX    A,@DPTR
001F FF                MOV     R7,A
0020 AB00        R     MOV     R3,chp_cmd
0022 7D01              MOV     R5,#01H
                                           ; SOURCE LINE # 190
0024 803C              SJMP    ?C0846
                                           ; SOURCE LINE # 191
0026         ?C0398:
                                           ; SOURCE LINE # 193
0026 90FF84            MOV     DPTR,#sata+084H
0029 E0                MOVX    A,@DPTR
002A 14                DEC     A
002B 6017              JZ      ?C0401
002D 14                DEC     A
C51 COMPILER V9.50a   SHARK                                                                07/26/2013 11:07:39 PAGE 89  

002E 601C              JZ      ?C0402
0030 24FC              ADD     A,#0FCH
0032 6020              JZ      ?C0403
0034 24FD              ADD     A,#0FDH
0036 6024              JZ      ?C0404
0038 2409              ADD     A,#09H
003A 7029              JNZ     ?C0405
                                           ; SOURCE LINE # 194
                                           ; SOURCE LINE # 195
003C         ?C0400:
                                           ; SOURCE LINE # 196
                                           ; SOURCE LINE # 197
003C AB00        R     MOV     R3,chp_cmd
003E 7D01              MOV     R5,#01H
0040 7F03              MOV     R7,#03H
0042         ?C0842:
                                           ; SOURCE LINE # 198
0042 801E              SJMP    ?C0846
                                           ; SOURCE LINE # 199
                                           ; SOURCE LINE # 200
0044         ?C0401:
                                           ; SOURCE LINE # 201
                                           ; SOURCE LINE # 202
0044 AB00        R     MOV     R3,chp_cmd
0046 7D01              MOV     R5,#01H
0048 7F04              MOV     R7,#04H
004A         ?C0843:
                                           ; SOURCE LINE # 203
004A 8016              SJMP    ?C0846
                                           ; SOURCE LINE # 204
                                           ; SOURCE LINE # 205
004C         ?C0402:
                                           ; SOURCE LINE # 206
                                           ; SOURCE LINE # 207
004C AB00        R     MOV     R3,chp_cmd
004E 7D01              MOV     R5,#01H
0050 7F05              MOV     R7,#05H
0052         ?C0844:
                                           ; SOURCE LINE # 208
0052 800E              SJMP    ?C0846
                                           ; SOURCE LINE # 209
                                           ; SOURCE LINE # 210
0054         ?C0403:
                                           ; SOURCE LINE # 211
                                           ; SOURCE LINE # 212
0054 AB00        R     MOV     R3,chp_cmd
0056 7D01              MOV     R5,#01H
0058 7F07              MOV     R7,#07H
005A         ?C0845:
                                           ; SOURCE LINE # 213
005A 8006              SJMP    ?C0846
                                           ; SOURCE LINE # 214
                                           ; SOURCE LINE # 215
005C         ?C0404:
                                           ; SOURCE LINE # 216
                                           ; SOURCE LINE # 217
005C         ?C0841:
005C AB00        R     MOV     R3,chp_cmd
005E 7D01              MOV     R5,#01H
0060 7F09              MOV     R7,#09H
0062         ?C0846:
0062 020000      R     LJMP    _smart_data_handler
C51 COMPILER V9.50a   SHARK                                                                07/26/2013 11:07:39 PAGE 90  

                                           ; SOURCE LINE # 218
                                           ; SOURCE LINE # 219
                                           ; SOURCE LINE # 220
0065         ?C0405:
                                           ; SOURCE LINE # 221
                                           ; SOURCE LINE # 222
0065 D200        R     SETB    g_smart_abort
                                           ; SOURCE LINE # 223
                                           ; SOURCE LINE # 224
                                           ; SOURCE LINE # 225
                                           ; SOURCE LINE # 226
0067         smart_log_over:
                                           ; SOURCE LINE # 229
0067         ?C0406:
0067 22                RET     
             ; FUNCTION _smart_log (END)

             ; FUNCTION smart_status (BEGIN)
                                           ; SOURCE LINE # 230
                                           ; SOURCE LINE # 231
                                           ; SOURCE LINE # 232
0000 90FF18            MOV     DPTR,#sata+018H
0003 744F              MOV     A,#04FH
0005 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 233
0006 90FF1A            MOV     DPTR,#sata+01AH
0009 74C2              MOV     A,#0C2H
000B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 234
000C 22                RET     
             ; FUNCTION smart_status (END)

             ; FUNCTION _smart_data_handler (BEGIN)
                                           ; SOURCE LINE # 235
0000 8F00        R     MOV     base_sec,R7
0002 8D00        R     MOV     sec_cnt,R5
0004 8B00        R     MOV     chp_cmd,R3
                                           ; SOURCE LINE # 236
                                           ; SOURCE LINE # 240
0006 E4                CLR     A
0007 F500        R     MOV     cur_cnt,A
                                           ; SOURCE LINE # 241
0009 F500        R     MOV     pio_interrput,A
                                           ; SOURCE LINE # 243
000B C200        R     CLR     g_smart_abort
000D         ?C0408:
                                           ; SOURCE LINE # 245
000D E500        R     MOV     A,sec_cnt
000F D3                SETB    C
0010 9400              SUBB    A,#00H
0012 4078              JC      ?C0409
                                           ; SOURCE LINE # 246
                                           ; SOURCE LINE # 248
0014 E500        R     MOV     A,chp_cmd
0016 6430              XRL     A,#030H
0018 7029              JNZ     ?C0410
                                           ; SOURCE LINE # 249
                                           ; SOURCE LINE # 251
001A 850000      R     MOV     ?_tx_fis_5f?BYTE+03H,sec_cnt
001D F500        R     MOV     ?_tx_fis_5f?BYTE+04H,A
001F 7500D0      R     MOV     ?_tx_fis_5f?BYTE+05H,#0D0H
0022 AB00        R     MOV     R3,pio_interrput
C51 COMPILER V9.50a   SHARK                                                                07/26/2013 11:07:39 PAGE 91  

0024 FD                MOV     R5,A
0025 7F58              MOV     R7,#058H
0027 120000      R     LCALL   _tx_fis_5f
                                           ; SOURCE LINE # 252
002A 750040      R     MOV     pio_interrput,#040H
                                           ; SOURCE LINE # 254
002D 120000      R     LCALL   L?0918
                                           ; SOURCE LINE # 255
0030 30EA02            JNB     sata_burst_abort,?C0411
0033 D200        R     SETB    g_smart_abort
0035         ?C0411:
                                           ; SOURCE LINE # 257
0035 E500        R     MOV     A,cur_cnt
0037 2500        R     ADD     A,base_sec
0039 FB                MOV     R3,A
003A 7D01              MOV     R5,#01H
003C AF00        R     MOV     R7,chp_cmd
003E 120000      R     LCALL   _chp_burst
                                           ; SOURCE LINE # 258
0041 8042              SJMP    ?C0412
0043         ?C0410:
                                           ; SOURCE LINE # 260
                                           ; SOURCE LINE # 262
0043 E500        R     MOV     A,sec_cnt
0045 B4010A            CJNE    A,#01H,?C0413
0048 F500        R     MOV     ?_tx_fis_5f?BYTE+03H,A
004A E4                CLR     A
004B F500        R     MOV     ?_tx_fis_5f?BYTE+04H,A
004D 750050      R     MOV     ?_tx_fis_5f?BYTE+05H,#050H
0050 8009              SJMP    ?C0847
0052         ?C0413:
                                           ; SOURCE LINE # 263
0052 850000      R     MOV     ?_tx_fis_5f?BYTE+03H,sec_cnt
0055 E4                CLR     A
0056 F500        R     MOV     ?_tx_fis_5f?BYTE+04H,A
0058 7500D0      R     MOV     ?_tx_fis_5f?BYTE+05H,#0D0H
005B         ?C0847:
005B 7BE0              MOV     R3,#0E0H
005D FD                MOV     R5,A
005E 7F58              MOV     R7,#058H
0060 120000      R     LCALL   _tx_fis_5f
0063         ?C0414:
                                           ; SOURCE LINE # 266
0063 E500        R     MOV     A,cur_cnt
0065 2500        R     ADD     A,base_sec
0067 FB                MOV     R3,A
0068 7D01              MOV     R5,#01H
006A AF00        R     MOV     R7,chp_cmd
006C 120000      R     LCALL   _chp_burst
                                           ; SOURCE LINE # 267
006F 300007      R     JNB     g_smart_offline_flag,?C0415
0072 E500        R     MOV     A,base_sec
0074 7003              JNZ     ?C0415
0076 120000      R     LCALL   self_test_routine
0079         ?C0415:
                                           ; SOURCE LINE # 268
0079 7D01              MOV     R5,#01H
007B 7FC0              MOV     R7,#0C0H
007D 120000      R     LCALL   _sata_burst
                                           ; SOURCE LINE # 269
0080 30EA02            JNB     sata_burst_abort,?C0412
0083 D200        R     SETB    g_smart_abort
C51 COMPILER V9.50a   SHARK                                                                07/26/2013 11:07:39 PAGE 92  

                                           ; SOURCE LINE # 271
0085         ?C0412:
                                           ; SOURCE LINE # 272
0085 0500        R     INC     cur_cnt
                                           ; SOURCE LINE # 273
0087 1500        R     DEC     sec_cnt
                                           ; SOURCE LINE # 276
0089 020000      R     LJMP    ?C0408
008C         ?C0409:
                                           ; SOURCE LINE # 277
008C 020000      R     LJMP    reset_engine
             ; FUNCTION _smart_data_handler (END)

             ; FUNCTION self_test_routine (BEGIN)
                                           ; SOURCE LINE # 283
                                           ; SOURCE LINE # 284
                                           ; SOURCE LINE # 287
0000 75F201            MOV     SFR_ext_sram_addr+01H,#01H
0003 75F16B            MOV     SFR_ext_sram_addr,#06BH
                                           ; SOURCE LINE # 288
0006 300005      R     JNB     g_smart_test_int,?C0418
                                           ; SOURCE LINE # 289
                                           ; SOURCE LINE # 290
0009 75F310            MOV     SFR_ext_sram_data,#010H
                                           ; SOURCE LINE # 292
000C 805D              SJMP    self_test_over
                                           ; SOURCE LINE # 293
000E         ?C0418:
                                           ; SOURCE LINE # 294
000E 7800        R     MOV     R0,#LOW g_smart_test_status
0010 E6                MOV     A,@R0
0011 B40A00            CJNE    A,#0AH,?C0794
0014         ?C0794:
0014 5055              JNC     self_test_over
0016 900000      R     MOV     DPTR,#?C0795
0019 F8                MOV     R0,A
001A 28                ADD     A,R0
001B 28                ADD     A,R0
001C 73                JMP     @A+DPTR
001D         ?C0795:
001D 020000      R     LJMP    ?C0421
0020 020000      R     LJMP    ?C0422
0023 020000      R     LJMP    ?C0423
0026 020000      R     LJMP    ?C0424
0029 020000      R     LJMP    ?C0425
002C 020000      R     LJMP    ?C0426
002F 020000      R     LJMP    ?C0427
0032 020000      R     LJMP    ?C0428
0035 020000      R     LJMP    ?C0429
0038 020000      R     LJMP    ?C0430
                                           ; SOURCE LINE # 295
                                           ; SOURCE LINE # 296
003B         ?C0421:
                                           ; SOURCE LINE # 297
                                           ; SOURCE LINE # 298
003B 75F3F9            MOV     SFR_ext_sram_data,#0F9H
                                           ; SOURCE LINE # 299
003E 802B              SJMP    self_test_over
                                           ; SOURCE LINE # 300
                                           ; SOURCE LINE # 301
0040         ?C0422:
                                           ; SOURCE LINE # 302
C51 COMPILER V9.50a   SHARK                                                                07/26/2013 11:07:39 PAGE 93  

                                           ; SOURCE LINE # 303
0040 75F3F8            MOV     SFR_ext_sram_data,#0F8H
                                           ; SOURCE LINE # 304
0043 8026              SJMP    self_test_over
                                           ; SOURCE LINE # 305
                                           ; SOURCE LINE # 306
0045         ?C0423:
                                           ; SOURCE LINE # 307
                                           ; SOURCE LINE # 308
0045 75F3F7            MOV     SFR_ext_sram_data,#0F7H
                                           ; SOURCE LINE # 309
0048 8021              SJMP    self_test_over
                                           ; SOURCE LINE # 310
                                           ; SOURCE LINE # 311
004A         ?C0424:
                                           ; SOURCE LINE # 312
                                           ; SOURCE LINE # 313
004A 75F3F6            MOV     SFR_ext_sram_data,#0F6H
                                           ; SOURCE LINE # 314
004D 801C              SJMP    self_test_over
                                           ; SOURCE LINE # 315
                                           ; SOURCE LINE # 316
004F         ?C0425:
                                           ; SOURCE LINE # 317
                                           ; SOURCE LINE # 318
004F 75F3F5            MOV     SFR_ext_sram_data,#0F5H
                                           ; SOURCE LINE # 319
0052 8017              SJMP    self_test_over
                                           ; SOURCE LINE # 320
                                           ; SOURCE LINE # 321
0054         ?C0426:
                                           ; SOURCE LINE # 322
                                           ; SOURCE LINE # 323
0054 75F3F4            MOV     SFR_ext_sram_data,#0F4H
                                           ; SOURCE LINE # 324
0057 8012              SJMP    self_test_over
                                           ; SOURCE LINE # 325
                                           ; SOURCE LINE # 326
0059         ?C0427:
                                           ; SOURCE LINE # 327
                                           ; SOURCE LINE # 328
0059 75F3F3            MOV     SFR_ext_sram_data,#0F3H
                                           ; SOURCE LINE # 329
005C 800D              SJMP    self_test_over
                                           ; SOURCE LINE # 330
                                           ; SOURCE LINE # 331
005E         ?C0428:
                                           ; SOURCE LINE # 332
                                           ; SOURCE LINE # 333
005E 75F3F2            MOV     SFR_ext_sram_data,#0F2H
                                           ; SOURCE LINE # 334
0061 8008              SJMP    self_test_over
                                           ; SOURCE LINE # 335
                                           ; SOURCE LINE # 336
0063         ?C0429:
                                           ; SOURCE LINE # 337
                                           ; SOURCE LINE # 338
0063 75F3F1            MOV     SFR_ext_sram_data,#0F1H
                                           ; SOURCE LINE # 339
0066 8003              SJMP    self_test_over
                                           ; SOURCE LINE # 340
                                           ; SOURCE LINE # 341
C51 COMPILER V9.50a   SHARK                                                                07/26/2013 11:07:39 PAGE 94  

0068         ?C0430:
                                           ; SOURCE LINE # 342
                                           ; SOURCE LINE # 343
0068 E4                CLR     A
0069 F5F3              MOV     SFR_ext_sram_data,A
                                           ; SOURCE LINE # 344
                                           ; SOURCE LINE # 345
                                           ; SOURCE LINE # 346
                                           ; SOURCE LINE # 347
006B         self_test_over:
                                           ; SOURCE LINE # 348
                                           ; SOURCE LINE # 349
006B 120000      R     LCALL   L?0914
;---- Variable 'tmp' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 350
006E 75F201            MOV     SFR_ext_sram_addr+01H,#01H
0071 75F1FF            MOV     SFR_ext_sram_addr,#0FFH
                                           ; SOURCE LINE # 351
0074 8FF3              MOV     SFR_ext_sram_data,R7
                                           ; SOURCE LINE # 352
0076 7800        R     MOV     R0,#LOW g_smart_test_status
0078 06                INC     @R0
                                           ; SOURCE LINE # 353
0079 E6                MOV     A,@R0
007A 640A              XRL     A,#0AH
007C 6003              JZ      ?C0432
007E 300008      R     JNB     g_smart_test_int,?C0433
0081         ?C0432:
                                           ; SOURCE LINE # 354
                                           ; SOURCE LINE # 355
0081 E4                CLR     A
0082 7800        R     MOV     R0,#LOW g_smart_test_status
0084 F6                MOV     @R0,A
                                           ; SOURCE LINE # 356
0085 C200        R     CLR     g_smart_offline_flag
                                           ; SOURCE LINE # 357
0087 C200        R     CLR     g_smart_test_int
                                           ; SOURCE LINE # 358
                                           ; SOURCE LINE # 359
0089         ?C0433:
0089 22                RET     
             ; FUNCTION self_test_routine (END)

             ; FUNCTION L?0900 (BEGIN)
0000         L?0901:
0000 7BFF              MOV     R3,#0FFH
0002 7D04              MOV     R5,#04H
0004 7F51              MOV     R7,#051H
0006 120000      R     LCALL   _tx_fis_34
0009         L?0902:
0009 7D01              MOV     R5,#01H
000B 7F5B              MOV     R7,#05BH
             ; FUNCTION _updata_smart (BEGIN)
                                           ; SOURCE LINE # 405
000D 8F00        R     MOV     smart_addr,R7
000F 8D00        R     MOV     smart_cnt,R5
                                           ; SOURCE LINE # 406
                                           ; SOURCE LINE # 409
0011 120000      R     LCALL   reset_engine
                                           ; SOURCE LINE # 410
0014 E4                CLR     A
0015 FB                MOV     R3,A
C51 COMPILER V9.50a   SHARK                                                                07/26/2013 11:07:39 PAGE 95  

0016 7D01              MOV     R5,#01H
0018 7F20              MOV     R7,#020H
001A 120000      R     LCALL   _chp_burst
                                           ; SOURCE LINE # 411
001D E4                CLR     A
001E F5F4              MOV     SFR_ext_sram_cntl,A
                                           ; SOURCE LINE # 414
0020 AF00        R     MOV     R7,smart_addr
0022 F5F2              MOV     SFR_ext_sram_addr+01H,A
0024 8FF1              MOV     SFR_ext_sram_addr,R7
                                           ; SOURCE LINE # 415
;---- Variable 'tmp_data' assigned to Register 'R7' ----
0026 AFF3              MOV     R7,SFR_ext_sram_data
                                           ; SOURCE LINE # 416
0028 E500        R     MOV     A,smart_cnt
002A 25F3              ADD     A,SFR_ext_sram_data
002C F5F3              MOV     SFR_ext_sram_data,A
                                           ; SOURCE LINE # 419
002E EF                MOV     A,R7
002F D3                SETB    C
0030 95F3              SUBB    A,SFR_ext_sram_data
0032 4030              JC      ?C0434
                                           ; SOURCE LINE # 420
                                           ; SOURCE LINE # 421
0034 05F1              INC     SFR_ext_sram_addr
0036 E5F1              MOV     A,SFR_ext_sram_addr
0038 7002              JNZ     ?C0796
003A 05F2              INC     SFR_ext_sram_addr+01H
003C         ?C0796:
                                           ; SOURCE LINE # 422
003C AFF3              MOV     R7,SFR_ext_sram_data
                                           ; SOURCE LINE # 423
003E 05F3              INC     SFR_ext_sram_data
                                           ; SOURCE LINE # 425
0040 EF                MOV     A,R7
0041 D3                SETB    C
0042 95F3              SUBB    A,SFR_ext_sram_data
0044 401E              JC      ?C0434
                                           ; SOURCE LINE # 426
                                           ; SOURCE LINE # 427
0046 05F1              INC     SFR_ext_sram_addr
0048 E5F1              MOV     A,SFR_ext_sram_addr
004A 7002              JNZ     ?C0797
004C 05F2              INC     SFR_ext_sram_addr+01H
004E         ?C0797:
                                           ; SOURCE LINE # 428
004E AFF3              MOV     R7,SFR_ext_sram_data
                                           ; SOURCE LINE # 429
0050 05F3              INC     SFR_ext_sram_data
                                           ; SOURCE LINE # 431
0052 EF                MOV     A,R7
0053 D3                SETB    C
0054 95F3              SUBB    A,SFR_ext_sram_data
0056 400C              JC      ?C0434
                                           ; SOURCE LINE # 432
                                           ; SOURCE LINE # 433
0058 05F1              INC     SFR_ext_sram_addr
005A E5F1              MOV     A,SFR_ext_sram_addr
005C 7002              JNZ     ?C0798
005E 05F2              INC     SFR_ext_sram_addr+01H
0060         ?C0798:
                                           ; SOURCE LINE # 434
C51 COMPILER V9.50a   SHARK                                                                07/26/2013 11:07:39 PAGE 96  

0060 AFF3              MOV     R7,SFR_ext_sram_data
                                           ; SOURCE LINE # 435
0062 05F3              INC     SFR_ext_sram_data
                                           ; SOURCE LINE # 436
                                           ; SOURCE LINE # 437
                                           ; SOURCE LINE # 438
0064         ?C0434:
                                           ; SOURCE LINE # 439
;---- Variable 'tmp' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 440
                                           ; SOURCE LINE # 441
                                           ; SOURCE LINE # 442
0064 120000      R     LCALL   L?0895
                                           ; SOURCE LINE # 443
0067 020000      R     LJMP    reset_engine
             ; FUNCTION _updata_smart (END)

             ; FUNCTION _updata_smart_n (BEGIN)
                                           ; SOURCE LINE # 446
0000 8F00        R     MOV     smart_addr,R7
0002 8D00        R     MOV     smart_cnt,R5
                                           ; SOURCE LINE # 447
                                           ; SOURCE LINE # 450
0004 120000      R     LCALL   reset_engine
                                           ; SOURCE LINE # 451
0007 E4                CLR     A
0008 FB                MOV     R3,A
0009 7D01              MOV     R5,#01H
000B 7F20              MOV     R7,#020H
000D 120000      R     LCALL   _chp_burst
                                           ; SOURCE LINE # 452
0010 E4                CLR     A
0011 F5F4              MOV     SFR_ext_sram_cntl,A
                                           ; SOURCE LINE # 455
0013 AF00        R     MOV     R7,smart_addr
0015 F5F2              MOV     SFR_ext_sram_addr+01H,A
0017 8FF1              MOV     SFR_ext_sram_addr,R7
                                           ; SOURCE LINE # 456
;---- Variable 'tmp_data' assigned to Register 'R7' ----
0019 AFF3              MOV     R7,SFR_ext_sram_data
                                           ; SOURCE LINE # 457
001B C3                CLR     C
001C E5F3              MOV     A,SFR_ext_sram_data
001E 9500        R     SUBB    A,smart_cnt
0020 F5F3              MOV     SFR_ext_sram_data,A
                                           ; SOURCE LINE # 460
0022 EF                MOV     A,R7
0023 C3                CLR     C
0024 95F3              SUBB    A,SFR_ext_sram_data
0026 5030              JNC     ?C0438
                                           ; SOURCE LINE # 461
                                           ; SOURCE LINE # 462
0028 05F1              INC     SFR_ext_sram_addr
002A E5F1              MOV     A,SFR_ext_sram_addr
002C 7002              JNZ     ?C0799
002E 05F2              INC     SFR_ext_sram_addr+01H
0030         ?C0799:
                                           ; SOURCE LINE # 463
0030 AFF3              MOV     R7,SFR_ext_sram_data
                                           ; SOURCE LINE # 464
0032 15F3              DEC     SFR_ext_sram_data
                                           ; SOURCE LINE # 466
C51 COMPILER V9.50a   SHARK                                                                07/26/2013 11:07:39 PAGE 97  

0034 EF                MOV     A,R7
0035 C3                CLR     C
0036 95F3              SUBB    A,SFR_ext_sram_data
0038 501E              JNC     ?C0438
                                           ; SOURCE LINE # 467
                                           ; SOURCE LINE # 468
003A 05F1              INC     SFR_ext_sram_addr
003C E5F1              MOV     A,SFR_ext_sram_addr
003E 7002              JNZ     ?C0800
0040 05F2              INC     SFR_ext_sram_addr+01H
0042         ?C0800:
                                           ; SOURCE LINE # 469
0042 AFF3              MOV     R7,SFR_ext_sram_data
                                           ; SOURCE LINE # 470
0044 15F3              DEC     SFR_ext_sram_data
                                           ; SOURCE LINE # 472
0046 EF                MOV     A,R7
0047 C3                CLR     C
0048 95F3              SUBB    A,SFR_ext_sram_data
004A 500C              JNC     ?C0438
                                           ; SOURCE LINE # 473
                                           ; SOURCE LINE # 474
004C 05F1              INC     SFR_ext_sram_addr
004E E5F1              MOV     A,SFR_ext_sram_addr
0050 7002              JNZ     ?C0801
0052 05F2              INC     SFR_ext_sram_addr+01H
0054         ?C0801:
                                           ; SOURCE LINE # 475
0054 AFF3              MOV     R7,SFR_ext_sram_data
                                           ; SOURCE LINE # 476
0056 15F3              DEC     SFR_ext_sram_data
                                           ; SOURCE LINE # 477
                                           ; SOURCE LINE # 478
                                           ; SOURCE LINE # 479
0058         ?C0438:
                                           ; SOURCE LINE # 480
;---- Variable 'tmp' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 481
                                           ; SOURCE LINE # 482
                                           ; SOURCE LINE # 483
0058 120000      R     LCALL   L?0895
                                           ; SOURCE LINE # 484
005B 020000      R     LJMP    reset_engine
             ; FUNCTION _updata_smart_n (END)

             ; FUNCTION smart_write_cnt (BEGIN)
                                           ; SOURCE LINE # 487
                                           ; SOURCE LINE # 488
                                           ; SOURCE LINE # 490
0000 D200        R     SETB    g_smart_write_handle
                                           ; SOURCE LINE # 492
0002 7800        R     MOV     R0,#LOW write_sec_cnt_l
0004 E6                MOV     A,@R0
0005 FE                MOV     R6,A
0006 08                INC     R0
0007 E6                MOV     A,@R0
0008 FF                MOV     R7,A
;---- Variable 'tmp' assigned to Register 'R6/R7' ----
                                           ; SOURCE LINE # 493
0009 E5CE              MOV     A,SFR_SATA_done_num
000B 26                ADD     A,@R0
000C F6                MOV     @R0,A
C51 COMPILER V9.50a   SHARK                                                                07/26/2013 11:07:39 PAGE 98  

000D 18                DEC     R0
000E E5CF              MOV     A,SFR_SATA_done_num+01H
0010 36                ADDC    A,@R0
0011 F6                MOV     @R0,A
                                           ; SOURCE LINE # 494
0012 18                DEC     R0
0013 E5E5              MOV     A,SFR_SATA_done_num_h
0015 26                ADD     A,@R0
0016 F6                MOV     @R0,A
                                           ; SOURCE LINE # 495
0017 D3                SETB    C
0018 7800        R     MOV     R0,#LOW write_sec_cnt_l+01H
001A E6                MOV     A,@R0
001B 9F                SUBB    A,R7
001C 18                DEC     R0
001D E6                MOV     A,@R0
001E 9E                SUBB    A,R6
001F 5002              JNC     ?C0443
0021 18                DEC     R0
0022 06                INC     @R0
0023         ?C0443:
                                           ; SOURCE LINE # 496
0023 7800        R     MOV     R0,#LOW write_sec_cnt_h
0025 E6                MOV     A,@R0
0026 C3                CLR     C
0027 9420              SUBB    A,#020H
0029 4009              JC      ?C0445
                                           ; SOURCE LINE # 497
                                           ; SOURCE LINE # 498
002B 74E0              MOV     A,#0E0H
002D 26                ADD     A,@R0
002E F6                MOV     @R0,A
                                           ; SOURCE LINE # 499
002F 7800        R     MOV     R0,#LOW g_smart_write_cnt
0031 06                INC     @R0
                                           ; SOURCE LINE # 500
0032 80EF              SJMP    ?C0443
                                           ; SOURCE LINE # 501
0034         ?C0445:
0034 22                RET     
             ; FUNCTION smart_write_cnt (END)

             ; FUNCTION smart_read_cnt (BEGIN)
                                           ; SOURCE LINE # 504
                                           ; SOURCE LINE # 505
                                           ; SOURCE LINE # 508
0000 D200        R     SETB    g_smart_read_handle
                                           ; SOURCE LINE # 509
0002 7800        R     MOV     R0,#LOW read_sec_cnt_l
0004 E6                MOV     A,@R0
0005 FE                MOV     R6,A
0006 08                INC     R0
0007 E6                MOV     A,@R0
0008 FF                MOV     R7,A
;---- Variable 'tmp' assigned to Register 'R6/R7' ----
                                           ; SOURCE LINE # 510
0009 E5CE              MOV     A,SFR_SATA_done_num
000B 26                ADD     A,@R0
000C F6                MOV     @R0,A
000D 18                DEC     R0
000E E5CF              MOV     A,SFR_SATA_done_num+01H
0010 36                ADDC    A,@R0
C51 COMPILER V9.50a   SHARK                                                                07/26/2013 11:07:39 PAGE 99  

0011 F6                MOV     @R0,A
                                           ; SOURCE LINE # 511
0012 18                DEC     R0
0013 E5E5              MOV     A,SFR_SATA_done_num_h
0015 26                ADD     A,@R0
0016 F6                MOV     @R0,A
                                           ; SOURCE LINE # 512
0017 D3                SETB    C
0018 7800        R     MOV     R0,#LOW read_sec_cnt_l+01H
001A E6                MOV     A,@R0
001B 9F                SUBB    A,R7
001C 18                DEC     R0
001D E6                MOV     A,@R0
001E 9E                SUBB    A,R6
001F 5002              JNC     ?C0447
0021 18                DEC     R0
0022 06                INC     @R0
0023         ?C0447:
                                           ; SOURCE LINE # 513
0023 7800        R     MOV     R0,#LOW read_sec_cnt_h
0025 E6                MOV     A,@R0
0026 C3                CLR     C
0027 9420              SUBB    A,#020H
0029 4009              JC      ?C0449
                                           ; SOURCE LINE # 514
                                           ; SOURCE LINE # 515
002B 74E0              MOV     A,#0E0H
002D 26                ADD     A,@R0
002E F6                MOV     @R0,A
                                           ; SOURCE LINE # 516
002F 7800        R     MOV     R0,#LOW g_smart_read_cnt
0031 06                INC     @R0
                                           ; SOURCE LINE # 517
0032 80EF              SJMP    ?C0447
                                           ; SOURCE LINE # 518
0034         ?C0449:
0034 22                RET     
             ; FUNCTION smart_read_cnt (END)

             ; FUNCTION smart_block_handle (BEGIN)
                                           ; SOURCE LINE # 521
                                           ; SOURCE LINE # 522
                                           ; SOURCE LINE # 531
0000         check_loop:
                                           ; SOURCE LINE # 532
0000 907FBA            MOV     DPTR,#07FBAH
0003 E4                CLR     A
0004 93                MOVC    A,@A+DPTR
0005 30E011            JNB     ACC.0,?C0451
0008 90FF5C            MOV     DPTR,#sata+05CH
000B E0                MOVX    A,@DPTR
000C 30E70A            JNB     ACC.7,?C0451
000F 750001      R     MOV     chp_sel,#01H
0012 90FF7F            MOV     DPTR,#sata+07FH
0015 7410              MOV     A,#010H
0017 8049              SJMP    ?C0850
0019         ?C0451:
                                           ; SOURCE LINE # 533
0019 907FBA            MOV     DPTR,#07FBAH
001C E4                CLR     A
001D 93                MOVC    A,@A+DPTR
001E 30E111            JNB     ACC.1,?C0454
C51 COMPILER V9.50a   SHARK                                                                07/26/2013 11:07:39 PAGE 100 

0021 90FF5D            MOV     DPTR,#sata+05DH
0024 E0                MOVX    A,@DPTR
0025 30E70A            JNB     ACC.7,?C0454
0028 750002      R     MOV     chp_sel,#02H
002B 90FF7F            MOV     DPTR,#sata+07FH
002E 7420              MOV     A,#020H
0030         ?C0848:
0030 8030              SJMP    ?C0850
0032         ?C0454:
                                           ; SOURCE LINE # 534
0032 907FBA            MOV     DPTR,#07FBAH
0035 E4                CLR     A
0036 93                MOVC    A,@A+DPTR
0037 30E211            JNB     ACC.2,?C0456
003A 90FF5E            MOV     DPTR,#sata+05EH
003D E0                MOVX    A,@DPTR
003E 30E70A            JNB     ACC.7,?C0456
0041 750004      R     MOV     chp_sel,#04H
0044 90FF7F            MOV     DPTR,#sata+07FH
0047 7440              MOV     A,#040H
0049         ?C0849:
0049 8017              SJMP    ?C0850
004B         ?C0456:
                                           ; SOURCE LINE # 535
004B 907FBA            MOV     DPTR,#07FBAH
004E E4                CLR     A
004F 93                MOVC    A,@A+DPTR
0050 30E317            JNB     ACC.3,?C0458
0053 90FF5F            MOV     DPTR,#sata+05FH
0056 E0                MOVX    A,@DPTR
0057 30E710            JNB     ACC.7,?C0458
005A 750008      R     MOV     chp_sel,#08H
005D 90FF7F            MOV     DPTR,#sata+07FH
0060 7480              MOV     A,#080H
0062         ?C0850:
0062 F0                MOVX    @DPTR,A
0063 E4                CLR     A
0064 90FF57            MOV     DPTR,#sata+057H
0067 F0                MOVX    @DPTR,A
0068 8023              SJMP    handle
006A         ?C0458:
                                           ; SOURCE LINE # 536
006A 907FBA            MOV     DPTR,#07FBAH
006D E4                CLR     A
006E 93                MOVC    A,@A+DPTR
006F 20E403            JB      ACC.4,$ + 6H
0072 020000      R     LJMP    ?C0471
0075 90FF76            MOV     DPTR,#sata+076H
0078 E0                MOVX    A,@DPTR
0079 20E703            JB      ACC.7,$ + 6H
007C 020000      R     LJMP    ?C0471
007F 750010      R     MOV     chp_sel,#010H
0082 E4                CLR     A
0083 90FF7F            MOV     DPTR,#sata+07FH
0086 F0                MOVX    @DPTR,A
0087 90FF57            MOV     DPTR,#sata+057H
008A 7410              MOV     A,#010H
008C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 537
                                           ; SOURCE LINE # 538
008D         handle:
                                           ; SOURCE LINE # 539
C51 COMPILER V9.50a   SHARK                                                                07/26/2013 11:07:39 PAGE 101 

008D 120000      R     LCALL   reset_engine
                                           ; SOURCE LINE # 540
0090 8500D7      R     MOV     SFR_CHP_en,chp_sel
                                           ; SOURCE LINE # 541
                                           ; SOURCE LINE # 542
0093 120000      R     LCALL   L?0904
                                           ; SOURCE LINE # 543
0096 E4                CLR     A
0097 F5FA              MOV     SFR_dma_base+01H,A
0099 F5F9              MOV     SFR_dma_base,A
                                           ; SOURCE LINE # 544
009B 75FB01            MOV     SFR_dma_max_num_l,#01H
                                           ; SOURCE LINE # 545
009E F5FC              MOV     SFR_dma_max_num_h,A
                                           ; SOURCE LINE # 546
00A0 90FF7E            MOV     DPTR,#sata+07EH
00A3 7470              MOV     A,#070H
00A5 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 547
00A6 75F8C0            MOV     SFR_dma_cntl,#0C0H
00A9         ?C0463:
                                           ; SOURCE LINE # 548
00A9 30F8FD            JNB     dma_done,?C0463
00AC         ?C0464:
                                           ; SOURCE LINE # 549
00AC 120000      R     LCALL   wait_chp_ready
                                           ; SOURCE LINE # 550
00AF 75F818            MOV     SFR_dma_cntl,#018H
                                           ; SOURCE LINE # 552
00B2 75F410            MOV     SFR_ext_sram_cntl,#010H
                                           ; SOURCE LINE # 553
00B5 E4                CLR     A
00B6 F5F2              MOV     SFR_ext_sram_addr+01H,A
00B8 F5F1              MOV     SFR_ext_sram_addr,A
                                           ; SOURCE LINE # 554
00BA 85F300      R     MOV     block_infor0,SFR_ext_sram_data
                                           ; SOURCE LINE # 555
00BD 85F300      R     MOV     block_infor1,SFR_ext_sram_data
                                           ; SOURCE LINE # 556
00C0 85F300      R     MOV     block_infor2,SFR_ext_sram_data
                                           ; SOURCE LINE # 557
00C3 85F300      R     MOV     block_infor3,SFR_ext_sram_data
                                           ; SOURCE LINE # 558
00C6 85F300      R     MOV     block_infor4,SFR_ext_sram_data
                                           ; SOURCE LINE # 559
00C9 85F300      R     MOV     block_infor5,SFR_ext_sram_data
                                           ; SOURCE LINE # 560
00CC 85F300      R     MOV     block_infor6,SFR_ext_sram_data
                                           ; SOURCE LINE # 562
00CF 907FBB            MOV     DPTR,#07FBBH
00D2 93                MOVC    A,@A+DPTR
00D3 90FF7F            MOV     DPTR,#sata+07FH
00D6 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 563
00D7 907FBC            MOV     DPTR,#07FBCH
00DA E4                CLR     A
00DB 93                MOVC    A,@A+DPTR
00DC 90FF57            MOV     DPTR,#sata+057H
00DF F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 566
00E0 7B10              MOV     R3,#010H
00E2 7D01              MOV     R5,#01H
C51 COMPILER V9.50a   SHARK                                                                07/26/2013 11:07:39 PAGE 102 

00E4 7F20              MOV     R7,#020H
00E6 120000      R     LCALL   _chp_burst
                                           ; SOURCE LINE # 567
00E9 E4                CLR     A
00EA F5F2              MOV     SFR_ext_sram_addr+01H,A
00EC F5F1              MOV     SFR_ext_sram_addr,A
                                           ; SOURCE LINE # 568
00EE 75F410            MOV     SFR_ext_sram_cntl,#010H
                                           ; SOURCE LINE # 569
00F1 7800        R     MOV     R0,#LOW g_smart_block_cnt_h
00F3 A6F3              MOV     @R0,SFR_ext_sram_data
                                           ; SOURCE LINE # 570
00F5 08                INC     R0
00F6 A6F3              MOV     @R0,SFR_ext_sram_data
                                           ; SOURCE LINE # 571
00F8 F5F4              MOV     SFR_ext_sram_cntl,A
                                           ; SOURCE LINE # 574
00FA E6                MOV     A,@R0
00FB B4FF05            CJNE    A,#0FFH,?C0465
                                           ; SOURCE LINE # 575
                                           ; SOURCE LINE # 576
00FE E4                CLR     A
00FF 18                DEC     R0
0100 F6                MOV     @R0,A
                                           ; SOURCE LINE # 577
0101 08                INC     R0
0102 F6                MOV     @R0,A
                                           ; SOURCE LINE # 578
0103         ?C0465:
                                           ; SOURCE LINE # 580
0103 7800        R     MOV     R0,#LOW g_smart_block_cnt_l
0105 06                INC     @R0
                                           ; SOURCE LINE # 581
0106 E6                MOV     A,@R0
0107 B44005            CJNE    A,#040H,?C0466
                                           ; SOURCE LINE # 582
                                           ; SOURCE LINE # 583
010A 18                DEC     R0
010B 06                INC     @R0
                                           ; SOURCE LINE # 584
010C E4                CLR     A
010D 08                INC     R0
010E F6                MOV     @R0,A
                                           ; SOURCE LINE # 585
010F         ?C0466:
                                           ; SOURCE LINE # 586
010F 7800        R     MOV     R0,#LOW g_smart_block_cnt_h
0111 E6                MOV     A,@R0
0112 B43002            CJNE    A,#030H,?C0467
0115 E4                CLR     A
0116 F6                MOV     @R0,A
0117         ?C0467:
                                           ; SOURCE LINE # 589
0117 E4                CLR     A
0118 F5F2              MOV     SFR_ext_sram_addr+01H,A
011A F5F1              MOV     SFR_ext_sram_addr,A
                                           ; SOURCE LINE # 590
011C 75F410            MOV     SFR_ext_sram_cntl,#010H
                                           ; SOURCE LINE # 591
011F 7800        R     MOV     R0,#LOW g_smart_block_cnt_h
0121 E6                MOV     A,@R0
0122 F5F3              MOV     SFR_ext_sram_data,A
C51 COMPILER V9.50a   SHARK                                                                07/26/2013 11:07:39 PAGE 103 

                                           ; SOURCE LINE # 592
0124 08                INC     R0
0125 E6                MOV     A,@R0
0126 F5F3              MOV     SFR_ext_sram_data,A
                                           ; SOURCE LINE # 593
0128 E4                CLR     A
0129 F5F4              MOV     SFR_ext_sram_cntl,A
                                           ; SOURCE LINE # 594
012B 7B10              MOV     R3,#010H
012D 120000      R     LCALL   L?0899
                                           ; SOURCE LINE # 597
0130 7800        R     MOV     R0,#LOW g_smart_block_cnt_h
0132 E6                MOV     A,@R0
0133 2410              ADD     A,#010H
0135 FB                MOV     R3,A
0136 7D01              MOV     R5,#01H
0138 7F20              MOV     R7,#020H
013A 120000      R     LCALL   _chp_burst
                                           ; SOURCE LINE # 599
013D 7800        R     MOV     R0,#LOW g_smart_block_cnt_l
013F E6                MOV     A,@R0
0140 75F008            MOV     B,#08H
0143 A4                MUL     AB
0144 85F0F2            MOV     SFR_ext_sram_addr+01H,B
0147 F5F1              MOV     SFR_ext_sram_addr,A
                                           ; SOURCE LINE # 600
0149 75F410            MOV     SFR_ext_sram_cntl,#010H
                                           ; SOURCE LINE # 601
014C 8500F3      R     MOV     SFR_ext_sram_data,chp_sel
                                           ; SOURCE LINE # 602
014F 8500F3      R     MOV     SFR_ext_sram_data,block_infor0
                                           ; SOURCE LINE # 603
0152 8500F3      R     MOV     SFR_ext_sram_data,block_infor1
                                           ; SOURCE LINE # 604
0155 8500F3      R     MOV     SFR_ext_sram_data,block_infor2
                                           ; SOURCE LINE # 605
0158 8500F3      R     MOV     SFR_ext_sram_data,block_infor3
                                           ; SOURCE LINE # 606
015B 8500F3      R     MOV     SFR_ext_sram_data,block_infor4
                                           ; SOURCE LINE # 607
015E 8500F3      R     MOV     SFR_ext_sram_data,block_infor5
                                           ; SOURCE LINE # 608
0161 8500F3      R     MOV     SFR_ext_sram_data,block_infor6
                                           ; SOURCE LINE # 609
0164 E4                CLR     A
0165 F5F4              MOV     SFR_ext_sram_cntl,A
                                           ; SOURCE LINE # 610
0167 18                DEC     R0
0168 E6                MOV     A,@R0
0169 2410              ADD     A,#010H
016B 120000      R     LCALL   L?0898
                                           ; SOURCE LINE # 611
016E 7D01              MOV     R5,#01H
0170 7F4F              MOV     R7,#04FH
0172 120000      R     LCALL   _updata_smart
                                           ; SOURCE LINE # 612
0175 E500        R     MOV     A,block_infor6
0177 B48007            CJNE    A,#080H,?C0468
                                           ; SOURCE LINE # 613
                                           ; SOURCE LINE # 614
017A 7D01              MOV     R5,#01H
017C 7F43              MOV     R7,#043H
C51 COMPILER V9.50a   SHARK                                                                07/26/2013 11:07:39 PAGE 104 

017E 120000      R     LCALL   _updata_smart
                                           ; SOURCE LINE # 615
0181         ?C0468:
                                           ; SOURCE LINE # 616
0181 E500        R     MOV     A,block_infor6
0183 B4040E            CJNE    A,#04H,?C0469
                                           ; SOURCE LINE # 617
                                           ; SOURCE LINE # 618
0186 7D01              MOV     R5,#01H
0188 7FA3              MOV     R7,#0A3H
018A 120000      R     LCALL   _updata_smart
                                           ; SOURCE LINE # 619
018D 7D01              MOV     R5,#01H
018F 7F4F              MOV     R7,#04FH
0191 120000      R     LCALL   _updata_smart_n
                                           ; SOURCE LINE # 620
0194         ?C0469:
                                           ; SOURCE LINE # 621
0194 E500        R     MOV     A,block_infor6
0196 B41007            CJNE    A,#010H,?C0470
                                           ; SOURCE LINE # 622
                                           ; SOURCE LINE # 623
0199 7D01              MOV     R5,#01H
019B 7F4F              MOV     R7,#04FH
019D 120000      R     LCALL   _updata_smart_n
                                           ; SOURCE LINE # 624
01A0         ?C0470:
                                           ; SOURCE LINE # 625
01A0 120000      R     LCALL   reset_engine
                                           ; SOURCE LINE # 626
01A3 907FBB            MOV     DPTR,#07FBBH
01A6 E4                CLR     A
01A7 93                MOVC    A,@A+DPTR
01A8 90FF7F            MOV     DPTR,#sata+07FH
01AB F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 627
01AC 907FBC            MOV     DPTR,#07FBCH
01AF E4                CLR     A
01B0 93                MOVC    A,@A+DPTR
01B1 90FF57            MOV     DPTR,#sata+057H
01B4 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 628
01B5 E4                CLR     A
01B6 F5D9              MOV     SFR_watch_dog_high,A
                                           ; SOURCE LINE # 629
01B8 020000      R     LJMP    check_loop
                                           ; SOURCE LINE # 630
01BB         ?C0471:
01BB 22                RET     
             ; FUNCTION smart_block_handle (END)

             ; FUNCTION smart_card_update (BEGIN)
                                           ; SOURCE LINE # 633
                                           ; SOURCE LINE # 634
                                           ; SOURCE LINE # 645
0000 120000      R     LCALL   reset_engine
                                           ; SOURCE LINE # 648
0003 75D701            MOV     SFR_CHP_en,#01H
                                           ; SOURCE LINE # 649
0006 90FF7F            MOV     DPTR,#sata+07FH
0009 7410              MOV     A,#010H
000B F0                MOVX    @DPTR,A
C51 COMPILER V9.50a   SHARK                                                                07/26/2013 11:07:39 PAGE 105 

                                           ; SOURCE LINE # 650
000C E4                CLR     A
000D 90FF57            MOV     DPTR,#sata+057H
0010 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 652
0011 F5FA              MOV     SFR_dma_base+01H,A
0013 F5F9              MOV     SFR_dma_base,A
                                           ; SOURCE LINE # 653
0015 75FB04            MOV     SFR_dma_max_num_l,#04H
                                           ; SOURCE LINE # 654
0018 F5FC              MOV     SFR_dma_max_num_h,A
                                           ; SOURCE LINE # 655
001A 90FF7E            MOV     DPTR,#sata+07EH
001D 7461              MOV     A,#061H
001F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 656
0020 75F8C0            MOV     SFR_dma_cntl,#0C0H
0023         ?C0472:
                                           ; SOURCE LINE # 657
0023 30F8FD            JNB     dma_done,?C0472
0026         ?C0473:
                                           ; SOURCE LINE # 658
0026 75F818            MOV     SFR_dma_cntl,#018H
                                           ; SOURCE LINE # 659
0029 120000      R     LCALL   wait_chp_ready
                                           ; SOURCE LINE # 661
002C 75F410            MOV     SFR_ext_sram_cntl,#010H
                                           ; SOURCE LINE # 662
002F E4                CLR     A
0030 F5F2              MOV     SFR_ext_sram_addr+01H,A
0032 F5F1              MOV     SFR_ext_sram_addr,A
                                           ; SOURCE LINE # 663
0034 85F300      R     MOV     card_infor0,SFR_ext_sram_data
                                           ; SOURCE LINE # 664
0037 85F300      R     MOV     card_infor1,SFR_ext_sram_data
                                           ; SOURCE LINE # 665
003A 85F300      R     MOV     card_infor2,SFR_ext_sram_data
                                           ; SOURCE LINE # 666
003D 85F300      R     MOV     card_infor3,SFR_ext_sram_data
                                           ; SOURCE LINE # 667
0040 85F300      R     MOV     card_infor40,SFR_ext_sram_data
                                           ; SOURCE LINE # 668
0043 85F300      R     MOV     card_infor41,SFR_ext_sram_data
                                           ; SOURCE LINE # 669
0046 85F300      R     MOV     card_infor42,SFR_ext_sram_data
                                           ; SOURCE LINE # 670
0049 85F300      R     MOV     card_infor43,SFR_ext_sram_data
                                           ; SOURCE LINE # 671
004C F5F4              MOV     SFR_ext_sram_cntl,A
                                           ; SOURCE LINE # 673
004E 907FBA            MOV     DPTR,#07FBAH
0051 93                MOVC    A,@A+DPTR
0052 F5D7              MOV     SFR_CHP_en,A
                                           ; SOURCE LINE # 674
0054 A3                INC     DPTR
0055 E4                CLR     A
0056 93                MOVC    A,@A+DPTR
0057 90FF7F            MOV     DPTR,#sata+07FH
005A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 675
005B 907FBC            MOV     DPTR,#07FBCH
005E E4                CLR     A
C51 COMPILER V9.50a   SHARK                                                                07/26/2013 11:07:39 PAGE 106 

005F 93                MOVC    A,@A+DPTR
0060 90FF57            MOV     DPTR,#sata+057H
0063 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 678
0064 E4                CLR     A
0065 FB                MOV     R3,A
0066 7D01              MOV     R5,#01H
0068 7F20              MOV     R7,#020H
006A 120000      R     LCALL   _chp_burst
                                           ; SOURCE LINE # 680
006D 75F410            MOV     SFR_ext_sram_cntl,#010H
                                           ; SOURCE LINE # 682
0070 75F200            MOV     SFR_ext_sram_addr+01H,#00H
0073 75F18B            MOV     SFR_ext_sram_addr,#08BH
                                           ; SOURCE LINE # 683
0076 8500F3      R     MOV     SFR_ext_sram_data,card_infor0
                                           ; SOURCE LINE # 685
0079 75F200            MOV     SFR_ext_sram_addr+01H,#00H
007C 75F197            MOV     SFR_ext_sram_addr,#097H
                                           ; SOURCE LINE # 686
007F 8500F3      R     MOV     SFR_ext_sram_data,card_infor1
                                           ; SOURCE LINE # 688
0082 75F200            MOV     SFR_ext_sram_addr+01H,#00H
0085 75F1A3            MOV     SFR_ext_sram_addr,#0A3H
                                           ; SOURCE LINE # 689
0088 8500F3      R     MOV     SFR_ext_sram_data,card_infor2
                                           ; SOURCE LINE # 691
008B 75F200            MOV     SFR_ext_sram_addr+01H,#00H
008E 75F1AF            MOV     SFR_ext_sram_addr,#0AFH
                                           ; SOURCE LINE # 692
0091 8500F3      R     MOV     SFR_ext_sram_data,card_infor3
                                           ; SOURCE LINE # 695
0094 75F200            MOV     SFR_ext_sram_addr+01H,#00H
0097 75F1BB            MOV     SFR_ext_sram_addr,#0BBH
                                           ; SOURCE LINE # 696
009A 8500F3      R     MOV     SFR_ext_sram_data,card_infor40
                                           ; SOURCE LINE # 697
009D 8500F3      R     MOV     SFR_ext_sram_data,card_infor41
                                           ; SOURCE LINE # 698
00A0 8500F3      R     MOV     SFR_ext_sram_data,card_infor42
                                           ; SOURCE LINE # 699
00A3 8500F3      R     MOV     SFR_ext_sram_data,card_infor43
                                           ; SOURCE LINE # 700
00A6 E4                CLR     A
00A7 F5F4              MOV     SFR_ext_sram_cntl,A
                                           ; SOURCE LINE # 702
;---- Variable 'tmp' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 703
                                           ; SOURCE LINE # 704
                                           ; SOURCE LINE # 705
00A9 120000      R     LCALL   L?0896
                                           ; SOURCE LINE # 707
00AC 120000      R     LCALL   reset_engine
                                           ; SOURCE LINE # 710
00AF         ?C0474:
00AF 22                RET     
             ; FUNCTION smart_card_update (END)

             ; FUNCTION smart_erase_handle (BEGIN)
                                           ; SOURCE LINE # 712
                                           ; SOURCE LINE # 713
                                           ; SOURCE LINE # 723
C51 COMPILER V9.50a   SHARK                                                                07/26/2013 11:07:39 PAGE 107 

0000 750001      R     MOV     chp_sel,#01H
                                           ; SOURCE LINE # 724
0003 120000      R     LCALL   reset_engine
                                           ; SOURCE LINE # 725
0006         handle:
                                           ; SOURCE LINE # 726
0006 8500D7      R     MOV     SFR_CHP_en,chp_sel
                                           ; SOURCE LINE # 727
0009 E500        R     MOV     A,chp_sel
000B B4010B            CJNE    A,#01H,?C0476
000E 90FF7F            MOV     DPTR,#sata+07FH
0011 7410              MOV     A,#010H
0013 F0                MOVX    @DPTR,A
0014 E4                CLR     A
0015 90FF57            MOV     DPTR,#sata+057H
0018 F0                MOVX    @DPTR,A
0019         ?C0476:
                                           ; SOURCE LINE # 728
0019 E500        R     MOV     A,chp_sel
001B B4020B            CJNE    A,#02H,?C0477
001E 90FF7F            MOV     DPTR,#sata+07FH
0021 7420              MOV     A,#020H
0023 F0                MOVX    @DPTR,A
0024 E4                CLR     A
0025 90FF57            MOV     DPTR,#sata+057H
0028 F0                MOVX    @DPTR,A
0029         ?C0477:
                                           ; SOURCE LINE # 729
0029 E500        R     MOV     A,chp_sel
002B B4040B            CJNE    A,#04H,?C0478
002E 90FF7F            MOV     DPTR,#sata+07FH
0031 7440              MOV     A,#040H
0033 F0                MOVX    @DPTR,A
0034 E4                CLR     A
0035 90FF57            MOV     DPTR,#sata+057H
0038 F0                MOVX    @DPTR,A
0039         ?C0478:
                                           ; SOURCE LINE # 730
0039 E500        R     MOV     A,chp_sel
003B B4080B            CJNE    A,#08H,?C0479
003E 90FF7F            MOV     DPTR,#sata+07FH
0041 7480              MOV     A,#080H
0043 F0                MOVX    @DPTR,A
0044 E4                CLR     A
0045 90FF57            MOV     DPTR,#sata+057H
0048 F0                MOVX    @DPTR,A
0049         ?C0479:
                                           ; SOURCE LINE # 731
0049 E500        R     MOV     A,chp_sel
004B B4100B            CJNE    A,#010H,?C0480
004E E4                CLR     A
004F 90FF7F            MOV     DPTR,#sata+07FH
0052 F0                MOVX    @DPTR,A
0053 90FF57            MOV     DPTR,#sata+057H
0056 7410              MOV     A,#010H
0058 F0                MOVX    @DPTR,A
0059         ?C0480:
                                           ; SOURCE LINE # 732
                                           ; SOURCE LINE # 733
0059 120000      R     LCALL   L?0904
                                           ; SOURCE LINE # 734
005C E4                CLR     A
C51 COMPILER V9.50a   SHARK                                                                07/26/2013 11:07:39 PAGE 108 

005D F5FA              MOV     SFR_dma_base+01H,A
005F F5F9              MOV     SFR_dma_base,A
                                           ; SOURCE LINE # 735
0061 75FB04            MOV     SFR_dma_max_num_l,#04H
                                           ; SOURCE LINE # 736
0064 F5FC              MOV     SFR_dma_max_num_h,A
                                           ; SOURCE LINE # 737
0066 90FF7E            MOV     DPTR,#sata+07EH
0069 7461              MOV     A,#061H
006B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 738
006C 75F8C0            MOV     SFR_dma_cntl,#0C0H
006F         ?C0481:
                                           ; SOURCE LINE # 739
006F 30F8FD            JNB     dma_done,?C0481
0072         ?C0482:
                                           ; SOURCE LINE # 740
0072 75F818            MOV     SFR_dma_cntl,#018H
                                           ; SOURCE LINE # 741
0075 120000      R     LCALL   wait_chp_ready
                                           ; SOURCE LINE # 743
0078 75F410            MOV     SFR_ext_sram_cntl,#010H
                                           ; SOURCE LINE # 744
007B 75F201            MOV     SFR_ext_sram_addr+01H,#01H
007E 75F160            MOV     SFR_ext_sram_addr,#060H
                                           ; SOURCE LINE # 745
0081 85F300      R     MOV     erase_infor0,SFR_ext_sram_data
                                           ; SOURCE LINE # 746
0084 85F300      R     MOV     erase_infor1,SFR_ext_sram_data
                                           ; SOURCE LINE # 747
0087 85F300      R     MOV     erase_infor2,SFR_ext_sram_data
                                           ; SOURCE LINE # 748
008A 85F300      R     MOV     erase_infor3,SFR_ext_sram_data
                                           ; SOURCE LINE # 750
008D 907FBB            MOV     DPTR,#07FBBH
0090 E4                CLR     A
0091 93                MOVC    A,@A+DPTR
0092 90FF7F            MOV     DPTR,#sata+07FH
0095 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 751
0096 907FBC            MOV     DPTR,#07FBCH
0099 E4                CLR     A
009A 93                MOVC    A,@A+DPTR
009B 90FF57            MOV     DPTR,#sata+057H
009E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 754
009F 75F410            MOV     SFR_ext_sram_cntl,#010H
                                           ; SOURCE LINE # 755
00A2 75F200            MOV     SFR_ext_sram_addr+01H,#00H
00A5 75F110            MOV     SFR_ext_sram_addr,#010H
                                           ; SOURCE LINE # 757
00A8 85F300      R     MOV     erase+03H,SFR_ext_sram_data
                                           ; SOURCE LINE # 758
00AB 85F300      R     MOV     erase+02H,SFR_ext_sram_data
                                           ; SOURCE LINE # 759
00AE 85F300      R     MOV     erase+01H,SFR_ext_sram_data
                                           ; SOURCE LINE # 760
00B1 85F300      R     MOV     erase,SFR_ext_sram_data
                                           ; SOURCE LINE # 766
00B4 907FB3            MOV     DPTR,#07FB3H
00B7 E4                CLR     A
00B8 93                MOVC    A,@A+DPTR
C51 COMPILER V9.50a   SHARK                                                                07/26/2013 11:07:39 PAGE 109 

00B9 F500        R     MOV     pe+03H,A
                                           ; SOURCE LINE # 767
00BB A3                INC     DPTR
00BC E4                CLR     A
00BD 93                MOVC    A,@A+DPTR
00BE F500        R     MOV     pe+02H,A
                                           ; SOURCE LINE # 768
00C0 A3                INC     DPTR
00C1 E4                CLR     A
00C2 93                MOVC    A,@A+DPTR
00C3 F500        R     MOV     pe+01H,A
                                           ; SOURCE LINE # 769
00C5 A3                INC     DPTR
00C6 E4                CLR     A
00C7 93                MOVC    A,@A+DPTR
00C8 F500        R     MOV     pe,A
                                           ; SOURCE LINE # 774
00CA E4                CLR     A
00CB FF                MOV     R7,A
00CC FE                MOV     R6,A
00CD FD                MOV     R5,A
00CE FC                MOV     R4,A
00CF AB00        R     MOV     R3,pe+03H
00D1 AA00        R     MOV     R2,pe+02H
00D3 A900        R     MOV     R1,pe+01H
00D5 A800        R     MOV     R0,pe
00D7 C3                CLR     C
00D8 120000      E     LCALL   ?C?ULCMP
00DB 605A              JZ      ?C0483
                                           ; SOURCE LINE # 775
                                           ; SOURCE LINE # 776
00DD E4                CLR     A
00DE F500        R     MOV     cnt,A
00E0         ?C0484:
                                           ; SOURCE LINE # 777
00E0 AF00        R     MOV     R7,pe+03H
00E2 AE00        R     MOV     R6,pe+02H
00E4 AD00        R     MOV     R5,pe+01H
00E6 AC00        R     MOV     R4,pe
00E8 AB00        R     MOV     R3,erase+03H
00EA AA00        R     MOV     R2,erase+02H
00EC A900        R     MOV     R1,erase+01H
00EE A800        R     MOV     R0,erase
00F0 C3                CLR     C
00F1 120000      E     LCALL   ?C?ULCMP
00F4 401C              JC      ?C0485
                                           ; SOURCE LINE # 778
                                           ; SOURCE LINE # 779
00F6 0500        R     INC     cnt
                                           ; SOURCE LINE # 780
00F8 E500        R     MOV     A,erase+03H
00FA 9500        R     SUBB    A,pe+03H
00FC F500        R     MOV     erase+03H,A
00FE E500        R     MOV     A,erase+02H
0100 9500        R     SUBB    A,pe+02H
0102 F500        R     MOV     erase+02H,A
0104 E500        R     MOV     A,erase+01H
0106 9500        R     SUBB    A,pe+01H
0108 F500        R     MOV     erase+01H,A
010A E500        R     MOV     A,erase
010C 9500        R     SUBB    A,pe
010E F500        R     MOV     erase,A
C51 COMPILER V9.50a   SHARK                                                                07/26/2013 11:07:39 PAGE 110 

                                           ; SOURCE LINE # 781
0110 80CE              SJMP    ?C0484
0112         ?C0485:
                                           ; SOURCE LINE # 783
0112 E4                CLR     A
0113 FB                MOV     R3,A
0114 7D01              MOV     R5,#01H
0116 7F20              MOV     R7,#020H
0118 120000      R     LCALL   _chp_burst
                                           ; SOURCE LINE # 784
011B E4                CLR     A
011C F5F4              MOV     SFR_ext_sram_cntl,A
                                           ; SOURCE LINE # 785
011E F5F2              MOV     SFR_ext_sram_addr+01H,A
0120 75F165            MOV     SFR_ext_sram_addr,#065H
                                           ; SOURCE LINE # 786
0123 C3                CLR     C
0124 7464              MOV     A,#064H
0126 9500        R     SUBB    A,cnt
0128 F5F3              MOV     SFR_ext_sram_data,A
                                           ; SOURCE LINE # 787
012A E5F3              MOV     A,SFR_ext_sram_data
012C D3                SETB    C
012D 9464              SUBB    A,#064H
012F 4003              JC      ?C0486
0131 E4                CLR     A
0132 F5F3              MOV     SFR_ext_sram_data,A
0134         ?C0486:
                                           ; SOURCE LINE # 788
0134 120000      R     LCALL   L?0897
                                           ; SOURCE LINE # 789
0137         ?C0483:
                                           ; SOURCE LINE # 792
0137 E4                CLR     A
0138 FB                MOV     R3,A
0139 7D01              MOV     R5,#01H
013B 7F20              MOV     R7,#020H
013D 120000      R     LCALL   _chp_burst
                                           ; SOURCE LINE # 794
0140 75F410            MOV     SFR_ext_sram_cntl,#010H
                                           ; SOURCE LINE # 795
0143 75F200            MOV     SFR_ext_sram_addr+01H,#00H
0146 75F18B            MOV     SFR_ext_sram_addr,#08BH
                                           ; SOURCE LINE # 796
0149 E500        R     MOV     A,chp_sel
014B 6401              XRL     A,#01H
014D 604F              JZ      ?C0487
                                           ; SOURCE LINE # 797
                                           ; SOURCE LINE # 799
014F 850000      R     MOV     tmp,erase_infor0
                                           ; SOURCE LINE # 800
0152 E500        R     MOV     A,tmp
0154 25F3              ADD     A,SFR_ext_sram_data
0156 F500        R     MOV     erase_infor0,A
                                           ; SOURCE LINE # 801
0158 E500        R     MOV     A,tmp
015A D3                SETB    C
015B 9500        R     SUBB    A,erase_infor0
015D 4002              JC      ?C0488
015F 0500        R     INC     erase_infor1
0161         ?C0488:
                                           ; SOURCE LINE # 803
C51 COMPILER V9.50a   SHARK                                                                07/26/2013 11:07:39 PAGE 111 

0161 850000      R     MOV     tmp,erase_infor1
                                           ; SOURCE LINE # 804
0164 E500        R     MOV     A,tmp
0166 25F3              ADD     A,SFR_ext_sram_data
0168 F500        R     MOV     erase_infor1,A
                                           ; SOURCE LINE # 805
016A E500        R     MOV     A,tmp
016C D3                SETB    C
016D 9500        R     SUBB    A,erase_infor1
016F 4002              JC      ?C0489
0171 0500        R     INC     erase_infor2
0173         ?C0489:
                                           ; SOURCE LINE # 807
0173 850000      R     MOV     tmp,erase_infor2
                                           ; SOURCE LINE # 808
0176 E500        R     MOV     A,tmp
0178 25F3              ADD     A,SFR_ext_sram_data
017A F500        R     MOV     erase_infor2,A
                                           ; SOURCE LINE # 809
017C E500        R     MOV     A,tmp
017E D3                SETB    C
017F 9500        R     SUBB    A,erase_infor2
0181 4002              JC      ?C0490
0183 0500        R     INC     erase_infor3
0185         ?C0490:
                                           ; SOURCE LINE # 811
0185 850000      R     MOV     tmp,erase_infor3
                                           ; SOURCE LINE # 812
0188 E500        R     MOV     A,tmp
018A 25F3              ADD     A,SFR_ext_sram_data
018C F500        R     MOV     erase_infor3,A
                                           ; SOURCE LINE # 813
018E E500        R     MOV     A,tmp
0190 D3                SETB    C
0191 9500        R     SUBB    A,erase_infor3
0193 4003              JC      ?C0491
0195 7500FF      R     MOV     erase_infor3,#0FFH
0198         ?C0491:
                                           ; SOURCE LINE # 815
0198 75F200            MOV     SFR_ext_sram_addr+01H,#00H
019B 75F18B            MOV     SFR_ext_sram_addr,#08BH
                                           ; SOURCE LINE # 816
019E         ?C0487:
                                           ; SOURCE LINE # 817
019E 8500F3      R     MOV     SFR_ext_sram_data,erase_infor0
                                           ; SOURCE LINE # 818
01A1 8500F3      R     MOV     SFR_ext_sram_data,erase_infor1
                                           ; SOURCE LINE # 819
01A4 8500F3      R     MOV     SFR_ext_sram_data,erase_infor2
                                           ; SOURCE LINE # 820
01A7 8500F3      R     MOV     SFR_ext_sram_data,erase_infor3
                                           ; SOURCE LINE # 821
01AA E4                CLR     A
01AB F5F4              MOV     SFR_ext_sram_cntl,A
                                           ; SOURCE LINE # 822
01AD 120000      R     LCALL   gen_check_sum
01B0 8F00        R     MOV     tmp,R7
                                           ; SOURCE LINE # 823
01B2 75F201            MOV     SFR_ext_sram_addr+01H,#01H
01B5 75F1FF            MOV     SFR_ext_sram_addr,#0FFH
                                           ; SOURCE LINE # 824
01B8 8500F3      R     MOV     SFR_ext_sram_data,tmp
C51 COMPILER V9.50a   SHARK                                                                07/26/2013 11:07:39 PAGE 112 

                                           ; SOURCE LINE # 825
01BB 120000      R     LCALL   L?0897
                                           ; SOURCE LINE # 826
01BE E500        R     MOV     A,chp_sel
01C0 25E0              ADD     A,ACC
01C2 F500        R     MOV     chp_sel,A
                                           ; SOURCE LINE # 827
01C4 907FBA            MOV     DPTR,#07FBAH
01C7 E4                CLR     A
01C8 93                MOVC    A,@A+DPTR
01C9 5500        R     ANL     A,chp_sel
01CB 6003              JZ      $ + 5H
01CD 020000      R     LJMP    handle
                                           ; SOURCE LINE # 829
01D0         end_handle:
                                           ; SOURCE LINE # 830
01D0 907FBB            MOV     DPTR,#07FBBH
01D3 E4                CLR     A
01D4 93                MOVC    A,@A+DPTR
01D5 90FF7F            MOV     DPTR,#sata+07FH
01D8 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 831
01D9 907FBC            MOV     DPTR,#07FBCH
01DC E4                CLR     A
01DD 93                MOVC    A,@A+DPTR
01DE 90FF57            MOV     DPTR,#sata+057H
01E1 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 832
01E2 120000      R     LCALL   reset_engine
                                           ; SOURCE LINE # 834
01E5         ?C0494:
01E5 22                RET     
             ; FUNCTION smart_erase_handle (END)

             ; FUNCTION smart_card_crc (BEGIN)
                                           ; SOURCE LINE # 838
                                           ; SOURCE LINE # 839
                                           ; SOURCE LINE # 846
0000         check_loop:
                                           ; SOURCE LINE # 847
0000 907FBA            MOV     DPTR,#07FBAH
0003 E4                CLR     A
0004 93                MOVC    A,@A+DPTR
0005 30E011            JNB     ACC.0,?C0496
0008 90FF5C            MOV     DPTR,#sata+05CH
000B E0                MOVX    A,@DPTR
000C B4FF0A            CJNE    A,#0FFH,?C0496
000F 750001      R     MOV     chp_sel,#01H
0012 90FF7F            MOV     DPTR,#sata+07FH
0015 7410              MOV     A,#010H
0017 8049              SJMP    ?C0853
0019         ?C0496:
                                           ; SOURCE LINE # 848
0019 907FBA            MOV     DPTR,#07FBAH
001C E4                CLR     A
001D 93                MOVC    A,@A+DPTR
001E 30E111            JNB     ACC.1,?C0499
0021 90FF5D            MOV     DPTR,#sata+05DH
0024 E0                MOVX    A,@DPTR
0025 B4FF0A            CJNE    A,#0FFH,?C0499
0028 750002      R     MOV     chp_sel,#02H
002B 90FF7F            MOV     DPTR,#sata+07FH
C51 COMPILER V9.50a   SHARK                                                                07/26/2013 11:07:39 PAGE 113 

002E 7420              MOV     A,#020H
0030         ?C0851:
0030 8030              SJMP    ?C0853
0032         ?C0499:
                                           ; SOURCE LINE # 849
0032 907FBA            MOV     DPTR,#07FBAH
0035 E4                CLR     A
0036 93                MOVC    A,@A+DPTR
0037 30E211            JNB     ACC.2,?C0501
003A 90FF5E            MOV     DPTR,#sata+05EH
003D E0                MOVX    A,@DPTR
003E B4FF0A            CJNE    A,#0FFH,?C0501
0041 750004      R     MOV     chp_sel,#04H
0044 90FF7F            MOV     DPTR,#sata+07FH
0047 7440              MOV     A,#040H
0049         ?C0852:
0049 8017              SJMP    ?C0853
004B         ?C0501:
                                           ; SOURCE LINE # 850
004B 907FBA            MOV     DPTR,#07FBAH
004E E4                CLR     A
004F 93                MOVC    A,@A+DPTR
0050 30E317            JNB     ACC.3,?C0503
0053 90FF5F            MOV     DPTR,#sata+05FH
0056 E0                MOVX    A,@DPTR
0057 B4FF10            CJNE    A,#0FFH,?C0503
005A 750008      R     MOV     chp_sel,#08H
005D 90FF7F            MOV     DPTR,#sata+07FH
0060 7480              MOV     A,#080H
0062         ?C0853:
0062 F0                MOVX    @DPTR,A
0063 E4                CLR     A
0064 90FF57            MOV     DPTR,#sata+057H
0067 F0                MOVX    @DPTR,A
0068 8022              SJMP    handle
006A         ?C0503:
                                           ; SOURCE LINE # 851
006A 907FBA            MOV     DPTR,#07FBAH
006D E4                CLR     A
006E 93                MOVC    A,@A+DPTR
006F 20E403            JB      ACC.4,$ + 6H
0072 020000      R     LJMP    end_loop
0075 90FF76            MOV     DPTR,#sata+076H
0078 E0                MOVX    A,@DPTR
0079 F4                CPL     A
007A 6003              JZ      $ + 5H
007C 020000      R     LJMP    end_loop
007F 750010      R     MOV     chp_sel,#010H
0082 90FF7F            MOV     DPTR,#sata+07FH
0085 F0                MOVX    @DPTR,A
0086 90FF57            MOV     DPTR,#sata+057H
0089 7410              MOV     A,#010H
008B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 852
                                           ; SOURCE LINE # 853
008C         handle:
                                           ; SOURCE LINE # 854
008C 120000      R     LCALL   reset_engine
                                           ; SOURCE LINE # 855
008F 8500D7      R     MOV     SFR_CHP_en,chp_sel
                                           ; SOURCE LINE # 856
                                           ; SOURCE LINE # 857
C51 COMPILER V9.50a   SHARK                                                                07/26/2013 11:07:39 PAGE 114 

0092 120000      R     LCALL   L?0904
                                           ; SOURCE LINE # 858
0095 E4                CLR     A
0096 F5FA              MOV     SFR_dma_base+01H,A
0098 F5F9              MOV     SFR_dma_base,A
                                           ; SOURCE LINE # 859
009A 75FB01            MOV     SFR_dma_max_num_l,#01H
                                           ; SOURCE LINE # 860
009D F5FC              MOV     SFR_dma_max_num_h,A
                                           ; SOURCE LINE # 861
009F 90FF7E            MOV     DPTR,#sata+07EH
00A2 7465              MOV     A,#065H
00A4 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 862
00A5 75F8C0            MOV     SFR_dma_cntl,#0C0H
00A8         ?C0508:
                                           ; SOURCE LINE # 863
00A8 30F8FD            JNB     dma_done,?C0508
00AB         ?C0509:
                                           ; SOURCE LINE # 864
00AB 120000      R     LCALL   wait_chp_ready
                                           ; SOURCE LINE # 865
00AE 75F818            MOV     SFR_dma_cntl,#018H
                                           ; SOURCE LINE # 867
00B1 75F410            MOV     SFR_ext_sram_cntl,#010H
                                           ; SOURCE LINE # 868
00B4 E4                CLR     A
00B5 F5F2              MOV     SFR_ext_sram_addr+01H,A
00B7 F5F1              MOV     SFR_ext_sram_addr,A
                                           ; SOURCE LINE # 869
00B9 7800        R     MOV     R0,#LOW block_infor0
00BB A6F3              MOV     @R0,SFR_ext_sram_data
                                           ; SOURCE LINE # 870
00BD 08                INC     R0
00BE A6F3              MOV     @R0,SFR_ext_sram_data
                                           ; SOURCE LINE # 871
00C0 08                INC     R0
00C1 A6F3              MOV     @R0,SFR_ext_sram_data
                                           ; SOURCE LINE # 872
00C3 08                INC     R0
00C4 A6F3              MOV     @R0,SFR_ext_sram_data
                                           ; SOURCE LINE # 875
00C6 907FBB            MOV     DPTR,#07FBBH
00C9 93                MOVC    A,@A+DPTR
00CA 90FF7F            MOV     DPTR,#sata+07FH
00CD F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 876
00CE 907FBC            MOV     DPTR,#07FBCH
00D1 E4                CLR     A
00D2 93                MOVC    A,@A+DPTR
00D3 90FF57            MOV     DPTR,#sata+057H
00D6 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 877
00D7 E4                CLR     A
00D8 FB                MOV     R3,A
00D9 7D01              MOV     R5,#01H
00DB 7F20              MOV     R7,#020H
00DD 120000      R     LCALL   _chp_burst
                                           ; SOURCE LINE # 879
00E0 75F410            MOV     SFR_ext_sram_cntl,#010H
                                           ; SOURCE LINE # 880
00E3 E500        R     MOV     A,chp_sel
C51 COMPILER V9.50a   SHARK                                                                07/26/2013 11:07:39 PAGE 115 

00E5 24FE              ADD     A,#0FEH
00E7 6018              JZ      ?C0512
00E9 24FE              ADD     A,#0FEH
00EB 601C              JZ      ?C0513
00ED 24FC              ADD     A,#0FCH
00EF 6020              JZ      ?C0514
00F1 24F8              ADD     A,#0F8H
00F3 6024              JZ      ?C0515
00F5 240F              ADD     A,#0FH
00F7 7054              JNZ     end_loop
                                           ; SOURCE LINE # 881
                                           ; SOURCE LINE # 882
00F9         ?C0511:
                                           ; SOURCE LINE # 883
                                           ; SOURCE LINE # 884
00F9 75F200            MOV     SFR_ext_sram_addr+01H,#00H
00FC 75F1C7            MOV     SFR_ext_sram_addr,#0C7H
                                           ; SOURCE LINE # 885
00FF 801E              SJMP    ?C0510
                                           ; SOURCE LINE # 886
                                           ; SOURCE LINE # 887
0101         ?C0512:
                                           ; SOURCE LINE # 888
                                           ; SOURCE LINE # 889
0101 75F200            MOV     SFR_ext_sram_addr+01H,#00H
0104 75F1D3            MOV     SFR_ext_sram_addr,#0D3H
                                           ; SOURCE LINE # 890
0107 8016              SJMP    ?C0510
                                           ; SOURCE LINE # 891
                                           ; SOURCE LINE # 892
0109         ?C0513:
                                           ; SOURCE LINE # 893
                                           ; SOURCE LINE # 894
0109 75F200            MOV     SFR_ext_sram_addr+01H,#00H
010C 75F1DF            MOV     SFR_ext_sram_addr,#0DFH
                                           ; SOURCE LINE # 895
010F 800E              SJMP    ?C0510
                                           ; SOURCE LINE # 896
                                           ; SOURCE LINE # 897
0111         ?C0514:
                                           ; SOURCE LINE # 898
                                           ; SOURCE LINE # 899
0111 75F200            MOV     SFR_ext_sram_addr+01H,#00H
0114 75F1EB            MOV     SFR_ext_sram_addr,#0EBH
                                           ; SOURCE LINE # 900
0117 8006              SJMP    ?C0510
                                           ; SOURCE LINE # 901
                                           ; SOURCE LINE # 902
0119         ?C0515:
                                           ; SOURCE LINE # 903
                                           ; SOURCE LINE # 904
0119 75F200            MOV     SFR_ext_sram_addr+01H,#00H
011C 75F1F7            MOV     SFR_ext_sram_addr,#0F7H
                                           ; SOURCE LINE # 905
                                           ; SOURCE LINE # 906
                                           ; SOURCE LINE # 907
                                           ; SOURCE LINE # 909
011F         ?C0510:
                                           ; SOURCE LINE # 910
011F 7800        R     MOV     R0,#LOW block_infor0
0121 E6                MOV     A,@R0
0122 F5F3              MOV     SFR_ext_sram_data,A
C51 COMPILER V9.50a   SHARK                                                                07/26/2013 11:07:39 PAGE 116 

                                           ; SOURCE LINE # 911
0124 08                INC     R0
0125 E6                MOV     A,@R0
0126 F5F3              MOV     SFR_ext_sram_data,A
                                           ; SOURCE LINE # 912
0128 08                INC     R0
0129 E6                MOV     A,@R0
012A F5F3              MOV     SFR_ext_sram_data,A
                                           ; SOURCE LINE # 913
012C 08                INC     R0
012D E6                MOV     A,@R0
012E F5F3              MOV     SFR_ext_sram_data,A
                                           ; SOURCE LINE # 914
0130 E4                CLR     A
0131 F5F4              MOV     SFR_ext_sram_cntl,A
                                           ; SOURCE LINE # 915
0133 120000      R     LCALL   gen_check_sum
0136 8F00        R     MOV     tmp,R7
                                           ; SOURCE LINE # 916
0138 75F201            MOV     SFR_ext_sram_addr+01H,#01H
013B 75F1FF            MOV     SFR_ext_sram_addr,#0FFH
                                           ; SOURCE LINE # 917
013E 8500F3      R     MOV     SFR_ext_sram_data,tmp
                                           ; SOURCE LINE # 918
0141 120000      R     LCALL   L?0897
                                           ; SOURCE LINE # 919
0144 120000      R     LCALL   reset_engine
                                           ; SOURCE LINE # 920
0147 E4                CLR     A
0148 F5D9              MOV     SFR_watch_dog_high,A
                                           ; SOURCE LINE # 921
014A 020000      R     LJMP    check_loop
                                           ; SOURCE LINE # 922
014D         end_loop:
                                           ; SOURCE LINE # 923
014D 120000      R     LCALL   reset_engine
                                           ; SOURCE LINE # 925
0150         ?C0517:
0150 22                RET     
             ; FUNCTION smart_card_crc (END)

             ; FUNCTION trim_handler (BEGIN)
                                           ; SOURCE LINE # 3
                                           ; SOURCE LINE # 4
                                           ; SOURCE LINE # 7
0000 120000      R     LCALL   reset_engine
                                           ; SOURCE LINE # 8
0003 E4                CLR     A
0004 7800        R     MOV     R0,#LOW sram_addr
0006 F6                MOV     @R0,A
0007 08                INC     R0
0008 F6                MOV     @R0,A
                                           ; SOURCE LINE # 9
0009 90FF14            MOV     DPTR,#sata+014H
000C E0                MOVX    A,@DPTR
000D 75DF00            MOV     SFR_sata_burst_cnt+01H,#00H
0010 F5DE              MOV     SFR_sata_burst_cnt,A
                                           ; SOURCE LINE # 10
0012 E4                CLR     A
0013 F5E7              MOV     SFR_sata_burst_base+01H,A
0015 F5E6              MOV     SFR_sata_burst_base,A
                                           ; SOURCE LINE # 11
C51 COMPILER V9.50a   SHARK                                                                07/26/2013 11:07:39 PAGE 117 

0017 75E890            MOV     SFR_sata_burst_cntl,#090H
001A         ?C0518:
                                           ; SOURCE LINE # 12
001A 30E8FD            JNB     sata_burst_done,?C0518
001D         ?C0519:
                                           ; SOURCE LINE # 13
001D 30EA03            JNB     sata_burst_abort,?C0520
0020 020000      R     LJMP    ?C0854
0023         ?C0520:
                                           ; SOURCE LINE # 14
0023 75E810            MOV     SFR_sata_burst_cntl,#010H
                                           ; SOURCE LINE # 16
0026 90FF14            MOV     DPTR,#sata+014H
0029 E0                MOVX    A,@DPTR
002A 75F040            MOV     B,#040H
002D A4                MUL     AB
002E 7800        R     MOV     R0,#LOW jj
0030 A6F0              MOV     @R0,B
0032 08                INC     R0
0033 F6                MOV     @R0,A
                                           ; SOURCE LINE # 17
0034 E4                CLR     A
0035 F5F2              MOV     SFR_ext_sram_addr+01H,A
0037 F5F1              MOV     SFR_ext_sram_addr,A
                                           ; SOURCE LINE # 18
0039 75F410            MOV     SFR_ext_sram_cntl,#010H
                                           ; SOURCE LINE # 19
003C 08                INC     R0
003D F6                MOV     @R0,A
003E 08                INC     R0
003F F6                MOV     @R0,A
0040         ?C0522:
                                           ; SOURCE LINE # 20
0040 C3                CLR     C
0041 7900        R     MOV     R1,#LOW sram_addr+01H
0043 E7                MOV     A,@R1
0044 7800        R     MOV     R0,#LOW jj+01H
0046 96                SUBB    A,@R0
0047 19                DEC     R1
0048 E7                MOV     A,@R1
0049 18                DEC     R0
004A 96                SUBB    A,@R0
004B 4003              JC      $ + 5H
004D 020000      R     LJMP    ?C0523
                                           ; SOURCE LINE # 21
                                           ; SOURCE LINE # 22
0050 7800        R     MOV     R0,#LOW sram_addr
0052 E6                MOV     A,@R0
0053 FE                MOV     R6,A
0054 08                INC     R0
0055 E6                MOV     A,@R0
0056 FF                MOV     R7,A
0057 08                INC     R0
0058 A606              MOV     @R0,AR6
005A 08                INC     R0
005B A607              MOV     @R0,AR7
                                           ; SOURCE LINE # 23
005D 7800        R     MOV     R0,#LOW sram_addr
005F E6                MOV     A,@R0
0060 FE                MOV     R6,A
0061 08                INC     R0
0062 E6                MOV     A,@R0
C51 COMPILER V9.50a   SHARK                                                                07/26/2013 11:07:39 PAGE 118 

0063 7803              MOV     R0,#03H
0065         ?C0802:
0065 C3                CLR     C
0066 33                RLC     A
0067 CE                XCH     A,R6
0068 33                RLC     A
0069 CE                XCH     A,R6
006A D8F9              DJNZ    R0,?C0802
006C 2406              ADD     A,#06H
006E FF                MOV     R7,A
006F E4                CLR     A
0070 3E                ADDC    A,R6
0071 F5F2              MOV     SFR_ext_sram_addr+01H,A
0073 8FF1              MOV     SFR_ext_sram_addr,R7
                                           ; SOURCE LINE # 24
0075 E5F3              MOV     A,SFR_ext_sram_data
0077 7007              JNZ     ?C0524
0079 E5F3              MOV     A,SFR_ext_sram_data
007B 7003              JNZ     $ + 5H
007D 020000      R     LJMP    ?C0523
0080         ?C0524:
                                           ; SOURCE LINE # 25
0080 7800        R     MOV     R0,#LOW sum
0082 120000      E     LCALL   ?C?LSTKIDATA
0085 00                DB      00H
0086 00                DB      00H
0087 00                DB      00H
0088 00                DB      00H
                                           ; SOURCE LINE # 26
0089         ?C0525:
0089 C3                CLR     C
008A 7900        R     MOV     R1,#LOW sram_addr+01H
008C E7                MOV     A,@R1
008D 7800        R     MOV     R0,#LOW jj+01H
008F 96                SUBB    A,@R0
0090 19                DEC     R1
0091 E7                MOV     A,@R1
0092 18                DEC     R0
0093 96                SUBB    A,@R0
0094 5062              JNC     continue_end
                                           ; SOURCE LINE # 27
                                           ; SOURCE LINE # 28
0096 7800        R     MOV     R0,#LOW sram_addr
0098 E6                MOV     A,@R0
0099 FE                MOV     R6,A
009A 08                INC     R0
009B E6                MOV     A,@R0
009C 7803              MOV     R0,#03H
009E         ?C0803:
009E C3                CLR     C
009F 33                RLC     A
00A0 CE                XCH     A,R6
00A1 33                RLC     A
00A2 CE                XCH     A,R6
00A3 D8F9              DJNZ    R0,?C0803
                                           ; SOURCE LINE # 29
00A5 120000      R     LCALL   L?0915
                                           ; SOURCE LINE # 30
00A8 7800        R     MOV     R0,#LOW trim_addr_offset+03H
00AA A6F3              MOV     @R0,SFR_ext_sram_data
                                           ; SOURCE LINE # 31
00AC 18                DEC     R0
C51 COMPILER V9.50a   SHARK                                                                07/26/2013 11:07:39 PAGE 119 

00AD A6F3              MOV     @R0,SFR_ext_sram_data
                                           ; SOURCE LINE # 32
00AF E4                CLR     A
00B0 18                DEC     R0
00B1 F6                MOV     @R0,A
                                           ; SOURCE LINE # 33
00B2 18                DEC     R0
00B3 F6                MOV     @R0,A
                                           ; SOURCE LINE # 34
00B4 120000      R     LCALL   lba_adder
                                           ; SOURCE LINE # 35
00B7 7800        R     MOV     R0,#LOW sum
00B9 120000      E     LCALL   ?C?LLDIDATA
00BC 7800        R     MOV     R0,#LOW trim_addr_offset
00BE 120000      E     LCALL   ?C?LLDIDATA0
00C1 EF                MOV     A,R7
00C2 2B                ADD     A,R3
00C3 FF                MOV     R7,A
00C4 EE                MOV     A,R6
00C5 3A                ADDC    A,R2
00C6 FE                MOV     R6,A
00C7 ED                MOV     A,R5
00C8 39                ADDC    A,R1
00C9 FD                MOV     R5,A
00CA EC                MOV     A,R4
00CB 38                ADDC    A,R0
00CC FC                MOV     R4,A
00CD 7800        R     MOV     R0,#LOW sum
00CF 120000      E     LCALL   ?C?LSTIDATA
                                           ; SOURCE LINE # 36
00D2 7800        R     MOV     R0,#LOW jj+01H
00D4 E6                MOV     A,@R0
00D5 24FF              ADD     A,#0FFH
00D7 FF                MOV     R7,A
00D8 18                DEC     R0
00D9 E6                MOV     A,@R0
00DA 34FF              ADDC    A,#0FFH
00DC FE                MOV     R6,A
00DD EF                MOV     A,R7
00DE 7800        R     MOV     R0,#LOW sram_addr+01H
00E0 66                XRL     A,@R0
00E1 7003              JNZ     ?C0804
00E3 EE                MOV     A,R6
00E4 18                DEC     R0
00E5 66                XRL     A,@R0
00E6         ?C0804:
00E6 6010              JZ      continue_end
00E8         ?C0528:
                                           ; SOURCE LINE # 37
00E8 120000      R     LCALL   cmp_lba
00EB EF                MOV     A,R7
00EC 700A              JNZ     continue_end
00EE         ?C0530:
                                           ; SOURCE LINE # 38
00EE         ?C0527:
00EE 7800        R     MOV     R0,#LOW sram_addr+01H
00F0 06                INC     @R0
00F1 E6                MOV     A,@R0
00F2 18                DEC     R0
00F3 7094              JNZ     ?C0525
00F5 06                INC     @R0
00F6         ?C0805:
C51 COMPILER V9.50a   SHARK                                                                07/26/2013 11:07:39 PAGE 120 

00F6 8091              SJMP    ?C0525
                                           ; SOURCE LINE # 39
00F8         continue_end:
                                           ; SOURCE LINE # 41
00F8 120000      R     LCALL   trim_check_lba
00FB EF                MOV     A,R7
00FC 6005              JZ      ?C0531
00FE         ?C0854:
00FE 7BFF              MOV     R3,#0FFH
0100 E4                CLR     A
0101 805E              SJMP    ?C0855
0103         ?C0531:
                                           ; SOURCE LINE # 42
0103 7800        R     MOV     R0,#LOW ?fetch_block_border?BYTE
0105 7C00        R     MOV     R4,#HIGH ?fetch_block_border?BYTE
0107 7D00              MOV     R5,#00H
0109 7B00              MOV     R3,#00H
010B 7A00        R     MOV     R2,#HIGH addr_temp
010D 7900        R     MOV     R1,#LOW addr_temp
010F 7E00              MOV     R6,#00H
0111 7F02              MOV     R7,#02H
0113 120000      E     LCALL   ?C?COPY
0116 120000      R     LCALL   fetch_block_border
                                           ; SOURCE LINE # 43
0119 7800        R     MOV     R0,#LOW sram_addr+01H
011B 06                INC     @R0
011C E6                MOV     A,@R0
011D 18                DEC     R0
011E 7001              JNZ     ?C0806
0120 06                INC     @R0
0121         ?C0806:
                                           ; SOURCE LINE # 44
0121 7800        R     MOV     R0,#LOW trim_addr_offset
0123 120000      E     LCALL   ?C?LLDIDATA
0126 7800        R     MOV     R0,#LOW sum
0128 120000      E     LCALL   ?C?LLDIDATA0
012B D3                SETB    C
012C 120000      E     LCALL   ?C?ULCMP
012F 5003              JNC     $ + 5H
0131 020000      R     LJMP    ?C0522
0134         ?C0532:
                                           ; SOURCE LINE # 45
0134 7800        R     MOV     R0,#LOW sum
0136 120000      E     LCALL   ?C?LLDIDATA
0139 7800        R     MOV     R0,#LOW trim_addr_offset
013B 120000      E     LCALL   ?C?LLDIDATA0
013E C3                CLR     C
013F EF                MOV     A,R7
0140 9B                SUBB    A,R3
0141 FF                MOV     R7,A
0142 EE                MOV     A,R6
0143 9A                SUBB    A,R2
0144 FE                MOV     R6,A
0145 ED                MOV     A,R5
0146 99                SUBB    A,R1
0147 FD                MOV     R5,A
0148 EC                MOV     A,R4
0149 98                SUBB    A,R0
014A FC                MOV     R4,A
014B 7800        R     MOV     R0,#LOW sum
014D 120000      E     LCALL   ?C?LSTIDATA
                                           ; SOURCE LINE # 46
C51 COMPILER V9.50a   SHARK                                                                07/26/2013 11:07:39 PAGE 121 

0150 7D00              MOV     R5,#00H
0152 7B00              MOV     R3,#00H
0154 7E00              MOV     R6,#00H
0156 120000      R     LCALL   L?0911
                                           ; SOURCE LINE # 47
0159 020000      R     LJMP    ?C0522
015C         ?C0523:
                                           ; SOURCE LINE # 48
015C E4                CLR     A
015D F5F4              MOV     SFR_ext_sram_cntl,A
                                           ; SOURCE LINE # 49
015F 7BFF              MOV     R3,#0FFH
0161         ?C0855:
0161 FD                MOV     R5,A
0162 7F50              MOV     R7,#050H
0164 120000      R     LCALL   _tx_fis_34
                                           ; SOURCE LINE # 50
0167         end_of_trim:
                                           ; SOURCE LINE # 51
0167 020000      R     LJMP    reset_engine
             ; FUNCTION trim_handler (END)

             ; FUNCTION fetch_block_border (BEGIN)
                                           ; SOURCE LINE # 53
                                           ; SOURCE LINE # 54
                                           ; SOURCE LINE # 62
0000 7800        R     MOV     R0,#LOW tmp
0002 120000      E     LCALL   ?C?LSTKIDATA
0005 00                DB      00H
0006 00                DB      00H
0007 00                DB      00H
0008 00                DB      00H
                                           ; SOURCE LINE # 63
0009 7800        R     MOV     R0,#LOW buf
000B 120000      E     LCALL   ?C?LSTKIDATA
000E 00                DB      00H
000F 00                DB      00H
0010 00                DB      00H
0011 00                DB      00H
                                           ; SOURCE LINE # 65
0012 E500        R     MOV     A,addr+01H
0014 AE00        R     MOV     R6,addr
0016 7803              MOV     R0,#03H
0018         ?C0807:
0018 C3                CLR     C
0019 33                RLC     A
001A CE                XCH     A,R6
001B 33                RLC     A
001C CE                XCH     A,R6
001D D8F9              DJNZ    R0,?C0807
                                           ; SOURCE LINE # 66
001F 120000      R     LCALL   L?0915
                                           ; SOURCE LINE # 68
0022 907FCA            MOV     DPTR,#07FCAH
0025 E4                CLR     A
0026 93                MOVC    A,@A+DPTR
0027 7800        R     MOV     R0,#LOW tmp+03H
0029 F6                MOV     @R0,A
                                           ; SOURCE LINE # 69
002A A3                INC     DPTR
002B E4                CLR     A
002C 93                MOVC    A,@A+DPTR
C51 COMPILER V9.50a   SHARK                                                                07/26/2013 11:07:39 PAGE 122 

002D 18                DEC     R0
002E F6                MOV     @R0,A
                                           ; SOURCE LINE # 72
002F 907FB8            MOV     DPTR,#07FB8H
0032 E4                CLR     A
0033 93                MOVC    A,@A+DPTR
0034 6405              XRL     A,#05H
0036 7003              JNZ     $ + 5H
0038 020000      R     LJMP    ?C0534
                                           ; SOURCE LINE # 73
                                           ; SOURCE LINE # 74
003B 7800        R     MOV     R0,#LOW tmp
003D 120000      E     LCALL   ?C?LLDIDATA
0040 907FB8            MOV     DPTR,#07FB8H
0043 E4                CLR     A
0044 93                MOVC    A,@A+DPTR
0045 FB                MOV     R3,A
0046 C3                CLR     C
0047 13                RRC     A
0048 F9                MOV     R1,A
0049 F8                MOV     R0,A
004A 120000      E     LCALL   ?C?LSHL
004D 7800        R     MOV     R0,#LOW tmp
004F 120000      E     LCALL   ?C?LSTIDATA
                                           ; SOURCE LINE # 75
0052 7800        R     MOV     R0,#LOW tmp
0054 120000      E     LCALL   ?C?LLDIDATA
0057 EF                MOV     A,R7
0058 24FF              ADD     A,#0FFH
005A FF                MOV     R7,A
005B EE                MOV     A,R6
005C 34FF              ADDC    A,#0FFH
005E FE                MOV     R6,A
005F ED                MOV     A,R5
0060 34FF              ADDC    A,#0FFH
0062 FD                MOV     R5,A
0063 EC                MOV     A,R4
0064 34FF              ADDC    A,#0FFH
0066 FC                MOV     R4,A
0067 7800        R     MOV     R0,#LOW tmp
0069 120000      E     LCALL   ?C?LSTIDATA
                                           ; SOURCE LINE # 76
006C E4                CLR     A
006D 90FF57            MOV     DPTR,#sata+057H
0070 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 77
0071 90FF78            MOV     DPTR,#sata+078H
0074 E0                MOVX    A,@DPTR
0075 7800        R     MOV     R0,#LOW tmp+03H
0077 56                ANL     A,@R0
0078 7900        R     MOV     R1,#LOW trim_addr_offset+03H
007A F7                MOV     @R1,A
                                           ; SOURCE LINE # 78
007B A3                INC     DPTR
007C E0                MOVX    A,@DPTR
007D 18                DEC     R0
007E 56                ANL     A,@R0
007F 19                DEC     R1
0080 F7                MOV     @R1,A
                                           ; SOURCE LINE # 79
0081 A3                INC     DPTR
0082 E0                MOVX    A,@DPTR
C51 COMPILER V9.50a   SHARK                                                                07/26/2013 11:07:39 PAGE 123 

0083 18                DEC     R0
0084 56                ANL     A,@R0
0085 19                DEC     R1
0086 F7                MOV     @R1,A
                                           ; SOURCE LINE # 80
0087 E4                CLR     A
0088 7800        R     MOV     R0,#LOW trim_addr_offset
008A F6                MOV     @R0,A
                                           ; SOURCE LINE # 81
008B 907FBC            MOV     DPTR,#07FBCH
008E 93                MOVC    A,@A+DPTR
008F 90FF57            MOV     DPTR,#sata+057H
0092 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 82
0093 7800        R     MOV     R0,#LOW trim_addr_offset+03H
0095 E6                MOV     A,@R0
0096 7009              JNZ     ?C0535
0098 18                DEC     R0
0099 E6                MOV     A,@R0
009A 7005              JNZ     ?C0535
009C 18                DEC     R0
009D E6                MOV     A,@R0
009E 7001              JNZ     ?C0535
00A0 22                RET     
00A1         ?C0535:
                                           ; SOURCE LINE # 84
                                           ; SOURCE LINE # 85
00A1 7800        R     MOV     R0,#LOW tmp
00A3 120000      E     LCALL   ?C?LLDIDATA
00A6 EF                MOV     A,R7
00A7 2401              ADD     A,#01H
00A9 FF                MOV     R7,A
00AA E4                CLR     A
00AB 3E                ADDC    A,R6
00AC FE                MOV     R6,A
00AD E4                CLR     A
00AE 3D                ADDC    A,R5
00AF FD                MOV     R5,A
00B0 E4                CLR     A
00B1 3C                ADDC    A,R4
00B2 FC                MOV     R4,A
00B3 7800        R     MOV     R0,#LOW tmp
00B5 120000      E     LCALL   ?C?LSTIDATA
                                           ; SOURCE LINE # 86
00B8 7800        R     MOV     R0,#LOW trim_addr_offset
00BA 120000      E     LCALL   ?C?LLDIDATA0
00BD C000              PUSH    AR0
00BF 7800        R     MOV     R0,#LOW tmp
00C1 120000      E     LCALL   ?C?LLDIDATA
00C4 D000              POP     AR0
00C6 C3                CLR     C
00C7 EF                MOV     A,R7
00C8 9B                SUBB    A,R3
00C9 FF                MOV     R7,A
00CA EE                MOV     A,R6
00CB 9A                SUBB    A,R2
00CC FE                MOV     R6,A
00CD ED                MOV     A,R5
00CE 99                SUBB    A,R1
00CF FD                MOV     R5,A
00D0 EC                MOV     A,R4
00D1 98                SUBB    A,R0
C51 COMPILER V9.50a   SHARK                                                                07/26/2013 11:07:39 PAGE 124 

00D2 FC                MOV     R4,A
00D3 7800        R     MOV     R0,#LOW trim_addr_offset
00D5 120000      E     LCALL   ?C?LSTIDATA
                                           ; SOURCE LINE # 87
                                           ; SOURCE LINE # 88
                                           ; SOURCE LINE # 89
00D8 020000      R     LJMP    ?C0856
00DB         ?C0534:
                                           ; SOURCE LINE # 91
                                           ; SOURCE LINE # 92
00DB 90FF7F            MOV     DPTR,#sata+07FH
00DE 74F1              MOV     A,#0F1H
00E0 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 93
00E1 7800        R     MOV     R0,#LOW tmp
00E3 120000      E     LCALL   ?C?LLDIDATA
00E6 7800        R     MOV     R0,#LOW buf
00E8 120000      E     LCALL   ?C?LSTIDATA
                                           ; SOURCE LINE # 94
00EB 7800        R     MOV     R0,#LOW tmp
00ED 120000      E     LCALL   ?C?LLDIDATA
00F0 C3                CLR     C
00F1 EF                MOV     A,R7
00F2 9401              SUBB    A,#01H
00F4 FF                MOV     R7,A
00F5 EE                MOV     A,R6
00F6 9400              SUBB    A,#00H
00F8 FE                MOV     R6,A
00F9 ED                MOV     A,R5
00FA 9400              SUBB    A,#00H
00FC FD                MOV     R5,A
00FD EC                MOV     A,R4
00FE 9400              SUBB    A,#00H
0100 FC                MOV     R4,A
0101 7800        R     MOV     R0,#LOW tmp
0103 120000      E     LCALL   ?C?LSTIDATA
                                           ; SOURCE LINE # 95
0106 E4                CLR     A
0107 90FF57            MOV     DPTR,#sata+057H
010A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 96
010B 90FF78            MOV     DPTR,#sata+078H
010E E0                MOVX    A,@DPTR
010F 7800        R     MOV     R0,#LOW tmp+03H
0111 56                ANL     A,@R0
0112 7900        R     MOV     R1,#LOW trim_addr_offset+03H
0114 F7                MOV     @R1,A
                                           ; SOURCE LINE # 97
0115 A3                INC     DPTR
0116 E0                MOVX    A,@DPTR
0117 18                DEC     R0
0118 56                ANL     A,@R0
0119 19                DEC     R1
011A F7                MOV     @R1,A
                                           ; SOURCE LINE # 98
011B A3                INC     DPTR
011C E0                MOVX    A,@DPTR
011D 18                DEC     R0
011E 56                ANL     A,@R0
011F 19                DEC     R1
0120 F7                MOV     @R1,A
                                           ; SOURCE LINE # 99
C51 COMPILER V9.50a   SHARK                                                                07/26/2013 11:07:39 PAGE 125 

0121 E4                CLR     A
0122 7800        R     MOV     R0,#LOW trim_addr_offset
0124 F6                MOV     @R0,A
                                           ; SOURCE LINE # 100
0125 907FBC            MOV     DPTR,#07FBCH
0128 93                MOVC    A,@A+DPTR
0129 90FF57            MOV     DPTR,#sata+057H
012C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 101
012D 7800        R     MOV     R0,#LOW buf
012F 120000      E     LCALL   ?C?LLDIDATA
0132 7800        R     MOV     R0,#LOW tmp
0134 8020              SJMP    ?C0857
0136         ?C0539:
                                           ; SOURCE LINE # 102
0136 E4                CLR     A
0137 7F01              MOV     R7,#01H
0139 FE                MOV     R6,A
013A FD                MOV     R5,A
013B FC                MOV     R4,A
013C 7800        R     MOV     R0,#LOW buf
013E 120000      E     LCALL   ?C?LLDIDATA0
0141 C3                CLR     C
0142 120000      E     LCALL   ?C?ULCMP
0145 6014              JZ      ?C0540
                                           ; SOURCE LINE # 103
                                           ; SOURCE LINE # 104
0147 120000      R     LCALL   lba_shift_right
                                           ; SOURCE LINE # 105
014A 7800        R     MOV     R0,#LOW buf
014C 120000      E     LCALL   ?C?LLDIDATA
014F 7801              MOV     R0,#01H
0151 120000      E     LCALL   ?C?ULSHR
0154 7800        R     MOV     R0,#LOW buf
0156         ?C0857:
0156 120000      E     LCALL   ?C?LSTIDATA
                                           ; SOURCE LINE # 106
0159 80DB              SJMP    ?C0539
015B         ?C0540:
                                           ; SOURCE LINE # 107
015B 7800        R     MOV     R0,#LOW buf
015D 120000      E     LCALL   ?C?LSTKIDATA
0160 00                DB      00H
0161 00                DB      00H
0162 00                DB      00H
0163 00                DB      00H
                                           ; SOURCE LINE # 108
0164 7800        R     MOV     R0,#LOW trim_addr_offset+03H
0166 E6                MOV     A,@R0
0167 7008              JNZ     ?C0542
0169 18                DEC     R0
016A E6                MOV     A,@R0
016B 7004              JNZ     ?C0542
016D 18                DEC     R0
016E E6                MOV     A,@R0
016F 601E              JZ      ?C0545
0171         ?C0542:
0171 75BE08            MOV     SFR_lba_comp,#08H
0174 7800        R     MOV     R0,#LOW buf
0176 120000      E     LCALL   ?C?LLDIDATA
0179 7800        R     MOV     R0,#LOW tmp
017B 120000      E     LCALL   ?C?LLDIDATA0
C51 COMPILER V9.50a   SHARK                                                                07/26/2013 11:07:39 PAGE 126 

017E EF                MOV     A,R7
017F 2B                ADD     A,R3
0180 FF                MOV     R7,A
0181 EE                MOV     A,R6
0182 3A                ADDC    A,R2
0183 FE                MOV     R6,A
0184 ED                MOV     A,R5
0185 39                ADDC    A,R1
0186 FD                MOV     R5,A
0187 EC                MOV     A,R4
0188 38                ADDC    A,R0
0189 FC                MOV     R4,A
018A 7800        R     MOV     R0,#LOW buf
018C 120000      E     LCALL   ?C?LSTIDATA
018F         ?C0545:
                                           ; SOURCE LINE # 109
                                           ; SOURCE LINE # 110
018F 90FFC6            MOV     DPTR,#sata+0C6H
0192 E0                MOVX    A,@DPTR
0193 6401              XRL     A,#01H
0195 6020              JZ      ?C0544
0197         ?C0546:
                                           ; SOURCE LINE # 111
0197 7800        R     MOV     R0,#LOW buf
0199 120000      E     LCALL   ?C?LLDIDATA
019C 7800        R     MOV     R0,#LOW tmp
019E 120000      E     LCALL   ?C?LLDIDATA0
01A1 EF                MOV     A,R7
01A2 2B                ADD     A,R3
01A3 FF                MOV     R7,A
01A4 EE                MOV     A,R6
01A5 3A                ADDC    A,R2
01A6 FE                MOV     R6,A
01A7 ED                MOV     A,R5
01A8 39                ADDC    A,R1
01A9 FD                MOV     R5,A
01AA EC                MOV     A,R4
01AB 38                ADDC    A,R0
01AC FC                MOV     R4,A
01AD 7800        R     MOV     R0,#LOW buf
01AF 120000      E     LCALL   ?C?LSTIDATA
                                           ; SOURCE LINE # 112
01B2 75BE08            MOV     SFR_lba_comp,#08H
                                           ; SOURCE LINE # 113
01B5 80D8              SJMP    ?C0545
01B7         ?C0544:
                                           ; SOURCE LINE # 114
01B7 907FBB            MOV     DPTR,#07FBBH
01BA E4                CLR     A
01BB 93                MOVC    A,@A+DPTR
01BC 90FF7F            MOV     DPTR,#sata+07FH
01BF F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 115
01C0 7800        R     MOV     R0,#LOW trim_addr_offset
01C2 120000      E     LCALL   ?C?LLDIDATA0
01C5 C000              PUSH    AR0
01C7 7800        R     MOV     R0,#LOW buf
01C9 120000      E     LCALL   ?C?LLDIDATA
01CC D000              POP     AR0
01CE C3                CLR     C
01CF EF                MOV     A,R7
01D0 9B                SUBB    A,R3
C51 COMPILER V9.50a   SHARK                                                                07/26/2013 11:07:39 PAGE 127 

01D1 FF                MOV     R7,A
01D2 EE                MOV     A,R6
01D3 9A                SUBB    A,R2
01D4 FE                MOV     R6,A
01D5 ED                MOV     A,R5
01D6 99                SUBB    A,R1
01D7 FD                MOV     R5,A
01D8 EC                MOV     A,R4
01D9 98                SUBB    A,R0
01DA FC                MOV     R4,A
01DB 7800        R     MOV     R0,#LOW trim_addr_offset
01DD 120000      E     LCALL   ?C?LSTIDATA
                                           ; SOURCE LINE # 116
01E0 E500        R     MOV     A,addr+01H
01E2 AE00        R     MOV     R6,addr
01E4 7803              MOV     R0,#03H
01E6         ?C0808:
01E6 C3                CLR     C
01E7 33                RLC     A
01E8 CE                XCH     A,R6
01E9 33                RLC     A
01EA CE                XCH     A,R6
01EB D8F9              DJNZ    R0,?C0808
                                           ; SOURCE LINE # 117
01ED 120000      R     LCALL   L?0916
                                           ; SOURCE LINE # 118
01F0         ?C0856:
01F0 120000      R     LCALL   lba_adder
                                           ; SOURCE LINE # 119
                                           ; SOURCE LINE # 120
01F3         ?C0536:
01F3 22                RET     
             ; FUNCTION fetch_block_border (END)

             ; FUNCTION lba_adder (BEGIN)
                                           ; SOURCE LINE # 121
                                           ; SOURCE LINE # 122
                                           ; SOURCE LINE # 124
0000 E4                CLR     A
0001 F500        R     MOV     i,A
0003         ?C0547:
0003 E500        R     MOV     A,i
0005 C3                CLR     C
0006 7800        R     MOV     R0,#LOW trim_addr_offset+03H
0008 96                SUBB    A,@R0
0009 5007              JNC     ?C0548
000B 75BE08            MOV     SFR_lba_comp,#08H
000E 0500        R     INC     i
0010 80F1              SJMP    ?C0547
0012         ?C0548:
                                           ; SOURCE LINE # 125
0012 E4                CLR     A
0013 90FF57            MOV     DPTR,#sata+057H
0016 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 126
0017 90FF78            MOV     DPTR,#sata+078H
001A E0                MOVX    A,@DPTR
001B 7800        R     MOV     R0,#LOW buf
001D F6                MOV     @R0,A
                                           ; SOURCE LINE # 127
001E A3                INC     DPTR
001F E0                MOVX    A,@DPTR
C51 COMPILER V9.50a   SHARK                                                                07/26/2013 11:07:39 PAGE 128 

0020 90FF78            MOV     DPTR,#sata+078H
0023 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 128
0024 90FF7A            MOV     DPTR,#sata+07AH
0027 E0                MOVX    A,@DPTR
0028 90FF79            MOV     DPTR,#sata+079H
002B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 129
002C 90FF7B            MOV     DPTR,#sata+07BH
002F E0                MOVX    A,@DPTR
0030 90FF7A            MOV     DPTR,#sata+07AH
0033 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 130
0034 90FF7C            MOV     DPTR,#sata+07CH
0037 E0                MOVX    A,@DPTR
0038 90FF7B            MOV     DPTR,#sata+07BH
003B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 131
003C 90FF7D            MOV     DPTR,#sata+07DH
003F E0                MOVX    A,@DPTR
0040 90FF7C            MOV     DPTR,#sata+07CH
0043 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 132
0044 E4                CLR     A
0045 F500        R     MOV     i,A
0047         ?C0550:
0047 E500        R     MOV     A,i
0049 C3                CLR     C
004A 7800        R     MOV     R0,#LOW trim_addr_offset+02H
004C 96                SUBB    A,@R0
004D 5007              JNC     ?C0551
004F 75BE08            MOV     SFR_lba_comp,#08H
0052 0500        R     INC     i
0054 80F1              SJMP    ?C0550
0056         ?C0551:
                                           ; SOURCE LINE # 133
0056 90FF78            MOV     DPTR,#sata+078H
0059 E0                MOVX    A,@DPTR
005A 7800        R     MOV     R0,#LOW buf+01H
005C F6                MOV     @R0,A
                                           ; SOURCE LINE # 134
005D A3                INC     DPTR
005E E0                MOVX    A,@DPTR
005F 90FF78            MOV     DPTR,#sata+078H
0062 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 135
0063 90FF7A            MOV     DPTR,#sata+07AH
0066 E0                MOVX    A,@DPTR
0067 90FF79            MOV     DPTR,#sata+079H
006A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 136
006B 90FF7B            MOV     DPTR,#sata+07BH
006E E0                MOVX    A,@DPTR
006F 90FF7A            MOV     DPTR,#sata+07AH
0072 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 137
0073 90FF7C            MOV     DPTR,#sata+07CH
0076 E0                MOVX    A,@DPTR
0077 90FF7B            MOV     DPTR,#sata+07BH
007A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 138
007B 90FF7D            MOV     DPTR,#sata+07DH
C51 COMPILER V9.50a   SHARK                                                                07/26/2013 11:07:39 PAGE 129 

007E E0                MOVX    A,@DPTR
007F 90FF7C            MOV     DPTR,#sata+07CH
0082 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 139
0083 E4                CLR     A
0084 F500        R     MOV     i,A
0086         ?C0553:
0086 E500        R     MOV     A,i
0088 C3                CLR     C
0089 7800        R     MOV     R0,#LOW trim_addr_offset+01H
008B 96                SUBB    A,@R0
008C 5007              JNC     ?C0554
008E 75BE08            MOV     SFR_lba_comp,#08H
0091 0500        R     INC     i
0093 80F1              SJMP    ?C0553
0095         ?C0554:
                                           ; SOURCE LINE # 140
0095 90FF7B            MOV     DPTR,#sata+07BH
0098 E0                MOVX    A,@DPTR
0099 90FF7D            MOV     DPTR,#sata+07DH
009C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 141
009D 90FF7A            MOV     DPTR,#sata+07AH
00A0 E0                MOVX    A,@DPTR
00A1 90FF7C            MOV     DPTR,#sata+07CH
00A4 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 142
00A5 90FF79            MOV     DPTR,#sata+079H
00A8 E0                MOVX    A,@DPTR
00A9 90FF7B            MOV     DPTR,#sata+07BH
00AC F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 143
00AD 90FF78            MOV     DPTR,#sata+078H
00B0 E0                MOVX    A,@DPTR
00B1 90FF7A            MOV     DPTR,#sata+07AH
00B4 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 144
00B5 7800        R     MOV     R0,#LOW buf+01H
00B7 E6                MOV     A,@R0
00B8 90FF79            MOV     DPTR,#sata+079H
00BB F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 145
00BC 18                DEC     R0
00BD E6                MOV     A,@R0
00BE 90FF78            MOV     DPTR,#sata+078H
00C1 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 146
00C2 907FBC            MOV     DPTR,#07FBCH
00C5 E4                CLR     A
00C6 93                MOVC    A,@A+DPTR
00C7 90FF57            MOV     DPTR,#sata+057H
00CA F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 147
00CB 75BE80            MOV     SFR_lba_comp,#080H
00CE 75BE08            MOV     SFR_lba_comp,#08H
                                           ; SOURCE LINE # 148
00D1 22                RET     
             ; FUNCTION lba_adder (END)

             ; FUNCTION cmp_lba (BEGIN)
                                           ; SOURCE LINE # 150
                                           ; SOURCE LINE # 151
C51 COMPILER V9.50a   SHARK                                                                07/26/2013 11:07:39 PAGE 130 

                                           ; SOURCE LINE # 152
0000 E4                CLR     A
0001 90FF57            MOV     DPTR,#sata+057H
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 153
0005 90FF78            MOV     DPTR,#sata+078H
0008 E0                MOVX    A,@DPTR
0009 65F3              XRL     A,SFR_ext_sram_data
000B 7031              JNZ     discontinue
000D         ?C0557:
                                           ; SOURCE LINE # 154
000D 90FF79            MOV     DPTR,#sata+079H
0010 E0                MOVX    A,@DPTR
0011 65F3              XRL     A,SFR_ext_sram_data
0013 7029              JNZ     discontinue
0015         ?C0559:
                                           ; SOURCE LINE # 155
0015 90FF7A            MOV     DPTR,#sata+07AH
0018 E0                MOVX    A,@DPTR
0019 65F3              XRL     A,SFR_ext_sram_data
001B 7021              JNZ     discontinue
001D         ?C0560:
                                           ; SOURCE LINE # 156
001D 90FF7B            MOV     DPTR,#sata+07BH
0020 E0                MOVX    A,@DPTR
0021 B5F31A            CJNE    A,SFR_ext_sram_data,discontinue
0024         ?C0561:
                                           ; SOURCE LINE # 157
0024 90FF7C            MOV     DPTR,#sata+07CH
0027 E0                MOVX    A,@DPTR
0028 B5F313            CJNE    A,SFR_ext_sram_data,discontinue
002B         ?C0562:
                                           ; SOURCE LINE # 158
002B 90FF7D            MOV     DPTR,#sata+07DH
002E E0                MOVX    A,@DPTR
002F B5F30C            CJNE    A,SFR_ext_sram_data,discontinue
0032         ?C0563:
                                           ; SOURCE LINE # 159
0032 907FBC            MOV     DPTR,#07FBCH
0035 E4                CLR     A
0036 93                MOVC    A,@A+DPTR
0037 90FF57            MOV     DPTR,#sata+057H
003A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 160
003B 7F00              MOV     R7,#00H
003D 22                RET     
                                           ; SOURCE LINE # 161
003E         discontinue:
                                           ; SOURCE LINE # 162
003E 907FBC            MOV     DPTR,#07FBCH
0041 E4                CLR     A
0042 93                MOVC    A,@A+DPTR
0043 90FF57            MOV     DPTR,#sata+057H
0046 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 163
0047 7F01              MOV     R7,#01H
                                           ; SOURCE LINE # 164
0049         ?C0564:
0049 22                RET     
             ; FUNCTION cmp_lba (END)

             ; FUNCTION L?0911 (BEGIN)
C51 COMPILER V9.50a   SHARK                                                                07/26/2013 11:07:39 PAGE 131 

0000 7800        R     MOV     R0,#LOW ?send_trim_cmd?BYTE
0002 7C00        R     MOV     R4,#HIGH ?send_trim_cmd?BYTE
0004 7A00        R     MOV     R2,#HIGH sum
0006 7900        R     MOV     R1,#LOW sum
0008 7F04              MOV     R7,#04H
000A 120000      E     LCALL   ?C?COPY
             ; FUNCTION send_trim_cmd (BEGIN)
                                           ; SOURCE LINE # 165
                                           ; SOURCE LINE # 166
                                           ; SOURCE LINE # 173
000D 7800        R     MOV     R0,#LOW block_size
000F 120000      E     LCALL   ?C?LSTKIDATA
0012 00                DB      00H
0013 00                DB      00H
0014 00                DB      00H
0015 00                DB      00H
                                           ; SOURCE LINE # 175
0016 907FCA            MOV     DPTR,#07FCAH
0019 E4                CLR     A
001A 93                MOVC    A,@A+DPTR
001B 7800        R     MOV     R0,#LOW block_size+03H
001D F6                MOV     @R0,A
                                           ; SOURCE LINE # 176
001E A3                INC     DPTR
001F E4                CLR     A
0020 93                MOVC    A,@A+DPTR
0021 18                DEC     R0
0022 F6                MOV     @R0,A
                                           ; SOURCE LINE # 177
0023 90FF7F            MOV     DPTR,#sata+07FH
0026 E0                MOVX    A,@DPTR
0027 540F              ANL     A,#0FH
0029 14                DEC     A
002A FF                MOV     R7,A
002B 7401              MOV     A,#01H
002D 7E00              MOV     R6,#00H
002F A807              MOV     R0,AR7
0031 08                INC     R0
0032 8005              SJMP    ?C0810
0034         ?C0809:
0034 C3                CLR     C
0035 33                RLC     A
0036 CE                XCH     A,R6
0037 33                RLC     A
0038 CE                XCH     A,R6
0039         ?C0810:
0039 D8F9              DJNZ    R0,?C0809
003B FF                MOV     R7,A
003C EE                MOV     A,R6
003D 33                RLC     A
003E 95E0              SUBB    A,ACC
0040 FD                MOV     R5,A
0041 FC                MOV     R4,A
0042 7800        R     MOV     R0,#LOW trim_addr_offset
0044 120000      E     LCALL   ?C?LSTIDATA
                                           ; SOURCE LINE # 178
0047 907FB8            MOV     DPTR,#07FB8H
004A E4                CLR     A
004B 93                MOVC    A,@A+DPTR
004C 6405              XRL     A,#05H
004E 6051              JZ      ?C0565
                                           ; SOURCE LINE # 179
C51 COMPILER V9.50a   SHARK                                                                07/26/2013 11:07:39 PAGE 132 

                                           ; SOURCE LINE # 180
0050 7800        R     MOV     R0,#LOW block_size
0052 120000      E     LCALL   ?C?LLDIDATA
0055 907FB8            MOV     DPTR,#07FB8H
0058 E4                CLR     A
0059 93                MOVC    A,@A+DPTR
005A FB                MOV     R3,A
005B C3                CLR     C
005C 13                RRC     A
005D F9                MOV     R1,A
005E F8                MOV     R0,A
005F 120000      E     LCALL   ?C?LSHL
0062 7800        R     MOV     R0,#LOW block_size
0064 120000      E     LCALL   ?C?LSTIDATA
0067         ?C0566:
                                           ; SOURCE LINE # 181
0067 E4                CLR     A
0068 7F01              MOV     R7,#01H
006A FE                MOV     R6,A
006B FD                MOV     R5,A
006C FC                MOV     R4,A
006D 7800        R     MOV     R0,#LOW block_size
006F 120000      E     LCALL   ?C?LLDIDATA0
0072 C3                CLR     C
0073 120000      E     LCALL   ?C?ULCMP
0076 7003              JNZ     $ + 5H
0078 020000      R     LJMP    ?C0568
                                           ; SOURCE LINE # 182
                                           ; SOURCE LINE # 183
007B 7800        R     MOV     R0,#LOW block_size
007D 120000      E     LCALL   ?C?LLDIDATA
0080 7801              MOV     R0,#01H
0082 120000      E     LCALL   ?C?ULSHR
0085 7800        R     MOV     R0,#LOW block_size
0087 120000      E     LCALL   ?C?LSTIDATA
                                           ; SOURCE LINE # 184
008A AF00        R     MOV     R7,sec_cnt+03H
008C AE00        R     MOV     R6,sec_cnt+02H
008E AD00        R     MOV     R5,sec_cnt+01H
0090 AC00        R     MOV     R4,sec_cnt
0092 7801              MOV     R0,#01H
0094 120000      E     LCALL   ?C?ULSHR
0097 8F00        R     MOV     sec_cnt+03H,R7
0099 8E00        R     MOV     sec_cnt+02H,R6
009B 8D00        R     MOV     sec_cnt+01H,R5
009D 8C00        R     MOV     sec_cnt,R4
                                           ; SOURCE LINE # 185
009F 80C6              SJMP    ?C0566
                                           ; SOURCE LINE # 186
00A1         ?C0565:
                                           ; SOURCE LINE # 188
                                           ; SOURCE LINE # 189
00A1 120000      R     LCALL   save_lba
00A4         ?C0569:
                                           ; SOURCE LINE # 190
00A4 E4                CLR     A
00A5 7F01              MOV     R7,#01H
00A7 FE                MOV     R6,A
00A8 FD                MOV     R5,A
00A9 FC                MOV     R4,A
00AA 7800        R     MOV     R0,#LOW block_size
00AC 120000      E     LCALL   ?C?LLDIDATA0
C51 COMPILER V9.50a   SHARK                                                                07/26/2013 11:07:39 PAGE 133 

00AF C3                CLR     C
00B0 120000      E     LCALL   ?C?ULCMP
00B3 6026              JZ      ?C0570
                                           ; SOURCE LINE # 191
                                           ; SOURCE LINE # 192
00B5 7800        R     MOV     R0,#LOW block_size
00B7 120000      E     LCALL   ?C?LLDIDATA
00BA 7801              MOV     R0,#01H
00BC 120000      E     LCALL   ?C?ULSHR
00BF 7800        R     MOV     R0,#LOW block_size
00C1 120000      E     LCALL   ?C?LSTIDATA
                                           ; SOURCE LINE # 193
00C4 AF00        R     MOV     R7,sec_cnt+03H
00C6 AE00        R     MOV     R6,sec_cnt+02H
00C8 AD00        R     MOV     R5,sec_cnt+01H
00CA AC00        R     MOV     R4,sec_cnt
00CC 7801              MOV     R0,#01H
00CE 120000      E     LCALL   ?C?ULSHR
00D1 8F00        R     MOV     sec_cnt+03H,R7
00D3 8E00        R     MOV     sec_cnt+02H,R6
00D5 8D00        R     MOV     sec_cnt+01H,R5
00D7 8C00        R     MOV     sec_cnt,R4
                                           ; SOURCE LINE # 194
00D9 80C9              SJMP    ?C0569
00DB         ?C0570:
                                           ; SOURCE LINE # 195
00DB 90FF7F            MOV     DPTR,#sata+07FH
00DE 74F1              MOV     A,#0F1H
00E0 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 196
00E1 90FF78            MOV     DPTR,#sata+078H
00E4 E500        R     MOV     A,sec_cnt+03H
00E6 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 197
00E7 A3                INC     DPTR
00E8 E500        R     MOV     A,sec_cnt+02H
00EA F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 198
00EB A3                INC     DPTR
00EC E500        R     MOV     A,sec_cnt+01H
00EE F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 199
00EF A3                INC     DPTR
00F0 E500        R     MOV     A,sec_cnt
00F2 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 200
00F3 E4                CLR     A
00F4 A3                INC     DPTR
00F5 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 201
00F6 A3                INC     DPTR
00F7 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 202
00F8 7F1E              MOV     R7,#01EH
00FA FE                MOV     R6,A
00FB 120000      R     LCALL   _delay
                                           ; SOURCE LINE # 204
00FE 907FBC            MOV     DPTR,#07FBCH
0101 E4                CLR     A
0102 93                MOVC    A,@A+DPTR
0103 90FF57            MOV     DPTR,#sata+057H
0106 F0                MOVX    @DPTR,A
C51 COMPILER V9.50a   SHARK                                                                07/26/2013 11:07:39 PAGE 134 

                                           ; SOURCE LINE # 205
0107 90FF78            MOV     DPTR,#sata+078H
010A E0                MOVX    A,@DPTR
010B F500        R     MOV     sec_cnt+03H,A
                                           ; SOURCE LINE # 206
010D A3                INC     DPTR
010E E0                MOVX    A,@DPTR
010F F500        R     MOV     sec_cnt+02H,A
                                           ; SOURCE LINE # 207
0111 A3                INC     DPTR
0112 E0                MOVX    A,@DPTR
0113 F500        R     MOV     sec_cnt+01H,A
                                           ; SOURCE LINE # 208
0115 A3                INC     DPTR
0116 E0                MOVX    A,@DPTR
0117 F500        R     MOV     sec_cnt,A
                                           ; SOURCE LINE # 209
0119 907FBC            MOV     DPTR,#07FBCH
011C E4                CLR     A
011D 93                MOVC    A,@A+DPTR
011E 90FF57            MOV     DPTR,#sata+057H
0121 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 210
0122 907FBB            MOV     DPTR,#07FBBH
0125 E4                CLR     A
0126 93                MOVC    A,@A+DPTR
0127 90FF7F            MOV     DPTR,#sata+07FH
012A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 211
012B 120000      R     LCALL   recover_lba
                                           ; SOURCE LINE # 212
012E         ?C0568:
                                           ; SOURCE LINE # 213
012E 7800        R     MOV     R0,#LOW block_size
0130 120000      E     LCALL   ?C?LSTKIDATA
0133 00                DB      00H
0134 00                DB      00H
0135 00                DB      00H
0136 00                DB      00H
                                           ; SOURCE LINE # 214
0137 907FCA            MOV     DPTR,#07FCAH
013A E4                CLR     A
013B 93                MOVC    A,@A+DPTR
013C 7800        R     MOV     R0,#LOW block_size+03H
013E F6                MOV     @R0,A
                                           ; SOURCE LINE # 215
013F A3                INC     DPTR
0140 E4                CLR     A
0141 93                MOVC    A,@A+DPTR
0142 18                DEC     R0
0143 F6                MOV     @R0,A
                                           ; SOURCE LINE # 216
0144 E4                CLR     A
0145 FF                MOV     R7,A
0146 FE                MOV     R6,A
0147 FD                MOV     R5,A
0148 FC                MOV     R4,A
0149 AB00        R     MOV     R3,sec_cnt+03H
014B AA00        R     MOV     R2,sec_cnt+02H
014D A900        R     MOV     R1,sec_cnt+01H
014F A800        R     MOV     R0,sec_cnt
0151 C3                CLR     C
C51 COMPILER V9.50a   SHARK                                                                07/26/2013 11:07:39 PAGE 135 

0152 120000      E     LCALL   ?C?ULCMP
0155 7003              JNZ     $ + 5H
0157 020000      R     LJMP    ?C0572
015A         ?C0571:
015A         ?C0573:
                                           ; SOURCE LINE # 217
015A E4                CLR     A
015B 7F01              MOV     R7,#01H
015D FE                MOV     R6,A
015E FD                MOV     R5,A
015F FC                MOV     R4,A
0160 7800        R     MOV     R0,#LOW block_size
0162 120000      E     LCALL   ?C?LLDIDATA0
0165 C3                CLR     C
0166 120000      E     LCALL   ?C?ULCMP
0169 6026              JZ      ?C0574
                                           ; SOURCE LINE # 218
                                           ; SOURCE LINE # 219
016B AF00        R     MOV     R7,sec_cnt+03H
016D AE00        R     MOV     R6,sec_cnt+02H
016F AD00        R     MOV     R5,sec_cnt+01H
0171 AC00        R     MOV     R4,sec_cnt
0173 7801              MOV     R0,#01H
0175 120000      E     LCALL   ?C?LSHL
0178 8F00        R     MOV     sec_cnt+03H,R7
017A 8E00        R     MOV     sec_cnt+02H,R6
017C 8D00        R     MOV     sec_cnt+01H,R5
017E 8C00        R     MOV     sec_cnt,R4
                                           ; SOURCE LINE # 220
0180 7800        R     MOV     R0,#LOW block_size
0182 120000      E     LCALL   ?C?LLDIDATA
0185 7801              MOV     R0,#01H
0187 120000      E     LCALL   ?C?ULSHR
018A 7800        R     MOV     R0,#LOW block_size
018C 120000      E     LCALL   ?C?LSTIDATA
                                           ; SOURCE LINE # 221
018F 80C9              SJMP    ?C0573
0191         ?C0574:
                                           ; SOURCE LINE # 223
0191 907FBA            MOV     DPTR,#07FBAH
0194 E4                CLR     A
0195 93                MOVC    A,@A+DPTR
0196 F5D7              MOV     SFR_CHP_en,A
                                           ; SOURCE LINE # 224
0198 75BE80            MOV     SFR_lba_comp,#080H
019B 75BE08            MOV     SFR_lba_comp,#08H
                                           ; SOURCE LINE # 225
                                           ; SOURCE LINE # 226
019E 120000      R     LCALL   L?0904
                                           ; SOURCE LINE # 227
01A1 75D701            MOV     SFR_CHP_en,#01H
                                           ; SOURCE LINE # 228
01A4 E4                CLR     A
01A5 F500        R     MOV     j,A
01A7         ?C0575:
01A7 907FB8            MOV     DPTR,#07FB8H
01AA E4                CLR     A
01AB 93                MOVC    A,@A+DPTR
01AC FF                MOV     R7,A
01AD E500        R     MOV     A,j
01AF C3                CLR     C
01B0 9F                SUBB    A,R7
C51 COMPILER V9.50a   SHARK                                                                07/26/2013 11:07:39 PAGE 136 

01B1 5023              JNC     ?C0576
                                           ; SOURCE LINE # 229
                                           ; SOURCE LINE # 230
01B3 7800        R     MOV     R0,#LOW ?trim_burst?BYTE
01B5 7C00        R     MOV     R4,#HIGH ?trim_burst?BYTE
01B7 7D00              MOV     R5,#00H
01B9 7B00              MOV     R3,#00H
01BB 7A00        R     MOV     R2,#HIGH sec_cnt
01BD 7900        R     MOV     R1,#LOW sec_cnt
01BF 7E00              MOV     R6,#00H
01C1 7F04              MOV     R7,#04H
01C3 120000      E     LCALL   ?C?COPY
01C6 120000      R     LCALL   trim_burst
                                           ; SOURCE LINE # 231
01C9 120000      R     LCALL   lba_adder
                                           ; SOURCE LINE # 232
01CC E5D7              MOV     A,SFR_CHP_en
01CE 25E0              ADD     A,ACC
01D0 F5D7              MOV     SFR_CHP_en,A
                                           ; SOURCE LINE # 233
01D2 0500        R     INC     j
01D4 80D1              SJMP    ?C0575
01D6         ?C0576:
                                           ; SOURCE LINE # 234
01D6 907FBA            MOV     DPTR,#07FBAH
01D9 E4                CLR     A
01DA 93                MOVC    A,@A+DPTR
01DB F5D7              MOV     SFR_CHP_en,A
                                           ; SOURCE LINE # 235
01DD 120000      R     LCALL   wait_chp_ready
                                           ; SOURCE LINE # 236
01E0         ?C0572:
01E0 22                RET     
             ; FUNCTION send_trim_cmd (END)

             ; FUNCTION trim_burst (BEGIN)
                                           ; SOURCE LINE # 237
                                           ; SOURCE LINE # 238
                                           ; SOURCE LINE # 239
0000 75F240            MOV     SFR_ext_sram_addr+01H,#040H
0003 75F106            MOV     SFR_ext_sram_addr,#06H
                                           ; SOURCE LINE # 240
0006 75F410            MOV     SFR_ext_sram_cntl,#010H
                                           ; SOURCE LINE # 241
0009 E4                CLR     A
000A F500        R     MOV     i,A
000C         ?C0578:
                                           ; SOURCE LINE # 242
                                           ; SOURCE LINE # 243
000C 7400        R     MOV     A,#LOW block_num
000E 2500        R     ADD     A,i
0010 F8                MOV     R0,A
0011 E6                MOV     A,@R0
0012 F5F3              MOV     SFR_ext_sram_data,A
                                           ; SOURCE LINE # 244
0014 0500        R     INC     i
0016 E500        R     MOV     A,i
0018 B404F1            CJNE    A,#04H,?C0578
001B         ?C0579:
                                           ; SOURCE LINE # 245
001B 75FC00            MOV     SFR_dma_max_num+01H,#00H
001E 75FB01            MOV     SFR_dma_max_num,#01H
C51 COMPILER V9.50a   SHARK                                                                07/26/2013 11:07:39 PAGE 137 

                                           ; SOURCE LINE # 246
0021 75FA40            MOV     SFR_dma_base+01H,#040H
0024 75F900            MOV     SFR_dma_base,#00H
                                           ; SOURCE LINE # 247
0027 90FF7E            MOV     DPTR,#sata+07EH
002A 7450              MOV     A,#050H
002C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 248
002D 75F880            MOV     SFR_dma_cntl,#080H
0030         ?C0581:
                                           ; SOURCE LINE # 249
0030 30F8FD            JNB     dma_done,?C0581
0033         ?C0582:
                                           ; SOURCE LINE # 250
0033 E4                CLR     A
0034 F5F8              MOV     SFR_dma_cntl,A
                                           ; SOURCE LINE # 251
0036 22                RET     
             ; FUNCTION trim_burst (END)

             ; FUNCTION lba_shift_right (BEGIN)
                                           ; SOURCE LINE # 252
                                           ; SOURCE LINE # 253
                                           ; SOURCE LINE # 254
0000 120000      R     LCALL   save_lba
                                           ; SOURCE LINE # 255
0003 E500        R     MOV     A,g_lba+01H
0005 C4                SWAP    A
0006 33                RLC     A
0007 33                RLC     A
0008 33                RLC     A
0009 5480              ANL     A,#080H
000B FF                MOV     R7,A
000C E500        R     MOV     A,g_lba
000E C3                CLR     C
000F 13                RRC     A
0010 2F                ADD     A,R7
0011 F500        R     MOV     g_lba,A
                                           ; SOURCE LINE # 256
0013 E500        R     MOV     A,g_lba+02H
0015 C4                SWAP    A
0016 33                RLC     A
0017 33                RLC     A
0018 33                RLC     A
0019 5480              ANL     A,#080H
001B FF                MOV     R7,A
001C E500        R     MOV     A,g_lba+01H
001E C3                CLR     C
001F 13                RRC     A
0020 2F                ADD     A,R7
0021 F500        R     MOV     g_lba+01H,A
                                           ; SOURCE LINE # 257
0023 E500        R     MOV     A,g_lba+03H
0025 C4                SWAP    A
0026 33                RLC     A
0027 33                RLC     A
0028 33                RLC     A
0029 5480              ANL     A,#080H
002B FF                MOV     R7,A
002C E500        R     MOV     A,g_lba+02H
002E C3                CLR     C
002F 13                RRC     A
C51 COMPILER V9.50a   SHARK                                                                07/26/2013 11:07:39 PAGE 138 

0030 2F                ADD     A,R7
0031 F500        R     MOV     g_lba+02H,A
                                           ; SOURCE LINE # 258
0033 E500        R     MOV     A,g_lba+04H
0035 C4                SWAP    A
0036 33                RLC     A
0037 33                RLC     A
0038 33                RLC     A
0039 5480              ANL     A,#080H
003B FF                MOV     R7,A
003C E500        R     MOV     A,g_lba+03H
003E C3                CLR     C
003F 13                RRC     A
0040 2F                ADD     A,R7
0041 F500        R     MOV     g_lba+03H,A
                                           ; SOURCE LINE # 259
0043 E500        R     MOV     A,g_lba+05H
0045 C4                SWAP    A
0046 33                RLC     A
0047 33                RLC     A
0048 33                RLC     A
0049 5480              ANL     A,#080H
004B FF                MOV     R7,A
004C E500        R     MOV     A,g_lba+04H
004E C3                CLR     C
004F 13                RRC     A
0050 2F                ADD     A,R7
0051 F500        R     MOV     g_lba+04H,A
                                           ; SOURCE LINE # 260
0053 E500        R     MOV     A,g_lba+05H
0055 C3                CLR     C
0056 13                RRC     A
0057 F500        R     MOV     g_lba+05H,A
                                           ; SOURCE LINE # 261
0059 020000      R     LJMP    recover_lba
             ; FUNCTION lba_shift_right (END)

             ; FUNCTION L?0915 (BEGIN)
0000         L?0916:
0000 8EF2              MOV     SFR_ext_sram_addr+01H,R6
0002 F5F1              MOV     SFR_ext_sram_addr,A
             ; FUNCTION fetch_table_lba (BEGIN)
                                           ; SOURCE LINE # 263
                                           ; SOURCE LINE # 264
                                           ; SOURCE LINE # 265
0004 90FF78            MOV     DPTR,#sata+078H
0007 E5F3              MOV     A,SFR_ext_sram_data
0009 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 266
000A A3                INC     DPTR
000B E5F3              MOV     A,SFR_ext_sram_data
000D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 267
000E A3                INC     DPTR
000F E5F3              MOV     A,SFR_ext_sram_data
0011 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 268
0012 A3                INC     DPTR
0013 E5F3              MOV     A,SFR_ext_sram_data
0015 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 269
0016 A3                INC     DPTR
C51 COMPILER V9.50a   SHARK                                                                07/26/2013 11:07:39 PAGE 139 

0017 E5F3              MOV     A,SFR_ext_sram_data
0019 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 270
001A A3                INC     DPTR
001B E5F3              MOV     A,SFR_ext_sram_data
001D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 271
001E 22                RET     
             ; FUNCTION fetch_table_lba (END)

             ; FUNCTION trim_check_lba (BEGIN)
                                           ; SOURCE LINE # 273
                                           ; SOURCE LINE # 274
                                           ; SOURCE LINE # 276
0000 120000      R     LCALL   save_lba
                                           ; SOURCE LINE # 277
0003 E4                CLR     A
0004 7800        R     MOV     R0,#LOW i
0006 F6                MOV     @R0,A
0007         ?C0586:
                                           ; SOURCE LINE # 278
                                           ; SOURCE LINE # 279
0007 7800        R     MOV     R0,#LOW i
0009 E6                MOV     A,@R0
000A FF                MOV     R7,A
000B FD                MOV     R5,A
000C C3                CLR     C
000D 7405              MOV     A,#05H
000F 9D                SUBB    A,R5
0010 FD                MOV     R5,A
0011 E4                CLR     A
0012 9400              SUBB    A,#00H
0014 FC                MOV     R4,A
0015 74C0              MOV     A,#LOW sata+0C0H
0017 2D                ADD     A,R5
0018 F582              MOV     DPL,A
001A 74FF              MOV     A,#HIGH sata+0C0H
001C 3C                ADDC    A,R4
001D F583              MOV     DPH,A
001F E0                MOVX    A,@DPTR
0020 FE                MOV     R6,A
0021 C3                CLR     C
0022 7405              MOV     A,#05H
0024 9F                SUBB    A,R7
0025 2400        R     ADD     A,#LOW g_lba
0027 F8                MOV     R0,A
0028 E6                MOV     A,@R0
0029 FD                MOV     R5,A
002A D3                SETB    C
002B 9E                SUBB    A,R6
002C 4003              JC      ?C0589
002E 7F01              MOV     R7,#01H
0030 22                RET     
0031         ?C0589:
                                           ; SOURCE LINE # 280
0031 7800        R     MOV     R0,#LOW i
0033 E6                MOV     A,@R0
0034 FF                MOV     R7,A
0035 C3                CLR     C
0036 7405              MOV     A,#05H
0038 9F                SUBB    A,R7
0039 FF                MOV     R7,A
C51 COMPILER V9.50a   SHARK                                                                07/26/2013 11:07:39 PAGE 140 

003A E4                CLR     A
003B 9400              SUBB    A,#00H
003D FE                MOV     R6,A
003E 74C0              MOV     A,#LOW sata+0C0H
0040 2F                ADD     A,R7
0041 F582              MOV     DPL,A
0043 74FF              MOV     A,#HIGH sata+0C0H
0045 3E                ADDC    A,R6
0046 F583              MOV     DPH,A
0048 E0                MOVX    A,@DPTR
0049 FF                MOV     R7,A
004A ED                MOV     A,R5
004B C3                CLR     C
004C 9F                SUBB    A,R7
004D 5003              JNC     ?C0588
004F 7F00              MOV     R7,#00H
0051 22                RET     
                                           ; SOURCE LINE # 281
0052         ?C0588:
0052 7800        R     MOV     R0,#LOW i
0054 06                INC     @R0
0055 E6                MOV     A,@R0
0056 B406AE            CJNE    A,#06H,?C0586
0059         ?C0587:
                                           ; SOURCE LINE # 282
0059 7F01              MOV     R7,#01H
                                           ; SOURCE LINE # 283
005B         ?C0590:
005B 22                RET     
             ; FUNCTION trim_check_lba (END)

             ; FUNCTION L?0917 (BEGIN)
0000 7B01              MOV     R3,#01H
0002 7D01              MOV     R5,#01H
0004 7F00              MOV     R7,#00H
0006 7E01              MOV     R6,#01H
             ; FUNCTION _security_update_id (BEGIN)
                                           ; SOURCE LINE # 12
0008 8E00        R     MOV     base_addr,R6
000A 8F00        R     MOV     base_addr+01H,R7
;---- Variable 'which' assigned to Register 'R5' ----
;---- Variable 'zro' assigned to Register 'R3' ----
                                           ; SOURCE LINE # 13
                                           ; SOURCE LINE # 14
000C E4                CLR     A
000D 2F                ADD     A,R7
000E F582              MOV     DPL,A
0010 747A              MOV     A,#07AH
0012 3E                ADDC    A,R6
0013 F583              MOV     DPH,A
0015 E4                CLR     A
0016 93                MOVC    A,@A+DPTR
0017 F500        R     MOV     temp_id,A
                                           ; SOURCE LINE # 15
0019 EB                MOV     A,R3
001A 700F              JNZ     ?C0592
001C 04                INC     A
001D A805              MOV     R0,AR5
001F 08                INC     R0
0020 8002              SJMP    ?C0812
0022         ?C0811:
0022 C3                CLR     C
C51 COMPILER V9.50a   SHARK                                                                07/26/2013 11:07:39 PAGE 141 

0023 33                RLC     A
0024         ?C0812:
0024 D8FC              DJNZ    R0,?C0811
0026 F4                CPL     A
0027 5200        R     ANL     temp_id,A
0029 800F              SJMP    ?C0593
002B         ?C0592:
                                           ; SOURCE LINE # 16
002B AF05              MOV     R7,AR5
002D 7401              MOV     A,#01H
002F A807              MOV     R0,AR7
0031 08                INC     R0
0032 8002              SJMP    ?C0814
0034         ?C0813:
0034 C3                CLR     C
0035 33                RLC     A
0036         ?C0814:
0036 D8FC              DJNZ    R0,?C0813
0038 4200        R     ORL     temp_id,A
003A         ?C0593:
                                           ; SOURCE LINE # 17
003A 438710            ORL     TS8052_PCON,#010H
                                           ; SOURCE LINE # 18
003D E4                CLR     A
003E 2500        R     ADD     A,base_addr+01H
0040 FF                MOV     R7,A
0041 E500        R     MOV     A,base_addr
0043 347A              ADDC    A,#07AH
0045 8F82              MOV     DPL,R7
0047 F583              MOV     DPH,A
0049 E500        R     MOV     A,temp_id
004B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 19
004C 5387EF            ANL     TS8052_PCON,#0EFH
                                           ; SOURCE LINE # 20
004F 22                RET     
             ; FUNCTION _security_update_id (END)

             ; FUNCTION security_set_pwd (BEGIN)
                                           ; SOURCE LINE # 23
                                           ; SOURCE LINE # 24
                                           ; SOURCE LINE # 25
0000 120000      R     LCALL   L?0906
                                           ; SOURCE LINE # 26
0003 120000      R     LCALL   L?0918
                                           ; SOURCE LINE # 27
0006 30EA0B            JNB     sata_burst_abort,?C0595
                                           ; SOURCE LINE # 28
                                           ; SOURCE LINE # 29
0009 D200        R     SETB    g_security_abort
                                           ; SOURCE LINE # 30
000B 120000      R     LCALL   reset_engine
                                           ; SOURCE LINE # 32
000E 120000      R     LCALL   L?0902
                                           ; SOURCE LINE # 33
0011 020000      R     LJMP    reset_engine
                                           ; SOURCE LINE # 36
0014         ?C0595:
                                           ; SOURCE LINE # 38
0014 75F410            MOV     SFR_ext_sram_cntl,#010H
                                           ; SOURCE LINE # 39
0017 E4                CLR     A
C51 COMPILER V9.50a   SHARK                                                                07/26/2013 11:07:39 PAGE 142 

0018 F5F2              MOV     SFR_ext_sram_addr+01H,A
001A F5F1              MOV     SFR_ext_sram_addr,A
                                           ; SOURCE LINE # 40
001C 85F300      R     MOV     temp_data0,SFR_ext_sram_data
                                           ; SOURCE LINE # 41
001F 85F300      R     MOV     temp_data1,SFR_ext_sram_data
                                           ; SOURCE LINE # 42
0022 F5F4              MOV     SFR_ext_sram_cntl,A
                                           ; SOURCE LINE # 43
0024 E500        R     MOV     A,temp_data0
0026 20E027            JB      ACC.0,?C0597
                                           ; SOURCE LINE # 44
                                           ; SOURCE LINE # 46
0029 7B50              MOV     R3,#050H
002B 120000      R     LCALL   L?0899
                                           ; SOURCE LINE # 47
002E 120000      R     LCALL   L?0917
                                           ; SOURCE LINE # 48
0031 7FAA              MOV     R7,#0AAH
0033 1E                DEC     R6
0034 120000      R     LCALL   _security_update_id
                                           ; SOURCE LINE # 49
0037 E500        R     MOV     A,temp_data1
0039 20E008            JB      ACC.0,?C0598
003C E4                CLR     A
003D 1B                DEC     R3
003E 1D                DEC     R5
003F 04                INC     A
0040 FF                MOV     R7,A
0041 0E                INC     R6
0042 8007              SJMP    ?C0858
0044         ?C0598:
                                           ; SOURCE LINE # 50
0044 7B01              MOV     R3,#01H
0046 E4                CLR     A
0047 FD                MOV     R5,A
0048 04                INC     A
0049 FF                MOV     R7,A
004A FE                MOV     R6,A
004B         ?C0858:
004B 120000      R     LCALL   _security_update_id
004E         ?C0599:
                                           ; SOURCE LINE # 52
                                           ; SOURCE LINE # 53
                                           ; SOURCE LINE # 54
                                           ; SOURCE LINE # 55
                                           ; SOURCE LINE # 56
                                           ; SOURCE LINE # 57
004E 8036              SJMP    ?C0859
0050         ?C0597:
                                           ; SOURCE LINE # 59
                                           ; SOURCE LINE # 62
0050 7B51              MOV     R3,#051H
0052 120000      R     LCALL   L?0899
                                           ; SOURCE LINE # 63
0055 75F410            MOV     SFR_ext_sram_cntl,#010H
                                           ; SOURCE LINE # 64
0058 75F200            MOV     SFR_ext_sram_addr+01H,#00H
005B 75F122            MOV     SFR_ext_sram_addr,#022H
                                           ; SOURCE LINE # 65
005E 85F300      R     MOV     temp_data0,SFR_ext_sram_data
                                           ; SOURCE LINE # 66
C51 COMPILER V9.50a   SHARK                                                                07/26/2013 11:07:39 PAGE 143 

0061 85F300      R     MOV     temp_data1,SFR_ext_sram_data
                                           ; SOURCE LINE # 67
0064 E500        R     MOV     A,temp_data0
0066 7004              JNZ     ?C0602
0068 E500        R     MOV     A,temp_data1
006A 601A              JZ      ?C0601
006C         ?C0602:
006C E500        R     MOV     A,temp_data0
006E B4FF05            CJNE    A,#0FFH,?C0603
0071 E500        R     MOV     A,temp_data1
0073 F4                CPL     A
0074 6010              JZ      ?C0601
0076         ?C0603:
                                           ; SOURCE LINE # 68
                                           ; SOURCE LINE # 69
0076 438710            ORL     TS8052_PCON,#010H
                                           ; SOURCE LINE # 70
0079 907AB8            MOV     DPTR,#07AB8H
007C E500        R     MOV     A,temp_data0
007E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 71
007F A3                INC     DPTR
0080 E500        R     MOV     A,temp_data1
0082 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 72
0083 5387EF            ANL     TS8052_PCON,#0EFH
                                           ; SOURCE LINE # 73
0086         ?C0601:
                                           ; SOURCE LINE # 75
0086         ?C0859:
0086 7B50              MOV     R3,#050H
0088 7D01              MOV     R5,#01H
008A 7F20              MOV     R7,#020H
008C 120000      R     LCALL   _chp_burst
                                           ; SOURCE LINE # 76
008F E4                CLR     A
0090 F5F4              MOV     SFR_ext_sram_cntl,A
                                           ; SOURCE LINE # 77
0092 F5F2              MOV     SFR_ext_sram_addr+01H,A
0094 75F150            MOV     SFR_ext_sram_addr,#050H
                                           ; SOURCE LINE # 78
0097 75F301            MOV     SFR_ext_sram_data,#01H
                                           ; SOURCE LINE # 79
009A 7B50              MOV     R3,#050H
009C 120000      R     LCALL   L?0899
                                           ; SOURCE LINE # 80
                                           ; SOURCE LINE # 81
009F         ?C0596:
009F 22                RET     
             ; FUNCTION security_set_pwd (END)

             ; FUNCTION security_unlock (BEGIN)
                                           ; SOURCE LINE # 84
                                           ; SOURCE LINE # 85
                                           ; SOURCE LINE # 86
0000 120000      R     LCALL   L?0906
                                           ; SOURCE LINE # 87
0003 0D                INC     R5
0004 7F80              MOV     R7,#080H
0006 120000      R     LCALL   _sata_burst
                                           ; SOURCE LINE # 90
0009 30EA0A            JNB     sata_burst_abort,?C0604
C51 COMPILER V9.50a   SHARK                                                                07/26/2013 11:07:39 PAGE 144 

                                           ; SOURCE LINE # 91
                                           ; SOURCE LINE # 92
000C D200        R     SETB    g_security_abort
                                           ; SOURCE LINE # 94
000E 7F5B              MOV     R7,#05BH
0010 120000      R     LCALL   _updata_smart
                                           ; SOURCE LINE # 95
0013 020000      R     LJMP    reset_engine
                                           ; SOURCE LINE # 98
0016         ?C0604:
                                           ; SOURCE LINE # 102
0016 120000      R     LCALL   check_pwd
                                           ; SOURCE LINE # 103
0019 200003      R     JB      g_security_pass,?C0606
                                           ; SOURCE LINE # 104
                                           ; SOURCE LINE # 105
001C D200        R     SETB    g_security_abort
001E 22                RET     
                                           ; SOURCE LINE # 107
001F         ?C0606:
                                           ; SOURCE LINE # 109
                                           ; SOURCE LINE # 110
001F E4                CLR     A
0020 FB                MOV     R3,A
0021 7D02              MOV     R5,#02H
0023 FF                MOV     R7,A
0024 7E01              MOV     R6,#01H
0026 120000      R     LCALL   _security_update_id
                                           ; SOURCE LINE # 111
0029 7B50              MOV     R3,#050H
002B 1D                DEC     R5
002C 7F20              MOV     R7,#020H
002E 120000      R     LCALL   _chp_burst
                                           ; SOURCE LINE # 112
0031 E4                CLR     A
0032 F5F4              MOV     SFR_ext_sram_cntl,A
                                           ; SOURCE LINE # 113
0034 F5F2              MOV     SFR_ext_sram_addr+01H,A
0036 75F160            MOV     SFR_ext_sram_addr,#060H
                                           ; SOURCE LINE # 114
0039 8500F3      R     MOV     SFR_ext_sram_data,security_mode
                                           ; SOURCE LINE # 115
003C 7B50              MOV     R3,#050H
003E 120000      R     LCALL   L?0899
                                           ; SOURCE LINE # 116
                                           ; SOURCE LINE # 118
0041         ?C0605:
0041 22                RET     
             ; FUNCTION security_unlock (END)

             ; FUNCTION check_pwd (BEGIN)
                                           ; SOURCE LINE # 120
                                           ; SOURCE LINE # 121
                                           ; SOURCE LINE # 154
0000 C200        R     CLR     g_security_pass
                                           ; SOURCE LINE # 155
0002 75F200            MOV     SFR_ext_sram_addr+01H,#00H
0005 75F102            MOV     SFR_ext_sram_addr,#02H
                                           ; SOURCE LINE # 156
0008 75F410            MOV     SFR_ext_sram_cntl,#010H
                                           ; SOURCE LINE # 157
000B 85F300      R     MOV     temp_data0,SFR_ext_sram_data
C51 COMPILER V9.50a   SHARK                                                                07/26/2013 11:07:39 PAGE 145 

                                           ; SOURCE LINE # 158
000E 85F300      R     MOV     temp_data1,SFR_ext_sram_data
                                           ; SOURCE LINE # 159
0011 85F300      R     MOV     temp_data2,SFR_ext_sram_data
                                           ; SOURCE LINE # 160
0014 85F300      R     MOV     temp_data3,SFR_ext_sram_data
                                           ; SOURCE LINE # 161
0017 85F300      R     MOV     temp_data4,SFR_ext_sram_data
                                           ; SOURCE LINE # 162
001A 85F300      R     MOV     temp_data5,SFR_ext_sram_data
                                           ; SOURCE LINE # 163
001D 85F300      R     MOV     temp_data6,SFR_ext_sram_data
                                           ; SOURCE LINE # 164
0020 85F300      R     MOV     temp_data7,SFR_ext_sram_data
                                           ; SOURCE LINE # 165
0023 85F300      R     MOV     temp_data8,SFR_ext_sram_data
                                           ; SOURCE LINE # 166
0026 85F300      R     MOV     temp_data9,SFR_ext_sram_data
                                           ; SOURCE LINE # 167
0029 85F300      R     MOV     temp_data10,SFR_ext_sram_data
                                           ; SOURCE LINE # 168
002C 85F300      R     MOV     temp_data11,SFR_ext_sram_data
                                           ; SOURCE LINE # 169
002F 85F300      R     MOV     temp_data12,SFR_ext_sram_data
                                           ; SOURCE LINE # 170
0032 85F300      R     MOV     temp_data13,SFR_ext_sram_data
                                           ; SOURCE LINE # 171
0035 85F300      R     MOV     temp_data14,SFR_ext_sram_data
                                           ; SOURCE LINE # 172
0038 85F300      R     MOV     temp_data15,SFR_ext_sram_data
                                           ; SOURCE LINE # 173
003B 85F300      R     MOV     temp_data16,SFR_ext_sram_data
                                           ; SOURCE LINE # 174
003E 85F300      R     MOV     temp_data17,SFR_ext_sram_data
                                           ; SOURCE LINE # 175
0041 85F300      R     MOV     temp_data18,SFR_ext_sram_data
                                           ; SOURCE LINE # 176
0044 85F300      R     MOV     temp_data19,SFR_ext_sram_data
                                           ; SOURCE LINE # 177
0047 85F300      R     MOV     temp_data20,SFR_ext_sram_data
                                           ; SOURCE LINE # 178
004A 85F300      R     MOV     temp_data21,SFR_ext_sram_data
                                           ; SOURCE LINE # 179
004D 85F300      R     MOV     temp_data22,SFR_ext_sram_data
                                           ; SOURCE LINE # 180
0050 85F300      R     MOV     temp_data23,SFR_ext_sram_data
                                           ; SOURCE LINE # 181
0053 85F300      R     MOV     temp_data24,SFR_ext_sram_data
                                           ; SOURCE LINE # 182
0056 85F300      R     MOV     temp_data25,SFR_ext_sram_data
                                           ; SOURCE LINE # 183
0059 85F300      R     MOV     temp_data26,SFR_ext_sram_data
                                           ; SOURCE LINE # 184
005C 85F300      R     MOV     temp_data27,SFR_ext_sram_data
                                           ; SOURCE LINE # 185
005F 85F300      R     MOV     temp_data28,SFR_ext_sram_data
                                           ; SOURCE LINE # 186
0062 85F300      R     MOV     temp_data29,SFR_ext_sram_data
                                           ; SOURCE LINE # 187
0065 85F300      R     MOV     temp_data30,SFR_ext_sram_data
                                           ; SOURCE LINE # 188
0068 85F300      R     MOV     temp_data31,SFR_ext_sram_data
C51 COMPILER V9.50a   SHARK                                                                07/26/2013 11:07:39 PAGE 146 

                                           ; SOURCE LINE # 189
006B E4                CLR     A
006C F5F4              MOV     SFR_ext_sram_cntl,A
                                           ; SOURCE LINE # 192
006E 750010      R     MOV     security_mode,#010H
                                           ; SOURCE LINE # 193
0071 7B50              MOV     R3,#050H
0073 7D01              MOV     R5,#01H
0075 7F20              MOV     R7,#020H
0077 120000      R     LCALL   _chp_burst
                                           ; SOURCE LINE # 196
007A 75F200            MOV     SFR_ext_sram_addr+01H,#00H
007D 75F102            MOV     SFR_ext_sram_addr,#02H
                                           ; SOURCE LINE # 197
0080 75F410            MOV     SFR_ext_sram_cntl,#010H
                                           ; SOURCE LINE # 199
0083 E500        R     MOV     A,temp_data0
0085 65F3              XRL     A,SFR_ext_sram_data
0087 6003              JZ      $ + 5H
0089 020000      R     LJMP    ?C0608
                                           ; SOURCE LINE # 200
008C E500        R     MOV     A,temp_data1
008E 65F3              XRL     A,SFR_ext_sram_data
0090 6003              JZ      $ + 5H
0092 020000      R     LJMP    ?C0608
                                           ; SOURCE LINE # 201
0095 E500        R     MOV     A,temp_data2
0097 65F3              XRL     A,SFR_ext_sram_data
0099 6003              JZ      $ + 5H
009B 020000      R     LJMP    ?C0608
                                           ; SOURCE LINE # 202
009E E500        R     MOV     A,temp_data3
00A0 65F3              XRL     A,SFR_ext_sram_data
00A2 6003              JZ      $ + 5H
00A4 020000      R     LJMP    ?C0608
                                           ; SOURCE LINE # 203
00A7 E500        R     MOV     A,temp_data4
00A9 65F3              XRL     A,SFR_ext_sram_data
00AB 6003              JZ      $ + 5H
00AD 020000      R     LJMP    ?C0608
                                           ; SOURCE LINE # 204
00B0 E500        R     MOV     A,temp_data5
00B2 65F3              XRL     A,SFR_ext_sram_data
00B4 6003              JZ      $ + 5H
00B6 020000      R     LJMP    ?C0608
                                           ; SOURCE LINE # 205
00B9 E500        R     MOV     A,temp_data6
00BB 65F3              XRL     A,SFR_ext_sram_data
00BD 6003              JZ      $ + 5H
00BF 020000      R     LJMP    ?C0608
                                           ; SOURCE LINE # 206
00C2 E500        R     MOV     A,temp_data7
00C4 65F3              XRL     A,SFR_ext_sram_data
00C6 6003              JZ      $ + 5H
00C8 020000      R     LJMP    ?C0608
                                           ; SOURCE LINE # 207
00CB E500        R     MOV     A,temp_data8
00CD 65F3              XRL     A,SFR_ext_sram_data
00CF 6003              JZ      $ + 5H
00D1 020000      R     LJMP    ?C0608
                                           ; SOURCE LINE # 208
00D4 E500        R     MOV     A,temp_data9
C51 COMPILER V9.50a   SHARK                                                                07/26/2013 11:07:39 PAGE 147 

00D6 65F3              XRL     A,SFR_ext_sram_data
00D8 6003              JZ      $ + 5H
00DA 020000      R     LJMP    ?C0608
                                           ; SOURCE LINE # 209
00DD E500        R     MOV     A,temp_data10
00DF 65F3              XRL     A,SFR_ext_sram_data
00E1 7079              JNZ     ?C0608
                                           ; SOURCE LINE # 210
00E3 E500        R     MOV     A,temp_data11
00E5 65F3              XRL     A,SFR_ext_sram_data
00E7 7073              JNZ     ?C0608
                                           ; SOURCE LINE # 211
00E9 E500        R     MOV     A,temp_data12
00EB 65F3              XRL     A,SFR_ext_sram_data
00ED 706D              JNZ     ?C0608
                                           ; SOURCE LINE # 212
00EF E500        R     MOV     A,temp_data13
00F1 65F3              XRL     A,SFR_ext_sram_data
00F3 7067              JNZ     ?C0608
                                           ; SOURCE LINE # 213
00F5 E500        R     MOV     A,temp_data14
00F7 65F3              XRL     A,SFR_ext_sram_data
00F9 7061              JNZ     ?C0608
                                           ; SOURCE LINE # 214
00FB E500        R     MOV     A,temp_data15
00FD 65F3              XRL     A,SFR_ext_sram_data
00FF 705B              JNZ     ?C0608
                                           ; SOURCE LINE # 215
0101 E500        R     MOV     A,temp_data16
0103 65F3              XRL     A,SFR_ext_sram_data
0105 7055              JNZ     ?C0608
                                           ; SOURCE LINE # 216
0107 E500        R     MOV     A,temp_data17
0109 65F3              XRL     A,SFR_ext_sram_data
010B 704F              JNZ     ?C0608
                                           ; SOURCE LINE # 217
010D E500        R     MOV     A,temp_data18
010F 65F3              XRL     A,SFR_ext_sram_data
0111 7049              JNZ     ?C0608
                                           ; SOURCE LINE # 218
0113 E500        R     MOV     A,temp_data19
0115 65F3              XRL     A,SFR_ext_sram_data
0117 7043              JNZ     ?C0608
                                           ; SOURCE LINE # 219
0119 E500        R     MOV     A,temp_data20
011B 65F3              XRL     A,SFR_ext_sram_data
011D 703D              JNZ     ?C0608
                                           ; SOURCE LINE # 220
011F E500        R     MOV     A,temp_data21
0121 65F3              XRL     A,SFR_ext_sram_data
0123 7037              JNZ     ?C0608
                                           ; SOURCE LINE # 221
0125 E500        R     MOV     A,temp_data22
0127 65F3              XRL     A,SFR_ext_sram_data
0129 7031              JNZ     ?C0608
                                           ; SOURCE LINE # 222
012B E500        R     MOV     A,temp_data23
012D 65F3              XRL     A,SFR_ext_sram_data
012F 702B              JNZ     ?C0608
                                           ; SOURCE LINE # 223
0131 E500        R     MOV     A,temp_data24
0133 65F3              XRL     A,SFR_ext_sram_data
C51 COMPILER V9.50a   SHARK                                                                07/26/2013 11:07:39 PAGE 148 

0135 7025              JNZ     ?C0608
                                           ; SOURCE LINE # 224
0137 E500        R     MOV     A,temp_data25
0139 B5F320            CJNE    A,SFR_ext_sram_data,?C0608
                                           ; SOURCE LINE # 225
013C E500        R     MOV     A,temp_data26
013E B5F31B            CJNE    A,SFR_ext_sram_data,?C0608
                                           ; SOURCE LINE # 226
0141 E500        R     MOV     A,temp_data27
0143 B5F316            CJNE    A,SFR_ext_sram_data,?C0608
                                           ; SOURCE LINE # 227
0146 E500        R     MOV     A,temp_data28
0148 B5F311            CJNE    A,SFR_ext_sram_data,?C0608
                                           ; SOURCE LINE # 228
014B E500        R     MOV     A,temp_data29
014D B5F30C            CJNE    A,SFR_ext_sram_data,?C0608
                                           ; SOURCE LINE # 229
0150 E500        R     MOV     A,temp_data30
0152 B5F307            CJNE    A,SFR_ext_sram_data,?C0608
                                           ; SOURCE LINE # 230
0155 E500        R     MOV     A,temp_data31
0157 B5F302            CJNE    A,SFR_ext_sram_data,?C0608
                                           ; SOURCE LINE # 231
015A D200        R     SETB    g_security_pass
015C         ?C0608:
                                           ; SOURCE LINE # 232
015C 300003      R     JNB     g_security_pass,$ + 6H
015F 020000      R     LJMP    check_over
0162         ?C0640:
                                           ; SOURCE LINE # 235
0162 750020      R     MOV     security_mode,#020H
                                           ; SOURCE LINE # 236
0165 7B51              MOV     R3,#051H
0167 7D01              MOV     R5,#01H
0169 7F20              MOV     R7,#020H
016B 120000      R     LCALL   _chp_burst
                                           ; SOURCE LINE # 239
016E 75F200            MOV     SFR_ext_sram_addr+01H,#00H
0171 75F102            MOV     SFR_ext_sram_addr,#02H
                                           ; SOURCE LINE # 240
0174 75F410            MOV     SFR_ext_sram_cntl,#010H
                                           ; SOURCE LINE # 242
0177 E500        R     MOV     A,temp_data0
0179 65F3              XRL     A,SFR_ext_sram_data
017B 6003              JZ      $ + 5H
017D 020000      R     LJMP    check_over
                                           ; SOURCE LINE # 243
0180 E500        R     MOV     A,temp_data1
0182 65F3              XRL     A,SFR_ext_sram_data
0184 6003              JZ      $ + 5H
0186 020000      R     LJMP    check_over
                                           ; SOURCE LINE # 244
0189 E500        R     MOV     A,temp_data2
018B 65F3              XRL     A,SFR_ext_sram_data
018D 6003              JZ      $ + 5H
018F 020000      R     LJMP    check_over
                                           ; SOURCE LINE # 245
0192 E500        R     MOV     A,temp_data3
0194 65F3              XRL     A,SFR_ext_sram_data
0196 6003              JZ      $ + 5H
0198 020000      R     LJMP    check_over
                                           ; SOURCE LINE # 246
C51 COMPILER V9.50a   SHARK                                                                07/26/2013 11:07:39 PAGE 149 

019B E500        R     MOV     A,temp_data4
019D 65F3              XRL     A,SFR_ext_sram_data
019F 6003              JZ      $ + 5H
01A1 020000      R     LJMP    check_over
                                           ; SOURCE LINE # 247
01A4 E500        R     MOV     A,temp_data5
01A6 65F3              XRL     A,SFR_ext_sram_data
01A8 6003              JZ      $ + 5H
01AA 020000      R     LJMP    check_over
                                           ; SOURCE LINE # 248
01AD E500        R     MOV     A,temp_data6
01AF 65F3              XRL     A,SFR_ext_sram_data
01B1 6003              JZ      $ + 5H
01B3 020000      R     LJMP    check_over
                                           ; SOURCE LINE # 249
01B6 E500        R     MOV     A,temp_data7
01B8 65F3              XRL     A,SFR_ext_sram_data
01BA 6003              JZ      $ + 5H
01BC 020000      R     LJMP    check_over
                                           ; SOURCE LINE # 250
01BF E500        R     MOV     A,temp_data8
01C1 65F3              XRL     A,SFR_ext_sram_data
01C3 6003              JZ      $ + 5H
01C5 020000      R     LJMP    check_over
                                           ; SOURCE LINE # 251
01C8 E500        R     MOV     A,temp_data9
01CA 65F3              XRL     A,SFR_ext_sram_data
01CC 6003              JZ      $ + 5H
01CE 020000      R     LJMP    check_over
                                           ; SOURCE LINE # 252
01D1 E500        R     MOV     A,temp_data10
01D3 65F3              XRL     A,SFR_ext_sram_data
01D5 7079              JNZ     check_over
                                           ; SOURCE LINE # 253
01D7 E500        R     MOV     A,temp_data11
01D9 65F3              XRL     A,SFR_ext_sram_data
01DB 7073              JNZ     check_over
                                           ; SOURCE LINE # 254
01DD E500        R     MOV     A,temp_data12
01DF 65F3              XRL     A,SFR_ext_sram_data
01E1 706D              JNZ     check_over
                                           ; SOURCE LINE # 255
01E3 E500        R     MOV     A,temp_data13
01E5 65F3              XRL     A,SFR_ext_sram_data
01E7 7067              JNZ     check_over
                                           ; SOURCE LINE # 256
01E9 E500        R     MOV     A,temp_data14
01EB 65F3              XRL     A,SFR_ext_sram_data
01ED 7061              JNZ     check_over
                                           ; SOURCE LINE # 257
01EF E500        R     MOV     A,temp_data15
01F1 65F3              XRL     A,SFR_ext_sram_data
01F3 705B              JNZ     check_over
                                           ; SOURCE LINE # 258
01F5 E500        R     MOV     A,temp_data16
01F7 65F3              XRL     A,SFR_ext_sram_data
01F9 7055              JNZ     check_over
                                           ; SOURCE LINE # 259
01FB E500        R     MOV     A,temp_data17
01FD 65F3              XRL     A,SFR_ext_sram_data
01FF 704F              JNZ     check_over
                                           ; SOURCE LINE # 260
C51 COMPILER V9.50a   SHARK                                                                07/26/2013 11:07:39 PAGE 150 

0201 E500        R     MOV     A,temp_data18
0203 65F3              XRL     A,SFR_ext_sram_data
0205 7049              JNZ     check_over
                                           ; SOURCE LINE # 261
0207 E500        R     MOV     A,temp_data19
0209 65F3              XRL     A,SFR_ext_sram_data
020B 7043              JNZ     check_over
                                           ; SOURCE LINE # 262
020D E500        R     MOV     A,temp_data20
020F 65F3              XRL     A,SFR_ext_sram_data
0211 703D              JNZ     check_over
                                           ; SOURCE LINE # 263
0213 E500        R     MOV     A,temp_data21
0215 65F3              XRL     A,SFR_ext_sram_data
0217 7037              JNZ     check_over
                                           ; SOURCE LINE # 264
0219 E500        R     MOV     A,temp_data22
021B 65F3              XRL     A,SFR_ext_sram_data
021D 7031              JNZ     check_over
                                           ; SOURCE LINE # 265
021F E500        R     MOV     A,temp_data23
0221 65F3              XRL     A,SFR_ext_sram_data
0223 702B              JNZ     check_over
                                           ; SOURCE LINE # 266
0225 E500        R     MOV     A,temp_data24
0227 65F3              XRL     A,SFR_ext_sram_data
0229 7025              JNZ     check_over
                                           ; SOURCE LINE # 267
022B E500        R     MOV     A,temp_data25
022D B5F320            CJNE    A,SFR_ext_sram_data,check_over
                                           ; SOURCE LINE # 268
0230 E500        R     MOV     A,temp_data26
0232 B5F31B            CJNE    A,SFR_ext_sram_data,check_over
                                           ; SOURCE LINE # 269
0235 E500        R     MOV     A,temp_data27
0237 B5F316            CJNE    A,SFR_ext_sram_data,check_over
                                           ; SOURCE LINE # 270
023A E500        R     MOV     A,temp_data28
023C B5F311            CJNE    A,SFR_ext_sram_data,check_over
                                           ; SOURCE LINE # 271
023F E500        R     MOV     A,temp_data29
0241 B5F30C            CJNE    A,SFR_ext_sram_data,check_over
                                           ; SOURCE LINE # 272
0244 E500        R     MOV     A,temp_data30
0246 B5F307            CJNE    A,SFR_ext_sram_data,check_over
                                           ; SOURCE LINE # 273
0249 E500        R     MOV     A,temp_data31
024B B5F302            CJNE    A,SFR_ext_sram_data,check_over
                                           ; SOURCE LINE # 274
024E D200        R     SETB    g_security_pass
                                           ; SOURCE LINE # 275
                                           ; SOURCE LINE # 277
0250         check_over:
                                           ; SOURCE LINE # 278
0250 E4                CLR     A
0251 F5F4              MOV     SFR_ext_sram_cntl,A
                                           ; SOURCE LINE # 280
0253         ?C0674:
0253 22                RET     
             ; FUNCTION check_pwd (END)

             ; FUNCTION security_initial (BEGIN)
C51 COMPILER V9.50a   SHARK                                                                07/26/2013 11:07:39 PAGE 151 

                                           ; SOURCE LINE # 283
                                           ; SOURCE LINE # 284
                                           ; SOURCE LINE # 285
0000 7B50              MOV     R3,#050H
0002 7D01              MOV     R5,#01H
0004 7F20              MOV     R7,#020H
0006 120000      R     LCALL   _chp_burst
                                           ; SOURCE LINE # 286
0009 E4                CLR     A
000A F5F4              MOV     SFR_ext_sram_cntl,A
                                           ; SOURCE LINE # 287
000C F5F2              MOV     SFR_ext_sram_addr+01H,A
000E 75F160            MOV     SFR_ext_sram_addr,#060H
                                           ; SOURCE LINE # 288
0011 85F300      R     MOV     security_mode,SFR_ext_sram_data
                                           ; SOURCE LINE # 291
0014 F5F2              MOV     SFR_ext_sram_addr+01H,A
0016 75F150            MOV     SFR_ext_sram_addr,#050H
                                           ; SOURCE LINE # 292
0019 E5F3              MOV     A,SFR_ext_sram_data
001B B40103            CJNE    A,#01H,?C0677
                                           ; SOURCE LINE # 293
                                           ; SOURCE LINE # 297
001E 120000      R     LCALL   L?0917
                                           ; SOURCE LINE # 299
                                           ; SOURCE LINE # 301
                                           ; SOURCE LINE # 304
                                           ; SOURCE LINE # 307
0021         ?C0677:
0021 22                RET     
             ; FUNCTION security_initial (END)

             ; FUNCTION analyze_states (BEGIN)
                                           ; SOURCE LINE # 309
                                           ; SOURCE LINE # 310
                                           ; SOURCE LINE # 311
0000 E500        R     MOV     A,security_state_flag
0002 24FE              ADD     A,#0FEH
0004 6012              JZ      ?C0680
0006 24FE              ADD     A,#0FEH
0008 6012              JZ      ?C0681
000A 14                DEC     A
000B 6016              JZ      ?C0682
000D 14                DEC     A
000E 601A              JZ      ?C0683
0010 2405              ADD     A,#05H
0012 701C              JNZ     ?C0685
                                           ; SOURCE LINE # 312
                                           ; SOURCE LINE # 313
0014         ?C0679:
                                           ; SOURCE LINE # 314
                                           ; SOURCE LINE # 315
0014 C200        R     CLR     g_security_enable
                                           ; SOURCE LINE # 316
                                           ; SOURCE LINE # 317
                                           ; SOURCE LINE # 318
0016 800D              SJMP    ?C0860
                                           ; SOURCE LINE # 319
                                           ; SOURCE LINE # 321
0018         ?C0680:
                                           ; SOURCE LINE # 322
                                           ; SOURCE LINE # 323
C51 COMPILER V9.50a   SHARK                                                                07/26/2013 11:07:39 PAGE 152 

0018 C200        R     CLR     g_security_enable
                                           ; SOURCE LINE # 324
                                           ; SOURCE LINE # 325
                                           ; SOURCE LINE # 326
001A 8010              SJMP    ?C0861
                                           ; SOURCE LINE # 327
                                           ; SOURCE LINE # 329
001C         ?C0681:
                                           ; SOURCE LINE # 330
                                           ; SOURCE LINE # 331
001C D200        R     SETB    g_security_enable
                                           ; SOURCE LINE # 332
001E D200        R     SETB    g_security_lock
                                           ; SOURCE LINE # 333
0020 C200        R     CLR     g_security_frozen
                                           ; SOURCE LINE # 334
0022 22                RET     
                                           ; SOURCE LINE # 335
                                           ; SOURCE LINE # 337
0023         ?C0682:
                                           ; SOURCE LINE # 338
                                           ; SOURCE LINE # 339
0023 D200        R     SETB    g_security_enable
                                           ; SOURCE LINE # 340
0025         ?C0860:
0025 C200        R     CLR     g_security_lock
                                           ; SOURCE LINE # 341
0027 C200        R     CLR     g_security_frozen
                                           ; SOURCE LINE # 342
0029 22                RET     
                                           ; SOURCE LINE # 343
                                           ; SOURCE LINE # 345
002A         ?C0683:
                                           ; SOURCE LINE # 346
                                           ; SOURCE LINE # 347
002A D200        R     SETB    g_security_enable
                                           ; SOURCE LINE # 348
002C         ?C0861:
002C C200        R     CLR     g_security_lock
                                           ; SOURCE LINE # 349
002E D200        R     SETB    g_security_frozen
                                           ; SOURCE LINE # 350
                                           ; SOURCE LINE # 351
                                           ; SOURCE LINE # 352
                                           ; SOURCE LINE # 353
                                           ; SOURCE LINE # 354
0030         ?C0685:
0030 22                RET     
             ; FUNCTION analyze_states (END)

             ; FUNCTION choose_lba (BEGIN)
                                           ; SOURCE LINE # 410
                                           ; SOURCE LINE # 411
                                           ; SOURCE LINE # 413
0000 E500        R     MOV     A,security_mode
0002 B4201A            CJNE    A,#020H,?C0687
                                           ; SOURCE LINE # 414
                                           ; SOURCE LINE # 415
0005 E4                CLR     A
0006 90FF57            MOV     DPTR,#sata+057H
0009 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 416
C51 COMPILER V9.50a   SHARK                                                                07/26/2013 11:07:39 PAGE 153 

000A 90FF7B            MOV     DPTR,#sata+07BH
000D E0                MOVX    A,@DPTR
000E FF                MOV     R7,A
;---- Variable 'temp_lba' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 417
000F 907FBC            MOV     DPTR,#07FBCH
0012 E4                CLR     A
0013 93                MOVC    A,@A+DPTR
0014 90FF57            MOV     DPTR,#sata+057H
0017 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 418
0018 EF                MOV     A,R7
0019 2403              ADD     A,#03H
001B 90FF7B            MOV     DPTR,#sata+07BH
001E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 425
                                           ; SOURCE LINE # 427
001F         ?C0687:
001F 22                RET     
             ; FUNCTION choose_lba (END)

             ; FUNCTION main (BEGIN)
                                           ; SOURCE LINE # 30
                                           ; SOURCE LINE # 31
                                           ; SOURCE LINE # 32
0000 120000      R     LCALL   init
0003         ?C0688:
                                           ; SOURCE LINE # 34
                                           ; SOURCE LINE # 35
                                           ; SOURCE LINE # 42
0003 7800        R     MOV     R0,#LOW g_current_fis_num
0005 E6                MOV     A,@R0
0006 659F              XRL     A,SFR_fis_num
0008 7003              JNZ     $ + 5H
000A 020000      R     LJMP    ?C0764
                                           ; SOURCE LINE # 43
                                           ; SOURCE LINE # 45
000D 90FFF0            MOV     DPTR,#sata+0F0H
0010 7444              MOV     A,#044H
0012 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 50
0013 A69F              MOV     @R0,SFR_fis_num
                                           ; SOURCE LINE # 53
0015 90FF1E            MOV     DPTR,#sata+01EH
0018 E0                MOVX    A,@DPTR
0019 54FD              ANL     A,#0FDH
001B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 71
001C 120000      R     LCALL   chp_clock_on
                                           ; SOURCE LINE # 74
001F 30000C      R     JNB     g_smart_power_down_flag,?C0691
                                           ; SOURCE LINE # 75
                                           ; SOURCE LINE # 76
0022 7D01              MOV     R5,#01H
0024 7F1F              MOV     R7,#01FH
0026 120000      R     LCALL   _updata_smart
                                           ; SOURCE LINE # 77
0029 C200        R     CLR     g_smart_power_down_flag
                                           ; SOURCE LINE # 78
002B 120000      R     LCALL   reset_engine
                                           ; SOURCE LINE # 79
002E         ?C0691:
C51 COMPILER V9.50a   SHARK                                                                07/26/2013 11:07:39 PAGE 154 

                                           ; SOURCE LINE # 83
002E 120000      R     LCALL   check_sec_cnt
                                           ; SOURCE LINE # 85
0031 120000      R     LCALL   check_lba
                                           ; SOURCE LINE # 88
0034 E59E              MOV     A,SFR_quick_cmd
0036 6050              JZ      ?C0692
                                           ; SOURCE LINE # 89
                                           ; SOURCE LINE # 92
0038 C200        R     CLR     g_security_prepared
                                           ; SOURCE LINE # 93
003A 300003      R     JNB     g_security_lock,?C0693
                                           ; SOURCE LINE # 94
                                           ; SOURCE LINE # 95
                                           ; SOURCE LINE # 96
003D 020000      R     LJMP    ?C0866
0040         ?C0693:
                                           ; SOURCE LINE # 99
                                           ; SOURCE LINE # 159
0040 E59E              MOV     A,SFR_quick_cmd
0042 30E411            JNB     ACC.4,?C0695
                                           ; SOURCE LINE # 160
                                           ; SOURCE LINE # 161
0045 E5D1              MOV     A,SFR_cmd_aux
0047 20E506            JB      ACC.5,?C0696
004A 120000      R     LCALL   chs_write_handle
004D 020000      R     LJMP    ?C0863
0050         ?C0696:
                                           ; SOURCE LINE # 162
0050 120000      R     LCALL   write_handler
                                           ; SOURCE LINE # 163
0053 020000      R     LJMP    ?C0863
0056         ?C0695:
                                           ; SOURCE LINE # 169
0056 E59E              MOV     A,SFR_quick_cmd
0058 30E011            JNB     ACC.0,?C0699
                                           ; SOURCE LINE # 170
                                           ; SOURCE LINE # 172
005B E5D1              MOV     A,SFR_cmd_aux
005D 20E506            JB      ACC.5,?C0700
0060 120000      R     LCALL   chs_read_handle
0063 020000      R     LJMP    ?C0863
0066         ?C0700:
                                           ; SOURCE LINE # 173
0066 120000      R     LCALL   read_handler
                                           ; SOURCE LINE # 175
0069 020000      R     LJMP    ?C0863
006C         ?C0699:
                                           ; SOURCE LINE # 176
006C E59E              MOV     A,SFR_quick_cmd
006E 5460              ANL     A,#060H
0070 6008              JZ      ?C0703
                                           ; SOURCE LINE # 177
                                           ; SOURCE LINE # 178
0072 C200        R     CLR     g_flag_dir
                                           ; SOURCE LINE # 179
0074 120000      R     LCALL   pio_write_handler
                                           ; SOURCE LINE # 180
0077 020000      R     LJMP    ?C0863
007A         ?C0703:
                                           ; SOURCE LINE # 184
007A E59E              MOV     A,SFR_quick_cmd
C51 COMPILER V9.50a   SHARK                                                                07/26/2013 11:07:39 PAGE 155 

007C 5406              ANL     A,#06H
007E 6005              JZ      ?C0698
                                           ; SOURCE LINE # 185
                                           ; SOURCE LINE # 186
0080 D200        R     SETB    g_flag_dir
                                           ; SOURCE LINE # 187
0082 120000      R     LCALL   pio_read_handler
                                           ; SOURCE LINE # 188
0085         ?C0698:
                                           ; SOURCE LINE # 189
                                           ; SOURCE LINE # 190
                                           ; SOURCE LINE # 191
0085 020000      R     LJMP    ?C0863
0088         ?C0692:
                                           ; SOURCE LINE # 192
0088 E591              MOV     A,SFR_FIS0_0
008A 6427              XRL     A,#027H
008C 6003              JZ      $ + 5H
008E 020000      R     LJMP    ?C0707
                                           ; SOURCE LINE # 193
                                           ; SOURCE LINE # 198
0091 E595              MOV     A,SFR_FIS0_1
0093 20E703            JB      ACC.7,$ + 6H
0096 020000      R     LJMP    ?C0708
                                           ; SOURCE LINE # 200
                                           ; SOURCE LINE # 202
0099 E596              MOV     A,SFR_FIS0_2
009B 64F4              XRL     A,#0F4H
009D 6002              JZ      ?C0709
009F C200        R     CLR     g_security_prepared
00A1         ?C0709:
                                           ; SOURCE LINE # 204
00A1 E596              MOV     A,SFR_FIS0_2
00A3 B43D06            CJNE    A,#03DH,?C0710
                                           ; SOURCE LINE # 205
                                           ; SOURCE LINE # 206
00A6 120000      R     LCALL   write_handler
                                           ; SOURCE LINE # 207
                                           ; SOURCE LINE # 208
00A9 020000      R     LJMP    ?C0868
00AC         ?C0710:
                                           ; SOURCE LINE # 209
00AC E596              MOV     A,SFR_FIS0_2
00AE B4CE08            CJNE    A,#0CEH,?C0712
                                           ; SOURCE LINE # 210
                                           ; SOURCE LINE # 211
00B1 C200        R     CLR     g_flag_dir
                                           ; SOURCE LINE # 212
00B3 120000      R     LCALL   pio_write_handler
                                           ; SOURCE LINE # 213
00B6         ?C0864:
                                           ; SOURCE LINE # 214
00B6 020000      R     LJMP    ?C0868
00B9         ?C0712:
                                           ; SOURCE LINE # 231
                                           ; SOURCE LINE # 232
00B9 120000      R     LCALL   reset_engine
                                           ; SOURCE LINE # 233
00BC AF96              MOV     R7,SFR_FIS0_2
00BE EF                MOV     A,R7
00BF 120000      E     LCALL   ?C?CCASE
00C2 0000        R     DW      ?C0715
C51 COMPILER V9.50a   SHARK                                                                07/26/2013 11:07:39 PAGE 156 

00C4 00                DB      00H
00C5 0000        R     DW      ?C0731
00C7 06                DB      06H
00C8 0000        R     DW      ?C0719
00CA 10                DB      010H
00CB 0000        R     DW      ?C0724
00CD 40                DB      040H
00CE 0000        R     DW      ?C0727
00D0 42                DB      042H
00D1 0000        R     DW      ?C0716
00D3 70                DB      070H
00D4 0000        R     DW      ?C0720
00D6 90                DB      090H
00D7 0000        R     DW      ?C0721
00D9 91                DB      091H
00DA 0000        R     DW      ?C0753
00DC 92                DB      092H
00DD 0000        R     DW      ?C0730
00DF B0                DB      0B0H
00E0 0000        R     DW      ?C0742
00E2 C6                DB      0C6H
00E3 0000        R     DW      ?C0740
00E5 E0                DB      0E0H
00E6 0000        R     DW      ?C0737
00E8 E1                DB      0E1H
00E9 0000        R     DW      ?C0739
00EB E2                DB      0E2H
00EC 0000        R     DW      ?C0736
00EE E3                DB      0E3H
00EF 0000        R     DW      ?C0735
00F1 E5                DB      0E5H
00F2 0000        R     DW      ?C0738
00F4 E6                DB      0E6H
00F5 0000        R     DW      ?C0722
00F7 E7                DB      0E7H
00F8 0000        R     DW      ?C0723
00FA EA                DB      0EAH
00FB 0000        R     DW      ?C0741
00FD EC                DB      0ECH
00FE 0000        R     DW      ?C0745
0100 EF                DB      0EFH
0101 0000        R     DW      ?C0747
0103 F1                DB      0F1H
0104 0000        R     DW      ?C0750
0106 F2                DB      0F2H
0107 0000        R     DW      ?C0746
0109 F5                DB      0F5H
010A 0000              DW      00H
010C 0000        R     DW      ?C0756
                                           ; SOURCE LINE # 234
                                           ; SOURCE LINE # 263
010E         ?C0715:
                                           ; SOURCE LINE # 264
                                           ; SOURCE LINE # 266
010E         ?C0862:
                                           ; SOURCE LINE # 267
010E 020000      R     LJMP    ?C0866
                                           ; SOURCE LINE # 268
                                           ; SOURCE LINE # 269
0111         ?C0716:
                                           ; SOURCE LINE # 270
                                           ; SOURCE LINE # 273
C51 COMPILER V9.50a   SHARK                                                                07/26/2013 11:07:39 PAGE 157 

0111 7BFF              MOV     R3,#0FFH
0113 300006      R     JNB     g_flag_lba_err,?C0717
0116 7D04              MOV     R5,#04H
0118 7F51              MOV     R7,#051H
011A 8004              SJMP    ?C0867
011C         ?C0717:
                                           ; SOURCE LINE # 274
011C E4                CLR     A
011D FD                MOV     R5,A
011E 7F50              MOV     R7,#050H
0120         ?C0867:
0120 120000      R     LCALL   _tx_fis_34
0123         ?C0718:
                                           ; SOURCE LINE # 275
0123         ?C0863:
0123         ?C0865:
                                           ; SOURCE LINE # 276
0123 802E              SJMP    ?C0868
                                           ; SOURCE LINE # 277
                                           ; SOURCE LINE # 278
0125         ?C0719:
                                           ; SOURCE LINE # 279
                                           ; SOURCE LINE # 281
                                           ; SOURCE LINE # 282
0125 8065              SJMP    ?C0869
                                           ; SOURCE LINE # 283
                                           ; SOURCE LINE # 284
0127         ?C0720:
                                           ; SOURCE LINE # 285
                                           ; SOURCE LINE # 286
0127 120000      R     LCALL   init_tx_fis
                                           ; SOURCE LINE # 287
012A 7BFF              MOV     R3,#0FFH
012C 7D01              MOV     R5,#01H
                                           ; SOURCE LINE # 288
012E 020000      R     LJMP    ?C0889
                                           ; SOURCE LINE # 289
                                           ; SOURCE LINE # 290
0131         ?C0721:
                                           ; SOURCE LINE # 291
                                           ; SOURCE LINE # 294
0131 120000      R     LCALL   init_dev_para
                                           ; SOURCE LINE # 295
0134 020000      R     LJMP    ?C0706
                                           ; SOURCE LINE # 296
                                           ; SOURCE LINE # 297
0137         ?C0722:
                                           ; SOURCE LINE # 298
                                           ; SOURCE LINE # 304
                                           ; SOURCE LINE # 305
                                           ; SOURCE LINE # 306
                                           ; SOURCE LINE # 307
0137 8000              SJMP    ?C0871
                                           ; SOURCE LINE # 308
                                           ; SOURCE LINE # 309
0139         ?C0723:
                                           ; SOURCE LINE # 310
                                           ; SOURCE LINE # 311
0139         ?C0871:
0139 120000      R     LCALL   flush_delay
                                           ; SOURCE LINE # 312
013C 120000      R     LCALL   L?0908
C51 COMPILER V9.50a   SHARK                                                                07/26/2013 11:07:39 PAGE 158 

                                           ; SOURCE LINE # 313
                                           ; SOURCE LINE # 314
013F 8026              SJMP    ?C0874
                                           ; SOURCE LINE # 315
                                           ; SOURCE LINE # 316
0141         ?C0724:
                                           ; SOURCE LINE # 317
                                           ; SOURCE LINE # 318
0141 7BFF              MOV     R3,#0FFH
0143 300006      R     JNB     g_flag_lba_err,?C0725
0146 7D04              MOV     R5,#04H
0148 7F51              MOV     R7,#051H
014A 8004              SJMP    ?C0873
014C         ?C0725:
                                           ; SOURCE LINE # 319
014C E4                CLR     A
014D FD                MOV     R5,A
014E 7F50              MOV     R7,#050H
0150         ?C0873:
0150 120000      R     LCALL   _tx_fis_34
0153         ?C0726:
                                           ; SOURCE LINE # 320
0153         ?C0868:
0153         ?C0872:
                                           ; SOURCE LINE # 321
0153 8012              SJMP    ?C0874
                                           ; SOURCE LINE # 322
                                           ; SOURCE LINE # 323
0155         ?C0727:
                                           ; SOURCE LINE # 324
                                           ; SOURCE LINE # 325
0155 7BFF              MOV     R3,#0FFH
0157 300006      R     JNB     g_flag_lba_err,?C0728
015A 7D04              MOV     R5,#04H
015C 7F51              MOV     R7,#051H
015E 8004              SJMP    ?C0875
0160         ?C0728:
                                           ; SOURCE LINE # 326
0160 E4                CLR     A
0161 FD                MOV     R5,A
0162 7F50              MOV     R7,#050H
0164         ?C0875:
0164 120000      R     LCALL   _tx_fis_34
0167         ?C0729:
                                           ; SOURCE LINE # 327
0167         ?C0874:
0167 7500FF      R     MOV     g_power_mode,#0FFH
                                           ; SOURCE LINE # 328
016A 020000      R     LJMP    ?C0706
                                           ; SOURCE LINE # 329
                                           ; SOURCE LINE # 333
016D         ?C0730:
                                           ; SOURCE LINE # 334
                                           ; SOURCE LINE # 336
016D 120000      R     LCALL   smart_handler
                                           ; SOURCE LINE # 337
0170 020000      R     LJMP    ?C0706
                                           ; SOURCE LINE # 338
                                           ; SOURCE LINE # 343
0173         ?C0731:
                                           ; SOURCE LINE # 344
                                           ; SOURCE LINE # 348
C51 COMPILER V9.50a   SHARK                                                                07/26/2013 11:07:39 PAGE 159 

0173 90FF15            MOV     DPTR,#sata+015H
0176 E0                MOVX    A,@DPTR
0177 7013              JNZ     ?C0733
0179 90FF14            MOV     DPTR,#sata+014H
017C E0                MOVX    A,@DPTR
017D D3                SETB    C
017E 9420              SUBB    A,#020H
0180 500A              JNC     ?C0733
0182 A3                INC     DPTR
0183 E0                MOVX    A,@DPTR
0184 700D              JNZ     ?C0732
0186 90FF14            MOV     DPTR,#sata+014H
0189 E0                MOVX    A,@DPTR
018A 7007              JNZ     ?C0732
018C         ?C0733:
                                           ; SOURCE LINE # 349
                                           ; SOURCE LINE # 350
018C         ?C0869:
018C 7BFF              MOV     R3,#0FFH
018E E4                CLR     A
018F FD                MOV     R5,A
0190         ?C0870:
                                           ; SOURCE LINE # 351
0190 020000      R     LJMP    ?C0889
0193         ?C0732:
                                           ; SOURCE LINE # 352
0193 120000      R     LCALL   trim_handler
                                           ; SOURCE LINE # 357
0196 020000      R     LJMP    ?C0706
                                           ; SOURCE LINE # 359
                                           ; SOURCE LINE # 365
0199         ?C0735:
                                           ; SOURCE LINE # 366
                                           ; SOURCE LINE # 367
0199 90FF14            MOV     DPTR,#sata+014H
019C E500        R     MOV     A,g_power_mode
019E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 368
019F 7BFF              MOV     R3,#0FFH
01A1 E4                CLR     A
01A2 FD                MOV     R5,A
01A3         ?C0876:
                                           ; SOURCE LINE # 370
01A3 020000      R     LJMP    ?C0889
                                           ; SOURCE LINE # 371
                                           ; SOURCE LINE # 372
01A6         ?C0736:
                                           ; SOURCE LINE # 373
                                           ; SOURCE LINE # 374
01A6 120000      R     LCALL   flush_delay
                                           ; SOURCE LINE # 375
01A9 750080      R     MOV     g_power_mode,#080H
                                           ; SOURCE LINE # 376
01AC 7BFF              MOV     R3,#0FFH
01AE E4                CLR     A
01AF FD                MOV     R5,A
01B0         ?C0877:
                                           ; SOURCE LINE # 377
01B0 020000      R     LJMP    ?C0889
                                           ; SOURCE LINE # 378
                                           ; SOURCE LINE # 379
01B3         ?C0737:
C51 COMPILER V9.50a   SHARK                                                                07/26/2013 11:07:39 PAGE 160 

                                           ; SOURCE LINE # 380
                                           ; SOURCE LINE # 381
01B3 120000      R     LCALL   flush_delay
                                           ; SOURCE LINE # 382
01B6 750080      R     MOV     g_power_mode,#080H
                                           ; SOURCE LINE # 383
01B9 7BFF              MOV     R3,#0FFH
01BB E4                CLR     A
01BC FD                MOV     R5,A
01BD         ?C0878:
                                           ; SOURCE LINE # 384
01BD 8075              SJMP    ?C0889
                                           ; SOURCE LINE # 385
                                           ; SOURCE LINE # 386
01BF         ?C0738:
                                           ; SOURCE LINE # 387
                                           ; SOURCE LINE # 388
01BF 120000      R     LCALL   flush_delay
                                           ; SOURCE LINE # 389
01C2 750001      R     MOV     g_power_mode,#01H
                                           ; SOURCE LINE # 390
01C5 7BFF              MOV     R3,#0FFH
01C7 E4                CLR     A
01C8 FD                MOV     R5,A
01C9         ?C0879:
                                           ; SOURCE LINE # 391
01C9 8069              SJMP    ?C0889
                                           ; SOURCE LINE # 392
                                           ; SOURCE LINE # 393
01CB         ?C0739:
                                           ; SOURCE LINE # 394
                                           ; SOURCE LINE # 395
01CB 120000      R     LCALL   flush_delay
                                           ; SOURCE LINE # 396
01CE E4                CLR     A
01CF F500        R     MOV     g_power_mode,A
                                           ; SOURCE LINE # 397
01D1 7BFF              MOV     R3,#0FFH
01D3 FD                MOV     R5,A
01D4         ?C0880:
                                           ; SOURCE LINE # 398
01D4 805E              SJMP    ?C0889
                                           ; SOURCE LINE # 399
                                           ; SOURCE LINE # 400
01D6         ?C0740:
                                           ; SOURCE LINE # 401
                                           ; SOURCE LINE # 402
01D6 120000      R     LCALL   flush_delay
                                           ; SOURCE LINE # 403
01D9 E4                CLR     A
01DA F500        R     MOV     g_power_mode,A
                                           ; SOURCE LINE # 404
01DC 7BFF              MOV     R3,#0FFH
01DE FD                MOV     R5,A
01DF         ?C0881:
                                           ; SOURCE LINE # 405
01DF 8053              SJMP    ?C0889
                                           ; SOURCE LINE # 406
                                           ; SOURCE LINE # 410
01E1         ?C0741:
                                           ; SOURCE LINE # 411
                                           ; SOURCE LINE # 412
C51 COMPILER V9.50a   SHARK                                                                07/26/2013 11:07:39 PAGE 161 

01E1 120000      R     LCALL   identify_device
                                           ; SOURCE LINE # 413
01E4 020000      R     LJMP    ?C0706
                                           ; SOURCE LINE # 414
                                           ; SOURCE LINE # 415
01E7         ?C0742:
                                           ; SOURCE LINE # 416
                                           ; SOURCE LINE # 417
01E7 90FF8C            MOV     DPTR,#sata+08CH
01EA E0                MOVX    A,@DPTR
01EB 7BFF              MOV     R3,#0FFH
01ED B40104            CJNE    A,#01H,?C0743
                                           ; SOURCE LINE # 418
                                           ; SOURCE LINE # 424
01F0 E4                CLR     A
01F1 FD                MOV     R5,A
01F2         ?C0882:
                                           ; SOURCE LINE # 425
01F2 8040              SJMP    ?C0889
                                           ; SOURCE LINE # 426
01F4         ?C0743:
                                           ; SOURCE LINE # 428
                                           ; SOURCE LINE # 429
                                           ; SOURCE LINE # 430
01F4 8044              SJMP    ?C0888
                                           ; SOURCE LINE # 431
                                           ; SOURCE LINE # 432
                                           ; SOURCE LINE # 433
01F6         ?C0745:
                                           ; SOURCE LINE # 434
                                           ; SOURCE LINE # 435
01F6 120000      R     LCALL   set_feature
                                           ; SOURCE LINE # 437
01F9 020000      R     LJMP    ?C0706
                                           ; SOURCE LINE # 438
                                           ; SOURCE LINE # 439
01FC         ?C0746:
                                           ; SOURCE LINE # 440
                                           ; SOURCE LINE # 448
01FC 7BFF              MOV     R3,#0FFH
01FE E4                CLR     A
01FF FD                MOV     R5,A
0200         ?C0883:
                                           ; SOURCE LINE # 449
0200 8032              SJMP    ?C0889
                                           ; SOURCE LINE # 450
                                           ; SOURCE LINE # 455
0202         ?C0747:
                                           ; SOURCE LINE # 456
                                           ; SOURCE LINE # 458
0202 120000      R     LCALL   security_set_pwd
                                           ; SOURCE LINE # 459
0205 300006      R     JNB     g_security_abort,?C0748
                                           ; SOURCE LINE # 460
                                           ; SOURCE LINE # 461
0208 C200        R     CLR     g_security_abort
                                           ; SOURCE LINE # 462
020A 7BFF              MOV     R3,#0FFH
020C         ?C0884:
                                           ; SOURCE LINE # 463
020C 802C              SJMP    ?C0888
020E         ?C0748:
C51 COMPILER V9.50a   SHARK                                                                07/26/2013 11:07:39 PAGE 162 

                                           ; SOURCE LINE # 464
020E 7BFF              MOV     R3,#0FFH
0210 E4                CLR     A
0211 FD                MOV     R5,A
0212         ?C0885:
                                           ; SOURCE LINE # 466
0212 8020              SJMP    ?C0889
                                           ; SOURCE LINE # 467
                                           ; SOURCE LINE # 469
0214         ?C0750:
                                           ; SOURCE LINE # 470
                                           ; SOURCE LINE # 472
0214 120000      R     LCALL   security_unlock
                                           ; SOURCE LINE # 473
0217 300006      R     JNB     g_security_abort,?C0751
                                           ; SOURCE LINE # 474
                                           ; SOURCE LINE # 475
021A C200        R     CLR     g_security_abort
                                           ; SOURCE LINE # 476
021C 7BFF              MOV     R3,#0FFH
021E         ?C0886:
                                           ; SOURCE LINE # 477
021E 801A              SJMP    ?C0888
0220         ?C0751:
                                           ; SOURCE LINE # 479
                                           ; SOURCE LINE # 482
0220 7BFF              MOV     R3,#0FFH
0222 E4                CLR     A
0223 FD                MOV     R5,A
0224         ?C0887:
                                           ; SOURCE LINE # 483
                                           ; SOURCE LINE # 485
0224 800E              SJMP    ?C0889
                                           ; SOURCE LINE # 486
                                           ; SOURCE LINE # 491
0226         ?C0753:
                                           ; SOURCE LINE # 492
                                           ; SOURCE LINE # 493
0226 90FF10            MOV     DPTR,#sata+010H
0229 E0                MOVX    A,@DPTR
022A B4CC0B            CJNE    A,#0CCH,?C0754
                                           ; SOURCE LINE # 494
                                           ; SOURCE LINE # 495
022D 120000      R     LCALL   intial_data_partition
                                           ; SOURCE LINE # 496
0230 7BFF              MOV     R3,#0FFH
0232 E4                CLR     A
0233 FD                MOV     R5,A
0234         ?C0889:
0234 7F50              MOV     R7,#050H
                                           ; SOURCE LINE # 497
0236 800E              SJMP    ?C0891
                                           ; SOURCE LINE # 498
0238         ?C0754:
                                           ; SOURCE LINE # 500
                                           ; SOURCE LINE # 501
0238         ?C0866:
0238 7BFF              MOV     R3,#0FFH
023A         ?C0888:
023A 7D04              MOV     R5,#04H
023C 7F51              MOV     R7,#051H
023E         ?C0890:
C51 COMPILER V9.50a   SHARK                                                                07/26/2013 11:07:39 PAGE 163 

                                           ; SOURCE LINE # 502
023E 8006              SJMP    ?C0891
                                           ; SOURCE LINE # 503
                                           ; SOURCE LINE # 504
                                           ; SOURCE LINE # 515
0240         ?C0756:
                                           ; SOURCE LINE # 516
                                           ; SOURCE LINE # 517
0240 7BFF              MOV     R3,#0FFH
0242 7D04              MOV     R5,#04H
0244 7F51              MOV     R7,#051H
0246         ?C0891:
0246 120000      R     LCALL   _tx_fis_34
                                           ; SOURCE LINE # 518
0249 804F              SJMP    ?C0706
                                           ; SOURCE LINE # 519
                                           ; SOURCE LINE # 520
                                           ; SOURCE LINE # 521
                                           ; SOURCE LINE # 522
024B         ?C0708:
                                           ; SOURCE LINE # 525
                                           ; SOURCE LINE # 529
024B 120000      R     LCALL   reset_engine
                                           ; SOURCE LINE # 532
024E E5D1              MOV     A,SFR_cmd_aux
0250 30E00E            JNB     ACC.0,?C0758
                                           ; SOURCE LINE # 533
0253         ?C0759:
                                           ; SOURCE LINE # 535
0253 90FF8F            MOV     DPTR,#sata+08FH
0256 E0                MOVX    A,@DPTR
0257 20E2F9            JB      ACC.2,?C0759
025A         ?C0760:
                                           ; SOURCE LINE # 539
025A E4                CLR     A
025B F5D1              MOV     SFR_cmd_aux,A
                                           ; SOURCE LINE # 540
025D 7800        R     MOV     R0,#LOW g_current_fis_num
025F A69F              MOV     @R0,SFR_fis_num
                                           ; SOURCE LINE # 542
0261         ?C0758:
                                           ; SOURCE LINE # 545
0261 E500        R     MOV     A,g_power_mode
0263 6401              XRL     A,#01H
0265 6033              JZ      ?C0706
                                           ; SOURCE LINE # 546
                                           ; SOURCE LINE # 547
0267 120000      R     LCALL   init_tx_fis
                                           ; SOURCE LINE # 550
026A 90FF34            MOV     DPTR,#sata+034H
026D E0                MOVX    A,@DPTR
026E 440C              ORL     A,#0CH
0270 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 551
0271 7F05              MOV     R7,#05H
0273 7E00              MOV     R6,#00H
0275 120000      R     LCALL   _delay
                                           ; SOURCE LINE # 552
0278 90FF1E            MOV     DPTR,#sata+01EH
027B E0                MOVX    A,@DPTR
027C 54FD              ANL     A,#0FDH
027E F0                MOVX    @DPTR,A
C51 COMPILER V9.50a   SHARK                                                                07/26/2013 11:07:39 PAGE 164 

                                           ; SOURCE LINE # 553
027F E4                CLR     A
0280 FB                MOV     R3,A
0281 7D01              MOV     R5,#01H
0283 7F50              MOV     R7,#050H
0285 120000      R     LCALL   _tx_fis_34
                                           ; SOURCE LINE # 555
0288 7F2B              MOV     R7,#02BH
028A 120000      R     LCALL   _updata_smart
                                           ; SOURCE LINE # 556
028D 120000      R     LCALL   reset_engine
                                           ; SOURCE LINE # 558
                                           ; SOURCE LINE # 559
                                           ; SOURCE LINE # 560
0290 8008              SJMP    ?C0706
0292         ?C0707:
                                           ; SOURCE LINE # 561
0292 E591              MOV     A,SFR_FIS0_0
0294 B45803            CJNE    A,#058H,?C0706
                                           ; SOURCE LINE # 562
                                           ; SOURCE LINE # 563
0297 120000      R     LCALL   bist_handler
                                           ; SOURCE LINE # 564
029A         ?C0706:
                                           ; SOURCE LINE # 565
029A E4                CLR     A
029B F5D9              MOV     SFR_watch_dog_high,A
                                           ; SOURCE LINE # 566
                                           ; SOURCE LINE # 568
                                           ; SOURCE LINE # 575
029D         ?C0764:
                                           ; SOURCE LINE # 577
029D 90FF34            MOV     DPTR,#sata+034H
02A0 E0                MOVX    A,@DPTR
02A1 30E705            JNB     ACC.7,?C0765
02A4 120000      R     LCALL   smart_card_crc
02A7 8003              SJMP    ?C0766
02A9         ?C0765:
                                           ; SOURCE LINE # 578
02A9 120000      R     LCALL   smart_block_handle
02AC         ?C0766:
                                           ; SOURCE LINE # 587
02AC E5D9              MOV     A,SFR_watch_dog_high
02AE D3                SETB    C
02AF 9430              SUBB    A,#030H
02B1 5003              JNC     $ + 5H
02B3 020000      R     LJMP    ?C0688
02B6 200003      R     JB      g_chp_active,$ + 6H
02B9 020000      R     LJMP    ?C0688
02BC 120000      R     LCALL   chp_clock_off
                                           ; SOURCE LINE # 588
02BF 020000      R     LJMP    ?C0688
             ; FUNCTION main (END)

C51 COMPILER V9.50a   SHARK                                                                07/26/2013 11:07:39 PAGE 165 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


g_security_prepared. . . . . . . . . .  ABSBIT   -----  BIT      0005H  1
security_state_flag. . . . . . . . . .  PUBLIC   DATA   U_CHAR   0000H  1
SFR_sata_burst_cnt_l . . . . . . . . .  SFR      DATA   U_CHAR   00DEH  1
g_power_mode . . . . . . . . . . . . .  PUBLIC   DATA   U_CHAR   0001H  1
wait_chp_not_ready . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
reset_engine . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0009H  -----
trim_handler . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  jj . . . . . . . . . . . . . . . . .  AUTO     IDATA  UNION    0000H  2
  sram_addr. . . . . . . . . . . . . .  AUTO     IDATA  UNION    0002H  2
  addr_temp. . . . . . . . . . . . . .  AUTO     IDATA  UNION    0004H  2
  end_of_trim. . . . . . . . . . . . .  LABEL    CODE   LABEL    -----  -----
  continue_end . . . . . . . . . . . .  LABEL    CODE   LABEL    -----  -----
DWORD. . . . . . . . . . . . . . . . .  TYPEDEF  -----  U_LONG   -----  4
g_trim_flag. . . . . . . . . . . . . .  PUBLIC   DATA   U_CHAR   0001H  1
g_lba_add. . . . . . . . . . . . . . .  PUBLIC   DATA   ARRAY    0002H  4
SFR_quick_cmd. . . . . . . . . . . . .  SFR      DATA   U_CHAR   009EH  1
g_smart_flag_6 . . . . . . . . . . . .  ABSBIT   -----  BIT      0016H  1
g_flag_dir . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0019H  1
security_mode. . . . . . . . . . . . .  PUBLIC   DATA   U_CHAR   0006H  1
SFR_cpu_reboot . . . . . . . . . . . .  SFR      DATA   U_CHAR   00F6H  1
SFR_watch_dog_high . . . . . . . . . .  SFR      DATA   U_CHAR   00D9H  1
SFR_dma_done_num_l . . . . . . . . . .  SFR      DATA   U_CHAR   00FDH  1
fetch_table_lba. . . . . . . . . . . .  PUBLIC   CODE   PROC     0004H  -----
SFR_sata_burst_base. . . . . . . . . .  SFR      DATA   U_INT    00E6H  2
TS8052_PCON. . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0087H  1
pio_read_handler . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  pio_interrput. . . . . . . . . . . .  AUTO     IDATA  U_CHAR   0000H  1
  pio_handler_err. . . . . . . . . . .  LABEL    CODE   LABEL    -----  -----
recover_lba. . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
_tx_fis_5f . . . . . . . . . . . . . .  PUBLIC   CODE   PROC     000DH  -----
  status . . . . . . . . . . . . . . .  AUTO     DATA   U_CHAR   0007H  1
  error. . . . . . . . . . . . . . . .  AUTO     DATA   U_CHAR   0005H  1
  flag . . . . . . . . . . . . . . . .  AUTO     DATA   U_CHAR   0003H  1
  seccnt . . . . . . . . . . . . . . .  AUTO     DATA   U_CHAR   0003H  1
  seccnt_ext . . . . . . . . . . . . .  AUTO     DATA   U_CHAR   0004H  1
  estatus. . . . . . . . . . . . . . .  AUTO     DATA   U_CHAR   0005H  1
TS8052_SCON. . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0098H  1
_updata_smart. . . . . . . . . . . . .  PUBLIC   CODE   PROC     000DH  -----
  smart_addr . . . . . . . . . . . . .  AUTO     DATA   U_CHAR   0000H  1
  smart_cnt. . . . . . . . . . . . . .  AUTO     DATA   U_CHAR   0001H  1
  tmp. . . . . . . . . . . . . . . . .  * REG *  DATA   U_CHAR   0007H  1
  tmp_data . . . . . . . . . . . . . .  * REG *  DATA   U_CHAR   0007H  1
TS8052_TCON. . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0088H  1
smart_card_update. . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  tmp. . . . . . . . . . . . . . . . .  * REG *  DATA   U_CHAR   0007H  1
  card_infor0. . . . . . . . . . . . .  AUTO     DATA   U_CHAR   0000H  1
  card_infor1. . . . . . . . . . . . .  AUTO     DATA   U_CHAR   0001H  1
  card_infor2. . . . . . . . . . . . .  AUTO     DATA   U_CHAR   0002H  1
  card_infor3. . . . . . . . . . . . .  AUTO     DATA   U_CHAR   0003H  1
  card_infor40 . . . . . . . . . . . .  AUTO     DATA   U_CHAR   0004H  1
  card_infor41 . . . . . . . . . . . .  AUTO     DATA   U_CHAR   0005H  1
  card_infor42 . . . . . . . . . . . .  AUTO     DATA   U_CHAR   0006H  1
  card_infor43 . . . . . . . . . . . .  AUTO     DATA   U_CHAR   0007H  1
chs_read_handle. . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  temp_sel . . . . . . . . . . . . . .  AUTO     DATA   U_CHAR   0000H  1
  temp8. . . . . . . . . . . . . . . .  * REG *  DATA   U_CHAR   0006H  1
  temp_lba_low . . . . . . . . . . . .  * REG *  DATA   U_CHAR   0007H  1
C51 COMPILER V9.50a   SHARK                                                                07/26/2013 11:07:39 PAGE 166 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  boundary_check . . . . . . . . . . .  AUTO     DATA   U_CHAR   0001H  1
  chs_read_cont. . . . . . . . . . . .  LABEL    CODE   LABEL    -----  -----
  chs_read_err . . . . . . . . . . . .  LABEL    CODE   LABEL    -----  -----
  chs_read_over. . . . . . . . . . . .  LABEL    CODE   LABEL    -----  -----
reset_engine_read_write. . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
SFR_lba_comp . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00BEH  1
g_security_enable. . . . . . . . . . .  ABSBIT   -----  BIT      0000H  1
lbaa . . . . . . . . . . . . . . . . .  PUBLIC   IDATA  ARRAY    0000H  6
check_lba. . . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
_delay . . . . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0004H  -----
  cnt. . . . . . . . . . . . . . . . .  * REG *  DATA   INT      0006H  2
  i. . . . . . . . . . . . . . . . . .  * REG *  DATA   U_INT    0004H  2
size_t . . . . . . . . . . . . . . . .  TYPEDEF  -----  U_INT    -----  2
_security_update_id. . . . . . . . . .  PUBLIC   CODE   PROC     0008H  -----
  base_addr. . . . . . . . . . . . . .  AUTO     DATA   U_INT    0000H  2
  which. . . . . . . . . . . . . . . .  * REG *  DATA   U_CHAR   0005H  1
  zro. . . . . . . . . . . . . . . . .  * REG *  DATA   U_CHAR   0003H  1
lba_adder. . . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  buf. . . . . . . . . . . . . . . . .  AUTO     IDATA  ARRAY    0000H  2
g_trim_flag_1. . . . . . . . . . . . .  ABSBIT   -----  BIT      0009H  1
SFR_dma_cntl . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00F8H  1
g_trim_flag_2. . . . . . . . . . . . .  ABSBIT   -----  BIT      000AH  1
choose_lba . . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  temp_lba . . . . . . . . . . . . . .  * REG *  DATA   U_CHAR   0007H  1
g_trim_flag_3. . . . . . . . . . . . .  ABSBIT   -----  BIT      000BH  1
g_trim_burst_abort . . . . . . . . . .  ABSBIT   -----  BIT      0008H  1
g_trim_flag_4. . . . . . . . . . . . .  ABSBIT   -----  BIT      000CH  1
g_ncq_halt . . . . . . . . . . . . . .  ABSBIT   -----  BIT      001BH  1
g_trim_flag_5. . . . . . . . . . . . .  ABSBIT   -----  BIT      000DH  1
g_smart_read_cnt . . . . . . . . . . .  PUBLIC   IDATA  U_CHAR   0006H  1
flush_delay. . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
g_tmp_addr . . . . . . . . . . . . . .  PUBLIC   IDATA  U_INT    0007H  2
g_trim_flag_6. . . . . . . . . . . . .  ABSBIT   -----  BIT      000EH  1
g_enable_write_cache . . . . . . . . .  ABSBIT   -----  BIT      001FH  1
g_trim_flag_7. . . . . . . . . . . . .  ABSBIT   -----  BIT      000FH  1
g_smart_log_find . . . . . . . . . . .  ABSBIT   -----  BIT      0014H  1
g_tmp. . . . . . . . . . . . . . . . .  PUBLIC   IDATA  ARRAY    0009H  16
g_smart_power_down_flag. . . . . . . .  ABSBIT   -----  BIT      0027H  1
pio_write_handler. . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  pio_interrput. . . . . . . . . . . .  AUTO     IDATA  U_CHAR   0000H  1
  pio_handler_err. . . . . . . . . . .  LABEL    CODE   LABEL    -----  -----
g_smart_test_status. . . . . . . . . .  PUBLIC   IDATA  U_CHAR   0019H  1
SFR_smart_cnt. . . . . . . . . . . . .  SFR      DATA   U_INT    00BCH  2
chs_write_handle . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  chs_write_cont . . . . . . . . . . .  LABEL    CODE   LABEL    -----  -----
  chs_write_err. . . . . . . . . . . .  LABEL    CODE   LABEL    -----  -----
  chs_write_over . . . . . . . . . . .  LABEL    CODE   LABEL    -----  -----
set_feature. . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  tmp. . . . . . . . . . . . . . . . .  * REG *  DATA   U_CHAR   0007H  1
SFR_sata_burst_cntl. . . . . . . . . .  SFR      DATA   U_CHAR   00E8H  1
g_flag_lba_err . . . . . . . . . . . .  ABSBIT   -----  BIT      0018H  1
check_chs. . . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
g_ncq_cont . . . . . . . . . . . . . .  ABSBIT   -----  BIT      001AH  1
_uart_tx_byte. . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  tx_data. . . . . . . . . . . . . . .  * REG *  DATA   U_CHAR   0007H  1
SFR_dma_max_num_h. . . . . . . . . . .  SFR      DATA   U_CHAR   00FCH  1
_printu. . . . . . . . . . . . . . . .  PUBLIC   CODE   PROC     002EH  -----
C51 COMPILER V9.50a   SHARK                                                                07/26/2013 11:07:39 PAGE 167 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  fmt. . . . . . . . . . . . . . . . .  AUTO     DATA   PTR      0000H  3
  ellipsis_15. . . . . . . . . . . . .  AUTO     DATA   ARRAY    0003H  15
  d. . . . . . . . . . . . . . . . . .  AUTO     IDATA  U_CHAR   0000H  1
  ch . . . . . . . . . . . . . . . . .  AUTO     IDATA  U_CHAR   0001H  1
  ap . . . . . . . . . . . . . . . . .  AUTO     DATA   PTR      0012H  3
  s. . . . . . . . . . . . . . . . . .  AUTO     DATA   PTR      0015H  1
g_current_fis_num. . . . . . . . . . .  PUBLIC   IDATA  U_CHAR   001AH  1
main . . . . . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
SFR_dma_max_num_l. . . . . . . . . . .  SFR      DATA   U_CHAR   00FBH  1
trim_addr_offset . . . . . . . . . . .  PUBLIC   IDATA  UNION    001BH  4
g_smart_write_cnt. . . . . . . . . . .  PUBLIC   IDATA  U_CHAR   001FH  1
init_tx_fis. . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
g_smart_operation. . . . . . . . . . .  ABSBIT   -----  BIT      0010H  1
read_sec_cnt_h . . . . . . . . . . . .  PUBLIC   IDATA  U_CHAR   0020H  1
sata . . . . . . . . . . . . . . . . .  PUBLIC   XDATA  STRUCT   FF00H  248
g_sec_cnt. . . . . . . . . . . . . . .  PUBLIC   DATA   UNION    0007H  2
chp_int_handler. . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  tmp_chp_en . . . . . . . . . . . . .  AUTO     DATA   U_CHAR   0000H  1
  tmp_chp_stripe . . . . . . . . . . .  AUTO     DATA   U_CHAR   0001H  1
  tmp_chp_stripe_h . . . . . . . . . .  AUTO     DATA   U_CHAR   0002H  1
  tmp_sel. . . . . . . . . . . . . . .  AUTO     DATA   U_CHAR   0003H  1
  first_print. . . . . . . . . . . . .  AUTO     DATA   U_CHAR   0004H  1
  pre_chp_status_low . . . . . . . . .  AUTO     DATA   U_CHAR   0005H  1
  tmp_chp_id . . . . . . . . . . . . .  AUTO     DATA   U_CHAR   0006H  1
  int_loop . . . . . . . . . . . . . .  LABEL    CODE   LABEL    -----  -----
  next_loop. . . . . . . . . . . . . .  LABEL    CODE   LABEL    -----  -----
  chp_int_over . . . . . . . . . . . .  LABEL    CODE   LABEL    -----  -----
_update_chp_status . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  chp_sel. . . . . . . . . . . . . . .  * REG *  DATA   U_CHAR   0007H  1
u8 . . . . . . . . . . . . . . . . . .  TYPEDEF  -----  U_CHAR   -----  1
BOOL . . . . . . . . . . . . . . . . .  TYPEDEF  -----  INT      -----  2
check_pwd. . . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  temp_data2 . . . . . . . . . . . . .  AUTO     DATA   U_CHAR   0000H  1
  temp_data3 . . . . . . . . . . . . .  AUTO     DATA   U_CHAR   0001H  1
  temp_data4 . . . . . . . . . . . . .  AUTO     DATA   U_CHAR   0002H  1
  temp_data5 . . . . . . . . . . . . .  AUTO     DATA   U_CHAR   0003H  1
  temp_data6 . . . . . . . . . . . . .  AUTO     DATA   U_CHAR   0004H  1
  temp_data7 . . . . . . . . . . . . .  AUTO     DATA   U_CHAR   0005H  1
  temp_data8 . . . . . . . . . . . . .  AUTO     DATA   U_CHAR   0006H  1
  temp_data9 . . . . . . . . . . . . .  AUTO     DATA   U_CHAR   0007H  1
  temp_data10. . . . . . . . . . . . .  AUTO     DATA   U_CHAR   0008H  1
  temp_data11. . . . . . . . . . . . .  AUTO     DATA   U_CHAR   0009H  1
  temp_data12. . . . . . . . . . . . .  AUTO     DATA   U_CHAR   000AH  1
  temp_data13. . . . . . . . . . . . .  AUTO     DATA   U_CHAR   000BH  1
  temp_data14. . . . . . . . . . . . .  AUTO     DATA   U_CHAR   000CH  1
  temp_data15. . . . . . . . . . . . .  AUTO     DATA   U_CHAR   000DH  1
  temp_data16. . . . . . . . . . . . .  AUTO     DATA   U_CHAR   000EH  1
  temp_data17. . . . . . . . . . . . .  AUTO     DATA   U_CHAR   000FH  1
  temp_data18. . . . . . . . . . . . .  AUTO     DATA   U_CHAR   0010H  1
  temp_data19. . . . . . . . . . . . .  AUTO     DATA   U_CHAR   0011H  1
  temp_data20. . . . . . . . . . . . .  AUTO     DATA   U_CHAR   0012H  1
  temp_data21. . . . . . . . . . . . .  AUTO     DATA   U_CHAR   0013H  1
  temp_data22. . . . . . . . . . . . .  AUTO     DATA   U_CHAR   0014H  1
  temp_data23. . . . . . . . . . . . .  AUTO     DATA   U_CHAR   0015H  1
  temp_data24. . . . . . . . . . . . .  AUTO     DATA   U_CHAR   0016H  1
  temp_data25. . . . . . . . . . . . .  AUTO     DATA   U_CHAR   0017H  1
  temp_data26. . . . . . . . . . . . .  AUTO     DATA   U_CHAR   0018H  1
C51 COMPILER V9.50a   SHARK                                                                07/26/2013 11:07:39 PAGE 168 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  temp_data27. . . . . . . . . . . . .  AUTO     DATA   U_CHAR   0019H  1
  temp_data28. . . . . . . . . . . . .  AUTO     DATA   U_CHAR   001AH  1
  temp_data29. . . . . . . . . . . . .  AUTO     DATA   U_CHAR   001BH  1
  temp_data30. . . . . . . . . . . . .  AUTO     DATA   U_CHAR   001CH  1
  temp_data31. . . . . . . . . . . . .  AUTO     DATA   U_CHAR   001DH  1
  check_over . . . . . . . . . . . . .  LABEL    CODE   LABEL    -----  -----
g_security_HrM . . . . . . . . . . . .  ABSBIT   -----  BIT      0003H  1
read_sec_cnt_l . . . . . . . . . . . .  PUBLIC   IDATA  U_INT    0021H  2
uart_int_handler . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  uart_cmd_byte. . . . . . . . . . . .  * REG *  DATA   U_CHAR   0004H  1
  uart_b3. . . . . . . . . . . . . . .  * REG *  DATA   U_CHAR   0003H  1
  uart_b2. . . . . . . . . . . . . . .  * REG *  DATA   U_CHAR   0006H  1
  uart_b1. . . . . . . . . . . . . . .  AUTO     DATA   U_CHAR   0000H  1
  uart_b0. . . . . . . . . . . . . . .  * REG *  DATA   U_CHAR   0005H  1
  reg_addr . . . . . . . . . . . . . .  AUTO     DATA   UNION    0001H  2
_uart_send_R1. . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  tx_data. . . . . . . . . . . . . . .  * REG *  DATA   U_CHAR   0007H  1
u32_t. . . . . . . . . . . . . . . . .  TYPEDEF  -----  UNION    -----  4
  Word . . . . . . . . . . . . . . . .  MEMBER   -----  ARRAY    0000H  4
  Number . . . . . . . . . . . . . . .  MEMBER   -----  U_LONG   0000H  4
  No . . . . . . . . . . . . . . . . .  MEMBER   -----  ARRAY    0000H  4
trim_check_lba . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  i. . . . . . . . . . . . . . . . . .  AUTO     IDATA  U_CHAR   0000H  1
u16_t. . . . . . . . . . . . . . . . .  TYPEDEF  -----  UNION    -----  2
  byte . . . . . . . . . . . . . . . .  MEMBER   -----  STRUCT   0000H  2
  word . . . . . . . . . . . . . . . .  MEMBER   -----  U_INT    0000H  2
SFR_ext_sram_data. . . . . . . . . . .  SFR      DATA   U_CHAR   00F3H  1
SFR_cmd_aux. . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00D1H  1
SFR_SATA_done_num. . . . . . . . . . .  SFR      DATA   U_INT    00CEH  2
g_cont_en. . . . . . . . . . . . . . .  ABSBIT   -----  BIT      001DH  1
smart_status . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
SFR_ext_sram_addr. . . . . . . . . . .  SFR      DATA   U_INT    00F1H  2
SFR_sata_burst_cnt . . . . . . . . . .  SFR      DATA   U_INT    00DEH  2
lba_shift_right. . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
u64_t. . . . . . . . . . . . . . . . .  TYPEDEF  -----  UNION    -----  8
  word . . . . . . . . . . . . . . . .  MEMBER   -----  ARRAY    0000H  8
  No . . . . . . . . . . . . . . . . .  MEMBER   -----  ARRAY    0000H  8
BYTE . . . . . . . . . . . . . . . . .  TYPEDEF  -----  U_CHAR   -----  1
identify_device. . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  i. . . . . . . . . . . . . . . . . .  * REG *  DATA   U_INT    0006H  2
  tmp. . . . . . . . . . . . . . . . .  * REG *  DATA   U_CHAR   0007H  1
  tmp1 . . . . . . . . . . . . . . . .  AUTO     DATA   U_CHAR   0000H  1
  tmp2 . . . . . . . . . . . . . . . .  AUTO     DATA   UNION    0001H  2
check_power_loss . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
init . . . . . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  ii . . . . . . . . . . . . . . . . .  AUTO     DATA   U_INT    0000H  2
  start_phy. . . . . . . . . . . . . .  LABEL    CODE   LABEL    -----  -----
g_smart_offline_flag . . . . . . . . .  ABSBIT   -----  BIT      0012H  1
g_tmp_tag. . . . . . . . . . . . . . .  PUBLIC   IDATA  U_CHAR   0023H  1
self_test_routine. . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  tmp. . . . . . . . . . . . . . . . .  * REG *  DATA   U_CHAR   0007H  1
  self_test_over . . . . . . . . . . .  LABEL    CODE   LABEL    -----  -----
write_sec_cnt_h. . . . . . . . . . . .  PUBLIC   IDATA  U_CHAR   0024H  1
sata_burst_abort . . . . . . . . . . .  ABSBIT   -----  BIT      00EAH  1
dma_done . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00F8H  1
g_smart_nfirst_handle. . . . . . . . .  ABSBIT   -----  BIT      0020H  1
WORD . . . . . . . . . . . . . . . . .  TYPEDEF  -----  U_INT    -----  2
C51 COMPILER V9.50a   SHARK                                                                07/26/2013 11:07:39 PAGE 169 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


g_security_frozen. . . . . . . . . . .  ABSBIT   -----  BIT      0002H  1
TS8052_IPL . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00B8H  1
write_sec_cnt_l. . . . . . . . . . . .  PUBLIC   IDATA  U_INT    0025H  2
g_smart_handle_flag. . . . . . . . . .  PUBLIC   DATA   U_CHAR   0004H  1
_sata_burst. . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0003H  -----
  dir. . . . . . . . . . . . . . . . .  * REG *  DATA   U_CHAR   0007H  1
  cnt. . . . . . . . . . . . . . . . .  * REG *  DATA   U_CHAR   0005H  1
int0_handler . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
TS8052_T2CON . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00C8H  1
g_security_abort . . . . . . . . . . .  ABSBIT   -----  BIT      0007H  1
smart_card_crc . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  chp_sel. . . . . . . . . . . . . . .  AUTO     DATA   U_CHAR   0000H  1
  tmp. . . . . . . . . . . . . . . . .  AUTO     DATA   U_CHAR   0001H  1
  block_infor0 . . . . . . . . . . . .  AUTO     IDATA  U_CHAR   0000H  1
  block_infor1 . . . . . . . . . . . .  AUTO     IDATA  U_CHAR   0001H  1
  block_infor2 . . . . . . . . . . . .  AUTO     IDATA  U_CHAR   0002H  1
  block_infor3 . . . . . . . . . . . .  AUTO     IDATA  U_CHAR   0003H  1
  check_loop . . . . . . . . . . . . .  LABEL    CODE   LABEL    -----  -----
  handle . . . . . . . . . . . . . . .  LABEL    CODE   LABEL    -----  -----
  end_loop . . . . . . . . . . . . . .  LABEL    CODE   LABEL    -----  -----
g_smart_read_handle. . . . . . . . . .  ABSBIT   -----  BIT      0021H  1
int1_handler . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  tmp_flag . . . . . . . . . . . . . .  AUTO     DATA   U_CHAR   0000H  1
g_security_flag. . . . . . . . . . . .  PUBLIC   DATA   U_CHAR   0000H  1
g_smart_test_int . . . . . . . . . . .  ABSBIT   -----  BIT      0015H  1
save_lba . . . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
SFR_fis_num. . . . . . . . . . . . . .  SFR      DATA   U_CHAR   009FH  1
g_security_cnt_expired . . . . . . . .  ABSBIT   -----  BIT      0004H  1
intial_data_partition. . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  ii . . . . . . . . . . . . . . . . .  AUTO     DATA   U_CHAR   0000H  1
check_sec_cnt. . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
chp_status_high. . . . . . . . . . . .  PUBLIC   DATA   U_CHAR   0009H  1
sata_burst_done. . . . . . . . . . . .  ABSBIT   -----  BIT      00E8H  1
TS8052_CKCON . . . . . . . . . . . . .  SFR      DATA   U_CHAR   008EH  1
chp_clock_off. . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  chp_clock_off_over . . . . . . . . .  LABEL    CODE   LABEL    -----  -----
SFR_ext_sram_cntl. . . . . . . . . . .  SFR      DATA   U_CHAR   00F4H  1
dma_cont . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00FDH  1
security_initial . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
wait_chp_ready . . . . . . . . . . . .  PUBLIC   CODE   PROC     0006H  -----
_smart_log . . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  chp_cmd. . . . . . . . . . . . . . .  AUTO     DATA   U_CHAR   0000H  1
  smart_log_over . . . . . . . . . . .  LABEL    CODE   LABEL    -----  -----
smart_read_cnt . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  tmp. . . . . . . . . . . . . . . . .  * REG *  DATA   U_INT    0006H  2
g_smart_block_cnt_h. . . . . . . . . .  PUBLIC   IDATA  U_CHAR   0027H  1
_chp_burst . . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0011H  -----
  cmd. . . . . . . . . . . . . . . . .  AUTO     DATA   U_CHAR   0000H  1
  cnt. . . . . . . . . . . . . . . . .  AUTO     DATA   U_CHAR   0001H  1
  base_addr. . . . . . . . . . . . . .  AUTO     DATA   U_CHAR   0002H  1
g_security_lock. . . . . . . . . . . .  ABSBIT   -----  BIT      0001H  1
g_smart_write_handle . . . . . . . . .  ABSBIT   -----  BIT      0022H  1
trim_burst . . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  block_num. . . . . . . . . . . . . .  AUTO     DATA   UNION    0000H  4
cmp_lba. . . . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  discontinue. . . . . . . . . . . . .  LABEL    CODE   LABEL    -----  -----
g_smart_handle_flag_3. . . . . . . . .  ABSBIT   -----  BIT      0023H  1
C51 COMPILER V9.50a   SHARK                                                                07/26/2013 11:07:39 PAGE 170 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


g_smart_handle_flag_4. . . . . . . . .  ABSBIT   -----  BIT      0024H  1
_delay_ms. . . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  cnt. . . . . . . . . . . . . . . . .  * REG *  DATA   INT      0002H  2
  i. . . . . . . . . . . . . . . . . .  * REG *  DATA   U_INT    0082H  2
TS8052_PSW . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00D0H  1
g_smart_block_cnt_l. . . . . . . . . .  PUBLIC   IDATA  U_CHAR   0028H  1
g_smart_handle_flag_5. . . . . . . . .  ABSBIT   -----  BIT      0025H  1
gen_check_sum. . . . . . . . . . . . .  PUBLIC   CODE   PROC     0003H  -----
  temp . . . . . . . . . . . . . . . .  * REG *  DATA   U_CHAR   0007H  1
  sum. . . . . . . . . . . . . . . . .  * REG *  DATA   U_CHAR   0006H  1
  jj . . . . . . . . . . . . . . . . .  * REG *  DATA   U_INT    0004H  2
g_fis_tx_abort . . . . . . . . . . . .  ABSBIT   -----  BIT      001CH  1
g_smart_handle_flag_6. . . . . . . . .  ABSBIT   -----  BIT      0026H  1
sum. . . . . . . . . . . . . . . . . .  PUBLIC   IDATA  UNION    0029H  4
sata_burst_cont. . . . . . . . . . . .  ABSBIT   -----  BIT      00EDH  1
_tx_fis_34 . . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0006H  -----
  status . . . . . . . . . . . . . . .  * REG *  DATA   U_CHAR   0007H  1
  error. . . . . . . . . . . . . . . .  * REG *  DATA   U_CHAR   0005H  1
  flag . . . . . . . . . . . . . . . .  * REG *  DATA   U_CHAR   0003H  1
TS8052_P0. . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0080H  1
security_set_pwd . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
SFR_CHP_rdy. . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00D6H  1
TS8052_P1. . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0090H  1
soft_lba_add . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  tmp_data . . . . . . . . . . . . . .  * REG *  DATA   U_CHAR   0007H  1
SFR_dma_max_num. . . . . . . . . . . .  SFR      DATA   U_INT    00FBH  2
TS8052_P2. . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00A0H  1
u32. . . . . . . . . . . . . . . . . .  TYPEDEF  -----  U_LONG   -----  4
TS8052_P3. . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00B0H  1
_updata_smart_n. . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  smart_addr . . . . . . . . . . . . .  AUTO     DATA   U_CHAR   0000H  1
  smart_cnt. . . . . . . . . . . . . .  AUTO     DATA   U_CHAR   0001H  1
  tmp. . . . . . . . . . . . . . . . .  * REG *  DATA   U_CHAR   0007H  1
  tmp_data . . . . . . . . . . . . . .  * REG *  DATA   U_CHAR   0007H  1
SFR_CHP_en . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00D7H  1
u16. . . . . . . . . . . . . . . . . .  TYPEDEF  -----  U_INT    -----  2
fetch_block_border . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  addr . . . . . . . . . . . . . . . .  AUTO     DATA   UNION    0000H  2
  tmp. . . . . . . . . . . . . . . . .  AUTO     IDATA  UNION    0000H  4
  buf. . . . . . . . . . . . . . . . .  AUTO     IDATA  UNION    0004H  4
init_dev_para. . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  tmp8 . . . . . . . . . . . . . . . .  AUTO     IDATA  U_CHAR   0000H  1
  init_dev_para_err. . . . . . . . . .  LABEL    CODE   LABEL    -----  -----
g_security_pass. . . . . . . . . . . .  ABSBIT   -----  BIT      0006H  1
smart_write_cnt. . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  tmp. . . . . . . . . . . . . . . . .  * REG *  DATA   U_INT    0006H  2
send_trim_cmd. . . . . . . . . . . . .  PUBLIC   CODE   PROC     000DH  -----
  sec_cnt. . . . . . . . . . . . . . .  AUTO     DATA   UNION    0000H  4
  j. . . . . . . . . . . . . . . . . .  AUTO     DATA   U_CHAR   0004H  1
  block_size . . . . . . . . . . . . .  AUTO     IDATA  UNION    0000H  4
read_handler . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  temp_sel . . . . . . . . . . . . . .  * REG *  DATA   U_CHAR   0002H  1
  temp8. . . . . . . . . . . . . . . .  AUTO     DATA   U_CHAR   0000H  1
  temp_lba_low . . . . . . . . . . . .  * REG *  DATA   U_CHAR   0001H  1
  boundary_check . . . . . . . . . . .  AUTO     DATA   U_CHAR   0001H  1
  read_cont. . . . . . . . . . . . . .  LABEL    CODE   LABEL    -----  -----
  read_handler_err . . . . . . . . . .  LABEL    CODE   LABEL    -----  -----
C51 COMPILER V9.50a   SHARK                                                                07/26/2013 11:07:39 PAGE 171 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  read_handler_over. . . . . . . . . .  LABEL    CODE   LABEL    -----  -----
g_flag . . . . . . . . . . . . . . . .  PUBLIC   DATA   U_CHAR   0003H  1
reg_type . . . . . . . . . . . . . . .  TYPEDEF  -----  STRUCT   -----  248
  flag_0 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  FIS_error. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  RESV002. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  RESV003. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  FIS_estatus. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  FIS_pio_xfer_cnt_l . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  FIS_pio_xfer_cnt_h . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  RESV007. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  RESV008. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  RESV009. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  RESV00A. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  FIS_status . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  RESV00CDEF . . . . . . . . . . . . .  MEMBER   -----  U_LONG   000CH  4
  FIS_feature. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0010H  1
  FIS_feature_ext. . . . . . . . . . .  MEMBER   -----  U_CHAR   0011H  1
  FIS_device . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0012H  1
  FIS_pm . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0013H  1
  FIS_seccnt . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0014H  1
  FIS_seccnt_ext . . . . . . . . . . .  MEMBER   -----  U_CHAR   0015H  1
  FIS_lba_low. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0016H  1
  FIS_lba_low_ext. . . . . . . . . . .  MEMBER   -----  U_CHAR   0017H  1
  FIS_lba_mid. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0018H  1
  FIS_lba_mid_ext. . . . . . . . . . .  MEMBER   -----  U_CHAR   0019H  1
  FIS_lba_high . . . . . . . . . . . .  MEMBER   -----  U_CHAR   001AH  1
  FIS_lba_high_ext . . . . . . . . . .  MEMBER   -----  U_CHAR   001BH  1
  RESV01C. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   001CH  1
  RESV01D. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   001DH  1
  ncq_cntl . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   001EH  1
  quick_sactive. . . . . . . . . . . .  MEMBER   -----  U_CHAR   001FH  1
  phy_cntl . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0020H  1
  RESV021. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0021H  1
  RESV022. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0022H  1
  RESV023. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0023H  1
  RESV024. . . . . . . . . . . . . . .  MEMBER   -----  U_LONG   0024H  4
  RESV028. . . . . . . . . . . . . . .  MEMBER   -----  U_LONG   0028H  4
  RESV02C. . . . . . . . . . . . . . .  MEMBER   -----  U_LONG   002CH  4
  RESV030. . . . . . . . . . . . . . .  MEMBER   -----  U_LONG   0030H  4
  rst_cntl . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0034H  1
  int1_status. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0035H  1
  int1_en. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0036H  1
  FIS_type . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0037H  1
  bist_mode. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0038H  1
  RESV039. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0039H  1
  RESV03A. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   003AH  1
  RESV03B. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   003BH  1
  power_cntl . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   003CH  1
  int2_status. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   003DH  1
  int2_en. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   003EH  1
  RESV03F. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   003FH  1
  FIS_content_1_0. . . . . . . . . . .  MEMBER   -----  U_CHAR   0040H  1
  FIS_content_1_1. . . . . . . . . . .  MEMBER   -----  U_CHAR   0041H  1
  FIS_content_1_2. . . . . . . . . . .  MEMBER   -----  U_CHAR   0042H  1
  FIS_content_1_3. . . . . . . . . . .  MEMBER   -----  U_CHAR   0043H  1
  FIS_content_2_0. . . . . . . . . . .  MEMBER   -----  U_CHAR   0044H  1
C51 COMPILER V9.50a   SHARK                                                                07/26/2013 11:07:39 PAGE 172 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  FIS_content_2_1. . . . . . . . . . .  MEMBER   -----  U_CHAR   0045H  1
  FIS_content_2_2. . . . . . . . . . .  MEMBER   -----  U_CHAR   0046H  1
  FIS_content_2_3. . . . . . . . . . .  MEMBER   -----  U_CHAR   0047H  1
  FIS_content_4_0. . . . . . . . . . .  MEMBER   -----  U_CHAR   0048H  1
  FIS_content_4_1. . . . . . . . . . .  MEMBER   -----  U_CHAR   0049H  1
  FIS_content_4_2. . . . . . . . . . .  MEMBER   -----  U_CHAR   004AH  1
  FIS_content_4_3. . . . . . . . . . .  MEMBER   -----  U_CHAR   004BH  1
  FIS_content_5_0. . . . . . . . . . .  MEMBER   -----  U_CHAR   004CH  1
  FIS_content_5_1. . . . . . . . . . .  MEMBER   -----  U_CHAR   004DH  1
  FIS_content_5_2. . . . . . . . . . .  MEMBER   -----  U_CHAR   004EH  1
  FIS_content_5_3. . . . . . . . . . .  MEMBER   -----  U_CHAR   004FH  1
  RESV050. . . . . . . . . . . . . . .  MEMBER   -----  U_LONG   0050H  4
  ope_a. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0054H  1
  ope_b. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0055H  1
  auto_power_set . . . . . . . . . . .  MEMBER   -----  U_CHAR   0056H  1
  CHP_stripe_h . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0057H  1
  sactive_0. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0058H  1
  sactive_1. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0059H  1
  sactive_2. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   005AH  1
  sactive_3. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   005BH  1
  CHP0_status_high . . . . . . . . . .  MEMBER   -----  U_CHAR   005CH  1
  CHP1_status_high . . . . . . . . . .  MEMBER   -----  U_CHAR   005DH  1
  CHP2_status_high . . . . . . . . . .  MEMBER   -----  U_CHAR   005EH  1
  CHP3_status_high . . . . . . . . . .  MEMBER   -----  U_CHAR   005FH  1
  phy_set_0. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0060H  1
  phy_set_1. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0061H  1
  phy_set_2. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0062H  1
  phy_set_3. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0063H  1
  phy_set_4. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0064H  1
  phy_set_5. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0065H  1
  phy_set_6. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0066H  1
  phy_set_7. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0067H  1
  phy_set_8. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0068H  1
  phy_set_9. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0069H  1
  RESV06A. . . . . . . . . . . . . . .  MEMBER   -----  U_INT    006AH  2
  RESV06C. . . . . . . . . . . . . . .  MEMBER   -----  U_LONG   006CH  4
  CHP0_status. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0070H  1
  CHP1_status. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0071H  1
  CHP2_status. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0072H  1
  CHP3_status. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0073H  1
  CHP4_status. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0074H  1
  RESV076. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0075H  1
  CHP4_status_high . . . . . . . . . .  MEMBER   -----  U_CHAR   0076H  1
  RESV077. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0077H  1
  SUP_LBA0 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0078H  1
  SUP_LBA1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0079H  1
  SUP_LBA2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   007AH  1
  SUP_LBA3 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   007BH  1
  SUP_LBA4 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   007CH  1
  SUP_LBA5 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   007DH  1
  CHP_cmd. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   007EH  1
  CHP_stripe . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   007FH  1
  fis_rcv_content. . . . . . . . . . .  MEMBER   -----  ARRAY    0080H  32
  COMRESET_LOW . . . . . . . . . . . .  MEMBER   -----  U_CHAR   00A0H  1
  COMRESET_HIGH. . . . . . . . . . . .  MEMBER   -----  U_CHAR   00A1H  1
  COMWAKE_LOW. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   00A2H  1
  COMWAKE_HIGH . . . . . . . . . . . .  MEMBER   -----  U_CHAR   00A3H  1
C51 COMPILER V9.50a   SHARK                                                                07/26/2013 11:07:39 PAGE 173 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  RESV0A4. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   00A4H  1
  RESV0A5. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   00A5H  1
  RESV0A6. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   00A6H  1
  RESV0A7. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   00A7H  1
  fifo_base_sata . . . . . . . . . . .  MEMBER   -----  U_INT    00A8H  2
  fifo_base_chp. . . . . . . . . . . .  MEMBER   -----  U_INT    00AAH  2
  counter_low. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   00ACH  1
  counter_mid. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   00ADH  1
  counter_high . . . . . . . . . . . .  MEMBER   -----  U_CHAR   00AEH  1
  force_CHP. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   00AFH  1
  RESV0B0. . . . . . . . . . . . . . .  MEMBER   -----  U_LONG   00B0H  4
  RESV0B4. . . . . . . . . . . . . . .  MEMBER   -----  U_LONG   00B4H  4
  watch_dog_cnt_high . . . . . . . . .  MEMBER   -----  U_CHAR   00B8H  1
  watch_dog_cnt_mid. . . . . . . . . .  MEMBER   -----  U_CHAR   00B9H  1
  watch_dog_cnt_low. . . . . . . . . .  MEMBER   -----  U_CHAR   00BAH  1
  watch_dog_low. . . . . . . . . . . .  MEMBER   -----  U_CHAR   00BBH  1
  watch_dog_cntl . . . . . . . . . . .  MEMBER   -----  U_CHAR   00BCH  1
  RESV0BD. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   00BDH  1
  REGULATOR_SETTING_l. . . . . . . . .  MEMBER   -----  U_CHAR   00BEH  1
  REGULATOR_SETTING_h. . . . . . . . .  MEMBER   -----  U_CHAR   00BFH  1
  max_lba. . . . . . . . . . . . . . .  MEMBER   -----  ARRAY    00C0H  6
  chp_bus_sel. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   00C6H  1
  ext_int1_status. . . . . . . . . . .  MEMBER   -----  U_CHAR   00C7H  1
  RESV0C8. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   00C8H  1
  RESV0C9. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   00C9H  1
  RESV0CA. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   00CAH  1
  RESV0CB. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   00CBH  1
  CHP_clock_set. . . . . . . . . . . .  MEMBER   -----  U_CHAR   00CCH  1
  CHP_cmd_sel. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   00CDH  1
  link_tune. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   00CEH  1
  oob_tune . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   00CFH  1
  uart_config. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   00D0H  1
  uart_int . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   00D1H  1
  uart_status. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   00D2H  1
  RESV0D3. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   00D3H  1
  uart_baudrate_low. . . . . . . . . .  MEMBER   -----  U_CHAR   00D4H  1
  uart_baudrate_high . . . . . . . . .  MEMBER   -----  U_CHAR   00D5H  1
  RESV0D6. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   00D6H  1
  RESV0D7. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   00D7H  1
  uart_rx_stat0. . . . . . . . . . . .  MEMBER   -----  U_CHAR   00D8H  1
  uart_rx_stat1. . . . . . . . . . . .  MEMBER   -----  U_CHAR   00D9H  1
  uart_rx_stat2. . . . . . . . . . . .  MEMBER   -----  U_CHAR   00DAH  1
  uart_rx_stat3. . . . . . . . . . . .  MEMBER   -----  U_CHAR   00DBH  1
  uart_tx_stat0. . . . . . . . . . . .  MEMBER   -----  U_CHAR   00DCH  1
  uart_tx_stat1. . . . . . . . . . . .  MEMBER   -----  U_CHAR   00DDH  1
  uart_tx_stat2. . . . . . . . . . . .  MEMBER   -----  U_CHAR   00DEH  1
  uart_tx_stat3. . . . . . . . . . . .  MEMBER   -----  U_CHAR   00DFH  1
  uart_tx_data . . . . . . . . . . . .  MEMBER   -----  U_CHAR   00E0H  1
  uart_rx_data . . . . . . . . . . . .  MEMBER   -----  U_CHAR   00E1H  1
  uart_rx_thresh_low . . . . . . . . .  MEMBER   -----  U_CHAR   00E2H  1
  uart_rx_thresh_high. . . . . . . . .  MEMBER   -----  U_CHAR   00E3H  1
  uart_tx_thresh_low . . . . . . . . .  MEMBER   -----  U_CHAR   00E4H  1
  uart_tx_thresh_high. . . . . . . . .  MEMBER   -----  U_CHAR   00E5H  1
  RESV0E6. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   00E6H  1
  RESV0E7. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   00E7H  1
  RESV0E8. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   00E8H  1
  RESV0E9. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   00E9H  1
C51 COMPILER V9.50a   SHARK                                                                07/26/2013 11:07:39 PAGE 174 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  RESV0EA. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   00EAH  1
  RESV0EB. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   00EBH  1
  RESV0EC. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   00ECH  1
  RESV0ED. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   00EDH  1
  RESV0EE. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   00EEH  1
  RESV0EF. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   00EFH  1
  led0_blink . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   00F0H  1
  led0_cntl. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   00F1H  1
  led1_tunit . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   00F2H  1
  led1_period. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   00F3H  1
  led1_bright. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   00F4H  1
  led1_repeat. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   00F5H  1
  led1_cntl. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   00F6H  1
  RESV0F7. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   00F7H  1
g_chp_active . . . . . . . . . . . . .  ABSBIT   -----  BIT      001EH  1
temp_data0 . . . . . . . . . . . . . .  PUBLIC   DATA   U_CHAR   000AH  1
temp_data1 . . . . . . . . . . . . . .  PUBLIC   DATA   U_CHAR   000BH  1
temp_id. . . . . . . . . . . . . . . .  PUBLIC   DATA   U_CHAR   000CH  1
_uart_print_byte . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  tx_data. . . . . . . . . . . . . . .  * REG *  DATA   U_CHAR   0003H  1
  tmp_data . . . . . . . . . . . . . .  * REG *  DATA   U_CHAR   0007H  1
TS8052_IE. . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00A8H  1
i. . . . . . . . . . . . . . . . . . .  PUBLIC   DATA   U_CHAR   000DH  1
smart_block_handle . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  chp_sel. . . . . . . . . . . . . . .  AUTO     DATA   U_CHAR   0000H  1
  block_infor0 . . . . . . . . . . . .  AUTO     DATA   U_CHAR   0001H  1
  block_infor1 . . . . . . . . . . . .  AUTO     DATA   U_CHAR   0002H  1
  block_infor2 . . . . . . . . . . . .  AUTO     DATA   U_CHAR   0003H  1
  block_infor3 . . . . . . . . . . . .  AUTO     DATA   U_CHAR   0004H  1
  block_infor4 . . . . . . . . . . . .  AUTO     DATA   U_CHAR   0005H  1
  block_infor5 . . . . . . . . . . . .  AUTO     DATA   U_CHAR   0006H  1
  block_infor6 . . . . . . . . . . . .  AUTO     DATA   U_CHAR   0007H  1
  check_loop . . . . . . . . . . . . .  LABEL    CODE   LABEL    -----  -----
  handle . . . . . . . . . . . . . . .  LABEL    CODE   LABEL    -----  -----
  end_loop . . . . . . . . . . . . . .  LABEL    CODE   LABEL    -----  -----
_smart_data_handler. . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  base_sec . . . . . . . . . . . . . .  AUTO     DATA   U_CHAR   0000H  1
  sec_cnt. . . . . . . . . . . . . . .  AUTO     DATA   U_CHAR   0001H  1
  chp_cmd. . . . . . . . . . . . . . .  AUTO     DATA   U_CHAR   0002H  1
  pio_interrput. . . . . . . . . . . .  AUTO     DATA   U_CHAR   0003H  1
  cur_cnt. . . . . . . . . . . . . . .  AUTO     DATA   U_CHAR   0004H  1
chp_clock_on . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
wchar_t. . . . . . . . . . . . . . . .  TYPEDEF  -----  CHAR     -----  1
smart_handler. . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  smart_handler_err. . . . . . . . . .  LABEL    CODE   LABEL    -----  -----
g_smart_abort. . . . . . . . . . . . .  ABSBIT   -----  BIT      0017H  1
g_smart_read_flag. . . . . . . . . . .  ABSBIT   -----  BIT      0013H  1
security_unlock. . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
smart_erase_handle . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  tmp. . . . . . . . . . . . . . . . .  AUTO     DATA   U_CHAR   0000H  1
  chp_sel. . . . . . . . . . . . . . .  AUTO     DATA   U_CHAR   0001H  1
  erase_infor0 . . . . . . . . . . . .  AUTO     DATA   U_CHAR   0002H  1
  erase_infor1 . . . . . . . . . . . .  AUTO     DATA   U_CHAR   0003H  1
  erase_infor2 . . . . . . . . . . . .  AUTO     DATA   U_CHAR   0004H  1
  erase_infor3 . . . . . . . . . . . .  AUTO     DATA   U_CHAR   0005H  1
  pe . . . . . . . . . . . . . . . . .  AUTO     DATA   UNION    0006H  4
  erase. . . . . . . . . . . . . . . .  AUTO     DATA   UNION    000AH  4
C51 COMPILER V9.50a   SHARK                                                                07/26/2013 11:07:39 PAGE 175 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  cnt. . . . . . . . . . . . . . . . .  AUTO     DATA   U_CHAR   000EH  1
  handle . . . . . . . . . . . . . . .  LABEL    CODE   LABEL    -----  -----
  end_handle . . . . . . . . . . . . .  LABEL    CODE   LABEL    -----  -----
g_smart_flag . . . . . . . . . . . . .  PUBLIC   DATA   U_CHAR   0002H  1
SFR_FIS0_0 . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0091H  1
SFR_FIS0_1 . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0095H  1
analyze_states . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
write_handler. . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  write_cont . . . . . . . . . . . . .  LABEL    CODE   LABEL    -----  -----
  write_handler_err. . . . . . . . . .  LABEL    CODE   LABEL    -----  -----
  write_handler_over . . . . . . . . .  LABEL    CODE   LABEL    -----  -----
SFR_FIS0_2 . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0096H  1
smart_offline. . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
chs_cmp_lba. . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  discontinue. . . . . . . . . . . . .  LABEL    CODE   LABEL    -----  -----
va_list. . . . . . . . . . . . . . . .  TYPEDEF  -----  PTR      -----  3
bist_handler . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
g_lba. . . . . . . . . . . . . . . . .  PUBLIC   DATA   ARRAY    000EH  6
chp_status_low . . . . . . . . . . . .  PUBLIC   DATA   U_CHAR   0014H  1
SFR_smart_load . . . . . . . . . . . .  SFR      DATA   U_CHAR   00C9H  1
SFR_SATA_done_num_h. . . . . . . . . .  SFR      DATA   U_CHAR   00E5H  1
g_smart_attribute_autosave . . . . . .  ABSBIT   -----  BIT      0011H  1
SFR_sata_burst_cnt_h . . . . . . . . .  SFR      DATA   U_CHAR   00DFH  1
g_cap. . . . . . . . . . . . . . . . .  PUBLIC   IDATA  ARRAY    002DH  16
SFR_dma_base . . . . . . . . . . . . .  SFR      DATA   U_INT    00F9H  2


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =  11113    ----
   CONSTANT SIZE    =    230    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     26     138
   IDATA SIZE       =     61      30
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
